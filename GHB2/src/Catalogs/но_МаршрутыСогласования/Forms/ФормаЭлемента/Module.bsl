
#Область ОбработчикиСобытийФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаПодписейСотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ТаблицаПодписей.ТекущиеДанные;
    СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	СтрокаТЧ.Подразделение = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ПодразделенияОрганизацийБазХолдинга");
	СтрокаТЧ.РольДокументооборота = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_РолиДокументооборота");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейРольДокументооборотаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ТаблицаПодписей.ТекущиеДанные;
    СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	СтрокаТЧ.Подразделение = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ПодразделенияОрганизацийБазХолдинга");
	СтрокаТЧ.Сотрудник = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ФизическиеЛица");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейПодразделениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ТаблицаПодписей.ТекущиеДанные;
	СтрокаТЧ.Сотрудник = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ФизическиеЛица");
	СтрокаТЧ.РольДокументооборота = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_РолиДокументооборота");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейДолжностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЗначениеЗаполнено(Элементы.ТаблицаПодписей.ТекущиеДанные.Подразделение);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейПодразделениеПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.ТаблицаПодписей.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Подразделение) Тогда
		СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПодписиРольДокументооборотаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ДополнительныеПодписи.ТекущиеДанные;
	СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	СтрокаТЧ.Подразделение = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ПодразделенияОрганизацийБазХолдинга");
	СтрокаТЧ.Сотрудник = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ФизическиеЛица");
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПодписиСотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ДополнительныеПодписи.ТекущиеДанные;
	СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	СтрокаТЧ.Подразделение = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ПодразделенияОрганизацийБазХолдинга");
	СтрокаТЧ.РольДокументооборота = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_РолиДокументооборота");
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПодписиПодразделениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ДополнительныеПодписи.ТекущиеДанные;
	СтрокаТЧ.РольДокументооборота = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_РолиДокументооборота");
	СтрокаТЧ.Сотрудник = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ФизическиеЛица");
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПодписиДолжностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЗначениеЗаполнено(Элементы.ДополнительныеПодписи.ТекущиеДанные.Подразделение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПодписиПодразделениеПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.ДополнительныеПодписи.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Подразделение) Тогда
		СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийРольДокументооборотаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтрокаТЧ = Элементы.ТаблицаУведомлений.ТекущиеДанные;
	СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	СтрокаТЧ.Подразделение = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ПодразделенияОрганизацийБазХолдинга");
	СтрокаТЧ.Сотрудник = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ФизическиеЛица");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийСотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ТаблицаУведомлений.ТекущиеДанные;
	СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	СтрокаТЧ.Подразделение = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ПодразделенияОрганизацийБазХолдинга");
	СтрокаТЧ.РольДокументооборота = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_РолиДокументооборота");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийПодразделениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ТаблицаУведомлений.ТекущиеДанные;
	СтрокаТЧ.РольДокументооборота = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_РолиДокументооборота");
	СтрокаТЧ.Сотрудник = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ФизическиеЛица");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийДолжностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЗначениеЗаполнено(Элементы.ТаблицаУведомлений.ТекущиеДанные.Подразделение);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийПодразделениеПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.ТаблицаУведомлений.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Подразделение) Тогда
		СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеУведомленияРольДокументооборотаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ДополнительныеУведомления.ТекущиеДанные;
	СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	СтрокаТЧ.Подразделение = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ПодразделенияОрганизацийБазХолдинга");
	СтрокаТЧ.Сотрудник = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ФизическиеЛица");
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеУведомленияСотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ДополнительныеУведомления.ТекущиеДанные;
	СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	СтрокаТЧ.Подразделение = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ПодразделенияОрганизацийБазХолдинга");
	СтрокаТЧ.РольДокументооборота = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_РолиДокументооборота");
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеУведомленияПодразделениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТЧ = Элементы.ДополнительныеУведомления.ТекущиеДанные;
	СтрокаТЧ.РольДокументооборота = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_РолиДокументооборота");
	СтрокаТЧ.Сотрудник = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ФизическиеЛица");
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеУведомленияПодразделениеПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.ДополнительныеУведомления.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Подразделение) Тогда
		СтрокаТЧ.Должность = гхб_ДокументооборотСервер.ВернутьПустоеЗначениеСправочника("гхб_ДолжностиОрганизацийБазХолдинга");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеУведомленияДолжностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЗначениеЗаполнено(Элементы.ДополнительныеУведомления.ТекущиеДанные.Подразделение);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейПередУдалением(Элемент, Отказ)
	
	ТД = Элементы.ТаблицаПодписей.ТекущиеДанные;
	
	Если (ТД = Неопределено) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УдалитьДополнительныеПодписи(ТД.УИД);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийПередУдалением(Элемент, Отказ)
	
	ТД = Элементы.ТаблицаУведомлений.ТекущиеДанные;
	
	Если (ТД = Неопределено) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УдалитьДополнительныеУведомления(ТД.УИД);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НоваяСтрока И НЕ ОтменаРедактирования Тогда
		ТД = Элемент.ТекущиеДанные;	
		ТД.УИД = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НоваяСтрока И НЕ ОтменаРедактирования Тогда
		ТД = Элемент.ТекущиеДанные;	
		ТД.УИД = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейПриАктивизацииСтроки(Элемент)
	
	ТД = Элементы.ТаблицаПодписей.ТекущиеДанные;
	Элементы.ДополнительныеПодписи.ОтборСтрок = Новый ФиксированнаяСтруктура("УИД", 
		?(ТД = Неопределено ИЛИ ПустаяСтрока(ТД.УИД), "№№№", ТД.УИД));
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийПриАктивизацииСтроки(Элемент)
	
	ТД = Элементы.ТаблицаУведомлений.ТекущиеДанные;
	Элементы.ДополнительныеУведомления.ОтборСтрок = Новый ФиксированнаяСтруктура("УИД", 
		?(ТД = Неопределено ИЛИ ПустаяСтрока(ТД.УИД), "№№№", ТД.УИД));
		
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПодписиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТД = Элементы.ТаблицаПодписей.ТекущиеДанные;
	
	Если (ТД = Неопределено) Тогда
		ОтменаРедактирования = Истина;
		Возврат;
	КонецЕсли;
	
	ТекСтрока = Элемент.ТекущиеДанные;	
	
	Если НоваяСтрока И НЕ ОтменаРедактирования Тогда
		ТекСтрока.УИД = ТД.УИД;
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеУведомленияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТД = Элементы.ТаблицаУведомлений.ТекущиеДанные;
	
	Если (ТД = Неопределено) Тогда
		ОтменаРедактирования = Истина;
		Возврат;
	КонецЕсли;
	
	ТекСтрока = Элемент.ТекущиеДанные;	
	
	Если НоваяСтрока И НЕ ОтменаРедактирования Тогда
		ТекСтрока.УИД = ТД.УИД;
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПодписиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если (Элементы.ТаблицаПодписей.ТекущиеДанные = Неопределено) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеУведомленияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если (Элементы.ТаблицаУведомлений.ТекущиеДанные = Неопределено) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПодписиПередНачаломИзменения(Элемент, Отказ)
	
	Если (Элементы.ТаблицаПодписей.ТекущиеДанные = Неопределено) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеУведомленияПередНачаломИзменения(Элемент, Отказ)
	
	Если (Элементы.ТаблицаУведомлений.ТекущиеДанные = Неопределено) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейПредставлениеУсловияВхожденияОчистка(Элемент, СтандартнаяОбработка)
	
	ТД = Элементы.ТаблицаПодписей.ТекущиеДанные;
	
	Если (ТД = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	ТД.УсловиеВхожденияВМаршрут = "";
	
	//_ОбъектДок = РеквизитФормыВЗначение("Объект", Тип("СправочникОбъект.но_МаршрутыСогласования"));
	//_ОбъектДок.ОчиститьДанныеУсловия(1, ТД.УИД);
	//ЗначениеВРеквизитФормы(_ОбъектДок, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейПредставлениеУсловияВхожденияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЭтоНовыйОбъект() Тогда
		Предупреждение("Необходима вначале записать маршрут");
		Возврат;
	Конецесли;
		
	Если НЕ ЗначениеЗаполнено(Объект.ТипДокумента) Тогда
		Предупреждение("Не указан тип документа, к которому относится данный маршрут");
		Возврат;
	КонецЕсли;
	
    _ИмяДокумента = гхб_ДокументооборотСервер.ВернутьИмяДокументаПоТипу(Объект.ТипДокумента);
	
	Если ПустаяСтрока(_ИмяДокумента) Тогда
		Предупреждение("Некорректно определился тип документа, с которым связан маршрут");
		Возврат;
	КонецЕсли;
	
	_Построитель = ВернутьПостроитель(_ИмяДокумента, Элементы.ТаблицаПодписей.ТекущиеДанные.УсловиеВхожденияВМаршрут);
	
	Если ТипЗнч(_Построитель) = Тип("Структура") Тогда
		Предупреждение(_Построитель.Ошибка, 30);
		Возврат;
	КонецЕсли;
	
	гхб_ДокументооборотСервер.ВосстановитьХранилищеОтборовВПостроитель(_Построитель, Элементы.ТаблицаПодписей.ТекущиеДанные.УсловиеВхожденияВМаршрут);
	
	Представление = "";
	ЗаданныеНастройки = гхб_ДокументооборотКлиент.ЗаполнитьПользователемНастройки(_Построитель, Представление);
	
	Если (ЗаданныеНастройки <> Неопределено) Тогда
		Элементы.ТаблицаПодписей.ТекущиеДанные.УсловиеВхожденияВМаршрут = ЗаданныеНастройки;
		Элементы.ТаблицаПодписей.ТекущиеДанные.ПредставлениеУсловияВхождения = Представление;
		Модифицированность = Истина;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийПредставлениеУсловияВхожденияОчистка(Элемент, СтандартнаяОбработка)
	
	ТД = Элементы.ТаблицаУведомлений.ТекущиеДанные;
	
	Если (ТД = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	ТД.УсловиеВхожденияВМаршрут = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУведомленийПредставлениеУсловияВхожденияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЭтоНовыйОбъект() Тогда
		Предупреждение("Необходима вначале записать маршрут");
		Возврат;
	Конецесли;
		
	Если НЕ ЗначениеЗаполнено(Объект.ТипДокумента) Тогда
		Предупреждение("Не указан тип документа, к которому относится данный маршрут");
		Возврат;
	КонецЕсли;
	
    _ИмяДокумента = гхб_ДокументооборотСервер.ВернутьИмяДокументаПоТипу(Объект.ТипДокумента);
	
	Если ПустаяСтрока(_ИмяДокумента) Тогда
		Предупреждение("Некорректно определился тип документа, с которым связан маршрут");
		Возврат;
	КонецЕсли;
	
	_Построитель = ВернутьПостроитель(_ИмяДокумента, Элементы.ТаблицаУведомлений.ТекущиеДанные.УсловиеВхожденияВМаршрут);
	
	Если ТипЗнч(_Построитель) = Тип("Структура") Тогда
		Предупреждение(_Построитель.Ошибка, 30);
		Возврат;
	КонецЕсли;
	
	гхб_ДокументооборотСервер.ВосстановитьХранилищеОтборовВПостроитель(_Построитель, Элементы.ТаблицаУведомлений.ТекущиеДанные.УсловиеВхожденияВМаршрут);
	
	Представление = "";
	ЗаданныеНастройки = гхб_ДокументооборотКлиент.ЗаполнитьПользователемНастройки(_Построитель, Представление);
	
	Если (ЗаданныеНастройки <> Неопределено) Тогда
		Элементы.ТаблицаУведомлений.ТекущиеДанные.УсловиеВхожденияВМаршрут = ЗаданныеНастройки;
		Элементы.ТаблицаУведомлений.ТекущиеДанные.ПредставлениеУсловияВхождения = Представление;
		Модифицированность = Истина;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура УдалитьДополнительныеПодписи(_УИД)
	
	ф = Объект.ДополнительныеПодписи.Количество() - 1;
	
	Пока ф >= 0 Цикл 
		Если (Объект.ДополнительныеПодписи.Получить(ф).УИД = _УИД) Тогда
			Объект.ДополнительныеПодписи.Удалить(ф);
		КонецЕсли;
		
		ф = ф - 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДополнительныеУведомления(_УИД)
	
	ф = Объект.ДополнительныеУведомления.Количество() - 1;
	
	Пока ф >= 0 Цикл 
		Если (Объект.ДополнительныеУведомления.Получить(ф).УИД = _УИД) Тогда
			Объект.ДополнительныеУведомления.Удалить(ф);
		КонецЕсли;
		
		ф = ф - 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЭтоНовыйОбъект()
	
	_ОбъектДок = РеквизитФормыВЗначение("Объект", Тип("СправочникОбъект.но_МаршрутыСогласования"));
	Возврат _ОбъектДок.ЭтоНовый();
	
КонецФункции

&НаСервере
Функция ВернутьМетаданныеДокумента(_ИмяДокумента)
	
	Возврат Метаданные.Документы.Найти(_ИмяДокумента);
	
КонецФункции

&НаСервере
Функция ВернутьПостроитель(_ИмяДокумента, _УсловияВхождения)
	
	МетаданныеОбъекта = ВернутьМетаданныеДокумента(_ИмяДокумента);

	Если (МетаданныеОбъекта = Неопределено) Тогда
		Возврат Новый Структура("Ошибка", "Документ, указанного типа, не найден в базе данных");
	КонецЕсли;
	
	Построитель = гхб_ДокументооборотСервер.ПолучитьПостроительДляОбъекта(МетаданныеОбъекта);
	
	ЭтаФорма._Постр = Построитель;
	
	//Возврат ПоместитьВоВременноеХранилище(Построитель, Новый УникальныйИдентификатор);
	Возврат Построитель;
	
КонецФункции

#КонецОбласти
