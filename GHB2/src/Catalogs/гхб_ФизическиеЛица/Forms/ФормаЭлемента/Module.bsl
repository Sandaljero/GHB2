
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//++ p.lukashov(08.05.2020) #13645
	УстановитьПеременныеИПараметрыФормы();
	//-- p.lukashov(08.05.2020)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ЗаполнитьКоличествоЭлементовВЗаголовкахЗакладок();
		ОбновитьДеревоКадровыхДанных();
		
	КонецЕсли;
	
	УстановитьВидимостьКолонкиБудущаяБлокировка();
	
	//++ a.romanchuk 25.05.2020 #
	ВывестиФотоСотрудника();
	//-- a.romanchuk 25.05.2020 #
	
	// ++ Тогушаков 24.06.2020 # \\
	УстановитьФИОАнглийское();
	// -- Тогушаков 24.06.2020 #
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФизЛицаБазХолдингаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)	
	ПоказатьТекущееЗначение("ФизЛицаБазХолдинга");
КонецПроцедуры

&НаКлиенте
Процедура ПользователиБазХолдингаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьТекущееЗначение("ПользователиБазХолдинга");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиБазХолдингаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьТекущееЗначение("СотрудникиБазХолдинга");
КонецПроцедуры

&НаКлиенте
Процедура ТипОтображенияКонтактнойИнформацииПриИзменении(Элемент)
	КонтактнаяИнформация.Параметры.УстановитьЗначениеПараметра("ТипОтображенияКонтактнойИнформации", ТипОтображенияКонтактнойИнформации);	
КонецПроцедуры

#КонецОбласти

#Область Команды
	
&НаКлиенте
Процедура ЗаблокироватьПользователя(Команда)
	
	ПоказатьВводДаты(Новый ОписаниеОповещения("ОбработкаКомандыЗаблокироватьПользователя", ЭтотОбъект), 
					ВернутьТекущуюДатуСеанса(), "Введите дату блокировки пользователя", ЧастиДаты.Дата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьТекущуюДатуСеанса()
	
	Возврат ТекущаяДатаСеанса();
	
КонецФункции

&НаКлиенте
Процедура СкопироватьДоменноеИмя(Команда)
	СкопироватьНастройкуПоТекущейСтроке("ФизЛицаБазХолдинга");
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьКонтактнуюИнформацию(Команда)
	СкопироватьНастройкуПоТекущейСтроке("КонтактнаяИнформация");
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоЭлементовВЗаголовкахЗакладок()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	гхб_ПользователиБазХолдинга.Ссылка КАК Ссылка,
	|	гхб_ПользователиБазХолдинга.Наименование КАК Наименование,
	|	гхб_ПользователиБазХолдинга.GUIDБазыХолдинга КАК GUIDБазыХолдинга,
	|	гхб_ПользователиБазХолдинга.БазаХолдинга КАК БазаХолдинга,
	|	ДатыБлокировокПользователейБазХолдингаСрезПоследних.Блокирован КАК Блокирован
	|ИЗ
	|	Справочник.гхб_ПользователиБазХолдинга КАК гхб_ПользователиБазХолдинга
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	|		ПО гхб_ПользователиБазХолдинга.ФизЛицоБазыХолдинга = гхб_ФизическиеЛицаБазХолдинга.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гхб_ДатыБлокировокПользователейБазХолдинга.СрезПоследних КАК ДатыБлокировокПользователейБазХолдингаСрезПоследних
	|		ПО гхб_ПользователиБазХолдинга.Ссылка = ДатыБлокировокПользователейБазХолдингаСрезПоследних.Пользователь
	|ГДЕ
	|	гхб_ФизическиеЛицаБазХолдинга.ФизЛицоТекущейБазы = &ФизЛицоТекущейБазы
	|	И (НЕ ДатыБлокировокПользователейБазХолдингаСрезПоследних.Блокирован
	|			ИЛИ ДатыБлокировокПользователейБазХолдингаСрезПоследних.Блокирован ЕСТЬ NULL)";
	
	Запрос.УстановитьПараметр("ФизЛицоТекущейБазы", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Элементы.ГруппаПользователи.Заголовок = Элементы.ГруппаПользователи.Заголовок + "(" + Выборка.Количество() + ")";

КонецПроцедуры // ЗаполнитьКоличествоЭлементовВЗаголовкахЗакладок()

&НаСервере
Процедура ОбновитьДеревоКадровыхДанных()
	
	Схема = Элементы.КадровыеДанные.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.КадровыеДанные.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Если Результат.Количество() > 0 Тогда
		
		тзБазы = Результат.Скопировать();
		тзБазы.Свернуть("БазаХолдинга,Сотрудник");
		Дерево = РеквизитФормыВЗначение("КадровыеДанныеДерево");
		Дерево.Строки.Очистить();
		
		Для каждого СтрокаБаза Из тзБазы Цикл
		
			мНайденное = Результат.НайтиСтроки(Новый Структура("БазаХолдинга,Сотрудник,", 
																	СтрокаБаза.БазаХолдинга,
																	СтрокаБаза.Сотрудник));
			новСтр = Дерево.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(новСтр, мНайденное[0]);
			новСтр.Выделить = Истина;
			мНайденное.Удалить(0);
			
			Для каждого СтрокаКадровыеДанные Из мНайденное Цикл
				
				новСтрДеталь = новСтр.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(новСтрДеталь, СтрокаКадровыеДанные);
				
			КонецЦикла;
			
		КонецЦикла;
		
		ЗначениеВРеквизитФормы(Дерево, "КадровыеДанныеДерево");
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьДеревоКадровыхДанных()

&НаКлиенте
Процедура ОбработкаКомандыЗаблокироватьПользователя(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда		
		
		МассивПользователей = Новый Массив;
		
		МассивВыделенныхСтрок = Элементы.ПользователиБазХолдинга.ВыделенныеСтроки;
		Для Каждого Стр Из МассивВыделенныхСтрок Цикл
			
			ТекСтрока = Элементы.ПользователиБазХолдинга.ДанныеСтроки(Стр);
			Если НЕ ТекСтрока.Блокирован Тогда
			
				СтруктураДанных = Новый Структура;
				СтруктураДанных.Вставить("БазаХолдинга", ТекСтрока.БазаХолдинга);
				СтруктураДанных.Вставить("Ссылка", ТекСтрока.Ссылка);
				СтруктураДанных.Вставить("GUIDБазыХолдинга", ТекСтрока.GUIDБазыХолдинга);				
				
				МассивПользователей.Добавить(СтруктураДанных);
			
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаблокироватьПользователейНаСервере(Результат, МассивПользователей);
		
	КонецЕсли; 	

КонецПроцедуры

&НаСервере
Процедура ЗаблокироватьПользователейНаСервере(ДатаБлокировки, МассивПользователей)
	
	гхб_ВзаимодействияСервер.ЗаблокироватьПользователейВБазеХолдинга(ДатаБлокировки, МассивПользователей);
	
	УстановитьВидимостьКолонкиБудущаяБлокировка();
	Элементы.ПользователиБазХолдинга.Обновить();

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКолонкиБудущаяБлокировка()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(гхб_ИсторияОбменовСБазамиХолдингаСрезПоследних.Значение) >= &НачалоТекущегоДня
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВидимостьКолонкиБудущаяБлокировка
		|ИЗ
		|	РегистрСведений.гхб_ИсторияОбменовСБазамиХолдинга.СрезПоследних(
		|			,
		|			Тип = ЗНАЧЕНИЕ(Перечисление.гхб_ТипыОбменовДляБазХолдинга.БлокировкаПользователя)
		|				И Объект.ФизЛицоБазыХолдинга.ФизЛицоТекущейБазы = &ФизЛицоТекущейБазы) КАК гхб_ИсторияОбменовСБазамиХолдингаСрезПоследних
		|ГДЕ
		|	гхб_ИсторияОбменовСБазамиХолдингаСрезПоследних.Объект ССЫЛКА Справочник.гхб_ПользователиБазХолдинга";
	
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(гхб_ОбщегоНазначенияСервер.ВернутьВремяНаСервере()));
	Запрос.УстановитьПараметр("ФизЛицоТекущейБазы", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ВидимостьКолонки = Ложь;
	Иначе	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ВидимостьКолонки = ВыборкаДетальныеЗаписи.ВидимостьКолонкиБудущаяБлокировка;	
		КонецЦикла;
	КонецЕсли;
	
	Если Элементы.Найти("ПользователиБазХолдингаБудущаяБлокировка") <> Неопределено Тогда
		Элементы.ПользователиБазХолдингаБудущаяБлокировка.Видимость = ВидимостьКолонки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПеременныеИПараметрыФормы()
	
	НачалоТекущегоДня = НачалоДня(гхб_ОбщегоНазначенияСервер.ВернутьВремяНаСервере());
	ТипОтображенияКонтактнойИнформации = "ОсновноеМестоРаботы";
	
	ФизЛицаБазХолдинга.Параметры.УстановитьЗначениеПараметра("ФизЛицоТекущейБазы", Объект.Ссылка);
	
	ПользователиБазХолдинга.Параметры.УстановитьЗначениеПараметра("ФизЛицоТекущейБазы", Объект.Ссылка);
	ПользователиБазХолдинга.Параметры.УстановитьЗначениеПараметра("НачалоТекущегоДня", НачалоТекущегоДня);
	
	СотрудникиБазХолдинга.Параметры.УстановитьЗначениеПараметра("ФизЛицоТекущейБазы", Объект.Ссылка);
	
	КонтактнаяИнформация.Параметры.УстановитьЗначениеПараметра("ФизЛицоТекущейБазы", Объект.Ссылка);
	КонтактнаяИнформация.Параметры.УстановитьЗначениеПараметра("НачалоТекущегоДня", НачалоТекущегоДня);
	КонтактнаяИнформация.Параметры.УстановитьЗначениеПараметра("ТипОтображенияКонтактнойИнформации", ТипОтображенияКонтактнойИнформации);
	
	КадровыеДанные.Параметры.УстановитьЗначениеПараметра("ФизЛицоТекущейБазы", Объект.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьТекущееЗначение(ОткрываемыйЭлемент)
	
	текДанные = Элементы[ОткрываемыйЭлемент].ТекущиеДанные;
	Если текДанные <> Неопределено Тогда
		ПоказатьЗначение(, текДанные.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкуПоТекущейСтроке(ТабЧасть)

	ТекДанные = Элементы[ТабЧасть].ТекущиеДанные;	
	Если ТекДанные <> Неопределено Тогда
	
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ФизЛицоСКогоКопировать", ?(ТабЧасть = "ФизЛицаБазХолдинга", ТекДанные.Ссылка, ТекДанные.Объект));
		СтруктураПараметров.Вставить("ФизЛицоТекущейБазы", Объект.Ссылка);
		СтруктураПараметров.Вставить("НастройкаКопирования", ?(ТабЧасть = "ФизЛицаБазХолдинга", "Доменное имя", ТекДанные.Вид));
		
		ОткрытьФорму("Справочник.гхб_ФизическиеЛица.Форма.ФормаКопированияСвойств", СтруктураПараметров, ЭтаФорма); 
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()

	Элементы.ДекорацияДатаРождения.Видимость = ЗначениеЗаполнено(Объект.ДатаРождения);
	Если Элементы.ДекорацияДатаРождения.Видимость Тогда
		Элементы.ДекорацияДатаРождения.Заголовок = "Дата рождения(число, месяц): " + Формат(Объект.ДатаРождения, "ДФ='dd MMMM'")
	КонецЕсли;
	
	Элементы.ДатаРождения.Видимость = гхб_ОбщегоНазначенияСервер.ПроверитьДоступностьРоли("ПолныеПрава") Или гхб_ОбщегоНазначенияСервер.ПроверитьДоступностьРоли("гхб_ПолныйПросмотр");
	
КонецПроцедуры

//++ a.romanchuk 25.05.2020 #
&НаСервере
Процедура ВывестиФотоСотрудника()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		_ПутьКФайлу = Справочники.гхб_ФизическиеЛица.ВернутьПутьКФотоФизЛица(Объект.Ссылка);
		
		Если ЗначениеЗаполнено(_ПутьКФайлу) Тогда
			Если гхб_ОбщегоНазначенияСервер.ПроверитьСуществованиеФайла(_ПутьКФайлу) Тогда
				_Ответ = гхб_ОбщегоНазначенияСервер.ПоместитьФайлВХранилищеУчетнаяЗапись(_ПутьКФайлу, ЭтотОбъект.УникальныйИдентификатор);
						
				Если НЕ ПустаяСтрока(_Ответ.Ошибка) Тогда
					ПутьКФотоФизЛица = "";
					Элементы.ПутьКФотоФизЛица.ТекстНевыбраннойКартинки = _Ответ.Ошибка;
				Иначе
					Если ЭтоАдресВременногоХранилища(ПутьКФотоФизЛица) Тогда
						УдалитьИзВременногоХранилища(ПутьКФотоФизЛица);
						ПутьКФотоФизЛица = "";
					КонецЕсли;
			
					ПутьКФотоФизЛица = _Ответ.Адрес;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры
//-- a.romanchuk 25.05.2020 #

// ++ Тогушаков 24.06.2020 # \\
&НаСервере
Процедура УстановитьФИОАнглийское()

	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	гхб_ФизическиеЛица.Ссылка КАК Ссылка,
	|	МАКСИМУМ(гхб_ФизическиеЛицаБазХолдинга.ФИОАнглийское) КАК ФИОАнглийское
	|ИЗ
	|	Справочник.гхб_СотрудникиБазХолдинга КАК гхб_СотрудникиБазХолдинга
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛица КАК гхб_ФизическиеЛица
	|			ПО гхб_ФизическиеЛицаБазХолдинга.ФизЛицоТекущейБазы = гхб_ФизическиеЛица.Ссылка
	|				И (гхб_ФизическиеЛицаБазХолдинга.ФИОАнглийское <> """")
	|				И (НЕ гхб_ФизическиеЛицаБазХолдинга.ПометкаУдаления)
	|				И (гхб_ФизическиеЛица.Ссылка = &Ссылка)
	|		ПО гхб_СотрудникиБазХолдинга.ФизЛицоБазыХолдинга = гхб_ФизическиеЛицаБазХолдинга.Ссылка
	|			И (НЕ гхб_СотрудникиБазХолдинга.ПометкаУдаления)
	|			И (гхб_СотрудникиБазХолдинга.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.гхб_ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы))
	|
	|СГРУППИРОВАТЬ ПО
	|	гхб_ФизическиеЛица.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	гхб_ФизическиеЛица.Ссылка КАК Ссылка,
	|	МАКСИМУМ(гхб_ФизическиеЛицаБазХолдинга.ФИОАнглийское) КАК ФИОАнглийское
	|ИЗ
	|	Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛица КАК гхб_ФизическиеЛица
	|		ПО гхб_ФизическиеЛицаБазХолдинга.ФизЛицоТекущейБазы = гхб_ФизическиеЛица.Ссылка
	|			И (гхб_ФизическиеЛицаБазХолдинга.ФИОАнглийское <> """")
	|			И (НЕ гхб_ФизическиеЛицаБазХолдинга.ПометкаУдаления)
	|			И (гхб_ФизическиеЛица.Ссылка = &Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	гхб_ФизическиеЛица.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	резПакет = Запрос.ВыполнитьПакет();
	
	Если Не резПакет[0].Пустой() Тогда
		Выборка = резПакет[0].Выбрать();
	Иначе
		Выборка = резПакет[1].Выбрать();
	КонецЕсли;
	
	Если Выборка.Следующий() Тогда
		ФИОАнглийское = Выборка.ФИОАнглийское;
	КонецЕсли;

КонецПроцедуры // УстановитьФИОАнглийское()
// -- Тогушаков 24.06.2020 #

//++ a.romanchuk 05.11.2020 #
&НаСервереБезКонтекста
Функция РазделитьДоменноеИмя(_ДоменноеИмя)

	Возврат гхб_ОбщегоНазначенияСервер.РазобратьДоменноеИмяНаСоставляющие(_ДоменноеИмя);
	
КонецФункции	
//-- a.romanchuk 05.11.2020 #

//++ a.romanchuk 05.11.2020 #
&НаКлиенте
Процедура ПроверитьАктуальностьПользователяВАД(Команда)
	
	ВыполнитьДействиеСДоменомЛогиномПоТекущейСтроке("ПроверитьАктуальностьПользователяВАД");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеСДоменомЛогиномПоТекущейСтроке(_ИмяДействия)
	
	_ТД = Элементы.ФизЛицаБазХолдинга.ТекущиеДанные;
	
	Если НЕ (_ТД = Неопределено) И ЗначениеЗаполнено(_ТД.ДоменноеИмя) Тогда
		
		_ДополнительныеПараметры = Новый Структура("ТипДействия", _ИмяДействия);
		
		_ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуДоменаЛогинаЗавершение", ЭтотОбъект, _ДополнительныеПараметры);
		
		ОткрытьФорму("Справочник.гхб_ФизическиеЛица.Форма.ФормаДоменаЛогина", РазделитьДоменноеИмя(_ТД.ДоменноеИмя), ЭтотОбъект,
			, , , _ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры
//-- a.romanchuk 05.11.2020 #

//++ a.romanchuk 05.11.2020 #
&НаСервереБезКонтекста
Функция ПроверитьАктивностьЛогинаСервер(_Параметры)
	
	Возврат гхб_РаботаСAD.ПроверитьАктивностьЛогина(_Параметры.Домен, _Параметры.Логин);
	
КонецФункции
//-- a.romanchuk 05.11.2020 #

//++ a.romanchuk 05.11.2020 #
&НаКлиенте
Процедура ОткрытьФормуДоменаЛогинаЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт 
	
	Если НЕ (ВыбранноеЗначение = Неопределено) Тогда 
		Если (ДополнительныеПараметры.ТипДействия = "ПроверитьАктуальностьПользователяВАД") Тогда
			_Активность =  ПроверитьАктивностьЛогинаСервер(ВыбранноеЗначение);
			
			Сообщить("Логин """ + ВыбранноеЗначение.Логин + """ " + ?(_Активность, "АКТИВЕН", "НЕ АКТИВЕН") + 
				" в домене """ + ВыбранноеЗначение.Домен + """", СтатусСообщения.Информация);
			
		ИначеЕсли (ДополнительныеПараметры.ТипДействия = "УстановитьДоменноеИмяДляПользователей") Тогда	
			
			УстановитьДоменноеИмяДляВсехПользователей(Объект.Ссылка, ВыбранноеЗначение);
			
		ИначеЕсли (ДополнительныеПараметры.ТипДействия = "УстановитьДоменноеИмяДляФизлиц") Тогда	
			
			УстановитьДоменноеИмяДляВсехФизлиц(Объект.Ссылка, ВыбранноеЗначение);
			
		ИначеЕсли (ДополнительныеПараметры.ТипДействия = "УстановитьДоменноеИмяДляПользователейИФизлиц") Тогда	
			
			УстановитьДоменноеИмяДляВсехПользователей(Объект.Ссылка, ВыбранноеЗначение);
			УстановитьДоменноеИмяДляВсехФизлиц(Объект.Ссылка, ВыбранноеЗначение);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
//-- a.romanchuk 05.11.2020 #

//++ a.romanchuk 06.11.2020 #
&НаСервереБезКонтекста
Процедура УстановитьДоменноеИмяДляВсехФизлиц(_ФизЛицоТекущейБазы, _СтруктураДоменноеИмя)
	
	_ДоменноеИмя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(_СтруктураДоменноеИмя.Домен, "КраткоеНаименование") + 
		гхб_ОбщегоНазначенияКлиентСервер.СимволРазделительДоменногоИмени() + _СтруктураДоменноеИмя.Логин;
		
	_ТЗ = ВернутьФЛБазХолдингаСБазами(_ФизЛицоТекущейБазы);
	
	Для Каждого Стр Из _ТЗ Цикл
		
		_Ответ = гхб_ВзаимодействияСервер.УстановитьДоменноеИмяФизлицаВБазеХолдинга(Стр.БазаХолдинга, Стр.ФизЛицо, _ДоменноеИмя);
		ОбщегоНазначения.СообщитьПользователю(_Ответ.ТекстСообщения);
		
	КонецЦикла;
	
КонецПроцедуры
//-- a.romanchuk 06.11.2020 #

//++ a.romanchuk 06.11.2020 #
&НаСервереБезКонтекста
Процедура УстановитьДоменноеИмяДляВсехПользователей(_ФизЛицоТекущейБазы, _СтруктураДоменноеИмя)
	
	_ДоменноеИмя = гхб_ОбщегоНазначенияКлиентСервер.СимволРазделительДоменногоИмени() + 
		гхб_ОбщегоНазначенияКлиентСервер.СимволРазделительДоменногоИмени() +
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(_СтруктураДоменноеИмя.Домен, "КраткоеНаименование") + 
		гхб_ОбщегоНазначенияКлиентСервер.СимволРазделительДоменногоИмени() + _СтруктураДоменноеИмя.Логин;
		
	_ТЗ = ВернутьПользователейБазХолдингаСБазами(_ФизЛицоТекущейБазы);
	
	Для Каждого Стр Из _ТЗ Цикл
		
		_Ответ = гхб_ВзаимодействияСервер.УстановитьПользователяДляАутентификацииОСВБазеХолдинга(Стр.БазаХолдинга, Стр.Пользователь, _ДоменноеИмя);
		ОбщегоНазначения.СообщитьПользователю(_Ответ.ТекстСообщения);
		
	КонецЦикла;
	
КонецПроцедуры
//-- a.romanchuk 06.11.2020 #

//++ a.romanchuk 06.11.2020 #
&НаСервереБезКонтекста
Функция ВернутьФЛБазХолдингаСБазами(_ФизЛицоТекущейБазы)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	гхб_ФизическиеЛицаБазХолдинга.БазаХолдинга КАК БазаХолдинга,
	               |	гхб_ФизическиеЛицаБазХолдинга.Ссылка КАК ФизЛицо
	               |ИЗ
	               |	Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	               |ГДЕ
	               |	гхб_ФизическиеЛицаБазХолдинга.ФизЛицоТекущейБазы = &ФизЛицоТекущейБазы";
	
	Запрос.УстановитьПараметр("ФизЛицоТекущейБазы", _ФизЛицоТекущейБазы);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
//-- a.romanchuk 06.11.2020 #

//++ a.romanchuk 06.11.2020 #
&НаСервереБезКонтекста
Функция ВернутьПользователейБазХолдингаСБазами(_ФизЛицоТекущейБазы)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	гхб_ПользователиБазХолдинга.Ссылка КАК Пользователь,
	               |	гхб_ПользователиБазХолдинга.БазаХолдинга КАК БазаХолдинга
	               |ИЗ
	               |	Справочник.гхб_ПользователиБазХолдинга КАК гхб_ПользователиБазХолдинга
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	               |		ПО гхб_ПользователиБазХолдинга.ФизЛицоБазыХолдинга = гхб_ФизическиеЛицаБазХолдинга.Ссылка
	               |ГДЕ
	               |	гхб_ФизическиеЛицаБазХолдинга.ФизЛицоТекущейБазы = &ФизЛицоТекущейБазы";
	
	Запрос.УстановитьПараметр("ФизЛицоТекущейБазы", _ФизЛицоТекущейБазы);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
//-- a.romanchuk 06.11.2020 #

//++ a.romanchuk 06.11.2020 #
&НаКлиенте
Процедура УстановитьДоменноеИмяДляПользователей(Команда)
	
	ВыполнитьДействиеСДоменомЛогиномПоТекущейСтроке("УстановитьДоменноеИмяДляПользователей");
	
КонецПроцедуры
//-- a.romanchuk 06.11.2020 #

//++ a.romanchuk 06.11.2020 #
&НаКлиенте
Процедура УстановитьДоменноеИмяДляФизлиц(Команда)
	
	ВыполнитьДействиеСДоменомЛогиномПоТекущейСтроке("УстановитьДоменноеИмяДляФизлиц");
	
КонецПроцедуры
//-- a.romanchuk 06.11.2020 #

//++ a.romanchuk 06.11.2020 #
&НаКлиенте
Процедура УстановитьДоменноеИмяДляПользователейИФизлиц(Команда)
	
	ВыполнитьДействиеСДоменомЛогиномПоТекущейСтроке("УстановитьДоменноеИмяДляПользователейИФизлиц");
	
КонецПроцедуры
//-- a.romanchuk 06.11.2020 #

#КонецОбласти

