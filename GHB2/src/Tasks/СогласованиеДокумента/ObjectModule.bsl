
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Перем ПроводитьОбработкуВыполнения Экспорт;	
	
#Область ОбработчикиСобытий

Процедура ОбработкаИнтерактивнойАктивации(СтандартнаяОбработка)
	Док = Ссылка.ПолучитьОбъект();
	
	Если Документ.Пустая() Тогда
		Если (Док.ВидСообщения = Перечисления.ВидыСообщений.Сообщение) Тогда
			Док.ВыполнитьЗадачу();
			Док.ДатаВыполнения = ТекущаяДата();
			Док.Примечание = "Отсутствует документ для просмотра!";    
			Док.Записать();
		КонецЕсли;		
	Иначе	
		Документ.ПолучитьФорму().Открыть();
		ФормаПодписи = Обработки.ПодписиДокумента.ПолучитьФорму("Форма");
		ФормаПодписи.ВладелецФормы = Документ.ПолучитьФорму();
		ФормаПодписи.Открыть();
		
		Если (Док.ВидСообщения = Перечисления.ВидыСообщений.Сообщение) Тогда
			Док.ВыполнитьЗадачу();
			Док.ДатаВыполнения = ТекущаяДата();
			Док.Примечание = "Сообщение просмотрено!";    
			Док.Записать();
		КонецЕсли;			
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь
КонецПроцедуры

Процедура ПередИнтерактивнымВыполнением(Отказ)
	Отказ = Истина
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	//
КонецПроцедуры

Процедура ПриВыполнении(Отказ) Экспорт
	Если ЗначениеЗаполнено(ЭтотОбъект.ВедущаяЗадача) Тогда
		Если ЗначениеЗаполнено(ЭтотОбъект.БизнесПроцесс) Тогда
			Если НЕ ПроводитьОбработкуВыполнения Тогда
				Возврат;
			КонецЕсли;
			
			РодительскаяЗадача = ЭтотОбъект.ВедущаяЗадача.ПолучитьОбъект();
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	ПодписаниеТаблицаПодписания.Приоритет,
			                      |	ПодписаниеТаблицаПодписания.Ссылка.Индекс
								  |ИЗ
			                      |	БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
			                      |ГДЕ
			                      |	ПодписаниеТаблицаПодписания.СозданнаяЗадача = &ЭтаЗадача
			                      |	И ПодписаниеТаблицаПодписания.Ссылка = &Ссылка
			                      |	И ПодписаниеТаблицаПодписания.Ссылка.Завершен = ЛОЖЬ
			                      |	И ПодписаниеТаблицаПодписания.Ссылка.Стартован = ИСТИНА");
								  
			Запрос.УстановитьПараметр("ЭтаЗадача",ЭтотОбъект.Ссылка);
			Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.БизнесПроцесс);
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если НЕ Выборка.Следующий() Тогда
				Возврат;
			КонецЕсли;
			
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	ПодписаниеТаблицаПодписания.СозданнаяЗадача КАК СозданнаяЗадача,
			                      |	ПодписаниеТаблицаПодписания.СозданнаяЗадача.Состояние КАК Состояние,
			                      |	ПодписаниеТаблицаПодписания.ПодписаниеВсех КАК ПодписаниеВсех,
			                      |	ВЫБОР
			                      |		КОГДА ПодписаниеТаблицаПодписания.СозданнаяЗадача.Состояние = &Подписан
			                      |			ТОГДА 1
			                      |		ИНАЧЕ 0
			                      |	КОНЕЦ КАК СуммаПодписанных
			                      |ИЗ
			                      |	БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
			                      |ГДЕ
			                      |	ПодписаниеТаблицаПодписания.Ссылка = &Ссылка
			                      |	И ПодписаниеТаблицаПодписания.Приоритет = &Приоритет
			                      |	И ПодписаниеТаблицаПодписания.СозданнаяЗадача.Индекс = &Индекс
			                      |ИТОГИ
			                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СозданнаяЗадача),
			                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Состояние),
			                      |	МАКСИМУМ(ПодписаниеВсех),
			                      |	СУММА(СуммаПодписанных)
			                      |ПО
			                      |	ОБЩИЕ");
								  
			Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.БизнесПроцесс);
			Запрос.УстановитьПараметр("Приоритет",Выборка.Приоритет);
			Запрос.УстановитьПараметр("Индекс",Выборка.Индекс);
			Запрос.УстановитьПараметр("Подписан",Перечисления.но_СостояниеПодписи.Подписан);
			ДеревоРезультата = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Если (ДеревоРезультата.Строки.Количество() = 0) Тогда
				Возврат;
			КонецЕсли;
			
			Если ДеревоРезультата.Строки[0].ПодписаниеВсех Тогда
				Если (ЭтотОбъект.Состояние <> Перечисления.но_СостояниеПодписи.Подписан) Тогда
					ПеренестиДанныеВРодЗадачу(ЭтотОбъект,РодительскаяЗадача);
					РодительскаяЗадача.ВыполнитьЗадачу();
				ИначеЕсли (ДеревоРезультата.Строки[0].СуммаПодписанных = ДеревоРезультата.Строки[0].Строки.Количество()) Тогда
					ПеренестиДанныеВРодЗадачу(ЭтотОбъект,РодительскаяЗадача);
					РодительскаяЗадача.ВыполнитьЗадачу();
				Иначе
					//
				КонецЕсли;
			Иначе
				Запрос = Новый Запрос("ВЫБРАТЬ
						|	СогласованиеДокумента.Ссылка
						|ИЗ
						|	Задача.СогласованиеДокумента КАК СогласованиеДокумента
						|ГДЕ
						|	СогласованиеДокумента.Ссылка <> &ЭтотОбъект
						|	И СогласованиеДокумента.ВедущаяЗадача = &ВедущаяЗадача");
						
				Запрос.УстановитьПараметр("ЭтотОбъект",ЭтотОбъект.Ссылка);
				Запрос.УстановитьПараметр("ВедущаяЗадача",ЭтотОбъект.ВедущаяЗадача);
				Выборка = Запрос.Выполнить().Выбрать();
				
				Пока Выборка.Следующий() Цикл
					ЗадачаО = Выборка.Ссылка.ПолучитьОбъект();
					ПеренестиДанныеВРодЗадачу(ЭтотОбъект,ЗадачаО);
					ЗадачаО.ПроводитьОбработкуВыполнения = Ложь;
					ЗадачаО.ВыполнитьЗадачу();
				КонецЦикла;
				
				ПеренестиДанныеВРодЗадачу(ЭтотОбъект,РодительскаяЗадача);
				РодительскаяЗадача.ВыполнитьЗадачу();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПередВыполнением(Отказ)
	ЭтотОбъект.ДатаВыполнения = ТекущаяДата();
	ЭтотОбъект.ВремяВыполнения = ТекущаяДата();
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ЗначениеЗаполнено(ЭтотОбъект.БизнесПроцесс) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
							  |	ПодписаниеТаблицаПодписания.НомерСтроки
							  |ИЗ
							  |	БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
							  |ГДЕ
							  |	ПодписаниеТаблицаПодписания.СозданнаяЗадача = &СозданнаяЗадача
							  |	И (ПодписаниеТаблицаПодписания.Ссылка = &БизнесПроцесс
							  |				И ПодписаниеТаблицаПодписания.Ссылка.Индекс = &Индекс
							  |			ИЛИ &НЕПроводитьОбработкуВыполнения)");
							  
		Запрос.УстановитьПараметр("СозданнаяЗадача",ЭтотОбъект.Ссылка);
		Запрос.УстановитьПараметр("БизнесПроцесс",ЭтотОбъект.БизнесПроцесс);
		Запрос.УстановитьПараметр("Индекс",ЭтотОбъект.Индекс);
		Запрос.УстановитьПараметр("НЕПроводитьОбработкуВыполнения", НЕ ПроводитьОбработкуВыполнения);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если НЕ Выборка.Следующий() Тогда
			Возврат;
		КонецЕсли;
		
		БизнесПроцессОбъект = ЭтотОбъект.БизнесПроцесс.ПолучитьОбъект();
		НомерСтроки = Выборка.НомерСтроки - 1;
		БизнесПроцессОбъект.ТаблицаПодписания[НомерСтроки].Комментарии = ЭтотОбъект.Примечание;
		БизнесПроцессОбъект.ТаблицаПодписания[НомерСтроки].ДатаПодписания = ЭтотОбъект.ДатаВыполнения;
		
		Если ЭтотОбъект.Выполнена Тогда
			БизнесПроцессОбъект.ТаблицаПодписания[НомерСтроки].Сотрудник = ЭтотОбъект.Ответственный;
		Иначе
			БизнесПроцессОбъект.ТаблицаПодписания[НомерСтроки].Сотрудник = Справочники.Пользователи.ПустаяСсылка();
		КонецЕсли;
		
		БизнесПроцессОбъект.ТаблицаПодписания[НомерСтроки].СостояниеПодписи = ЭтотОбъект.Состояние;
		БизнесПроцессОбъект.ДобавитьВИсториюСобытие("Изменение статуса на " + Строка(ЭтотОбъект.Состояние));
		БизнесПроцессОбъект.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ЭтоНовый() Тогда
		УстановитьМаксимальныйНомер();
	КонецЕсли;
	
	//Если НЕ ЭтоНовый() Тогда
	//	ЭтотОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	//КонецЕсли;
	// ++ Литвиненко 15.09.2020 #15017  
	Если НЕ (ДополнительныеСвойства.Свойство("НеПодменятьОтветственного") И ДополнительныеСвойства.НеПодменятьОтветственного) Тогда
		ЭтотОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	// -- Литвиненко 15.09.2020 #15017

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПеренестиДанныеВРодЗадачу(ЗадачаПереносимая,РодЗадача)
	РодЗадача.Состояние = ЭтотОбъект.Состояние;
	РодЗадача.ДатаВыполнения = ЭтотОбъект.ДатаВыполнения;
	РодЗадача.Примечание = ЭтотОбъект.Примечание;
	РодЗадача.Ответственный = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура УстановитьМаксимальныйНомер()
	Запрос = новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(СогласованиеДокумента.Номер) + 1 КАК НомерЗадачи
	               |ИЗ
	               |	Задача.СогласованиеДокумента КАК СогласованиеДокумента";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЭтотОбъект.Номер = Выборка.НомерЗадачи;
	Иначе
		ЭтотОбъект.Номер = 0;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

ПроводитьОбработкуВыполнения = Истина;

#КонецЕсли
