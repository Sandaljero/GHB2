
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗагрузитьДанныеПропусков() Экспорт 
	
	_ДатаТекущейЗагрузки = ТекущаяДатаСеанса();
	
	_Результат = ПрочитатьДанныеПропусков();
	
	Если _Результат.УспешноеВыполнение Тогда
		
		_ТЗ = _Результат.Результат;
		
		_ТЗКопия = _ТЗ.Скопировать(, "DocId, Date");
		_ТЗКопия.Свернуть("DocId, Date");
		
		Для Каждого _СтрКопия Из _ТЗКопия Цикл
			
			_ДокСсылка = Документы.гхб_СвязьРаботниковСПропусками.НайтиПоРеквизиту("ИдентификаторДокументаОснования", _СтрКопия.DocId);
			
			Если ЗначениеЗаполнено(_ДокСсылка) Тогда
				_ДокОбъект = _ДокСсылка.ПолучитьОбъект();
				_ДокОбъект.Данные.Очистить();
			Иначе
				_ДокОбъект = Документы.гхб_СвязьРаботниковСПропусками.СоздатьДокумент();
				_ДокОбъект.Дата = _СтрКопия.Date;
				_ДокОбъект.ИдентификаторДокументаОснования = _СтрКопия.DocId;
			КонецЕсли;
			
			_НайденныеСтроки = _ТЗ.НайтиСтроки(Новый Структура("DocId", _СтрКопия.DocId));
			
			Для Каждого Стр Из _НайденныеСтроки Цикл
				_ФЛ = Справочники.гхб_ФизическиеЛица.НайтиПоРеквизиту("ИНН", Стр.INN);
				
				Если ЗначениеЗаполнено(_ФЛ)  Тогда
				
					НС = _ДокОбъект.Данные.Найти(_ФЛ, "Сотрудник");
					
					Если НЕ (НС = Неопределено) И (НС.НомерПропуска = Стр.CardWithPrefix) Тогда
						Продолжить;
					КонецЕсли;
						
					НС = _ДокОбъект.Данные.Добавить();
					НС.Сотрудник = _ФЛ;
					НС.НомерПропуска = Стр.CardWithPrefix;
					НС.Использовать = Стр.UseIt;
					
				КонецЕсли;
			КонецЦикла;
			
			//Если _СтрКопия.UseIt = 1 Тогда
				_ДокОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			//ИначеЕсли _ДокОбъект.Проведен Тогда
			//	_ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			//Иначе
			//	_ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			//КонецЕсли;				
			
		КонецЦикла;
		
		_Об = Справочники.гхб_СлужебныеЗначения.ДатаПоследнейЗагрузкиДанныхПостоянныхПропусков.ПолучитьОбъект();
		_Об.Значение = _ДатаТекущейЗагрузки;
		_Об.Записать();
		
	Иначе
		
		ЗаписьЖурналаРегистрации("ЗагрузитьДанныеПропусков", УровеньЖурналаРегистрации.Ошибка, , , _Результат.Результат);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПрочитатьДанныеПропусков()
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	
	Если НЕ (СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86) И НЕ (СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64) Тогда
		
		_Рез = Новый Структура("УспешноеВыполнение, Результат", Ложь, "Получение данных из БД ""HoldingUsers"" возможно только на платформе Windows.");
		
	Иначе	
		
		_ДатаПоследнейЗагрузки = Справочники.гхб_СлужебныеЗначения.ДатаПоследнейЗагрузкиДанныхПостоянныхПропусков.Значение;
	
		_ДатаПоследнейЗагрузки = ?(_ДатаПоследнейЗагрузки = Неопределено ИЛИ НЕ ТипЗнч(_ДатаПоследнейЗагрузки) = Тип("Дата"),
			Дата(1,1,1), _ДатаПоследнейЗагрузки);
			
		Соединение = гхб_ВзаимодействияСервер.ВернутьСоединениеОбщаяБазаПользователей();

		Если ТипЗнч(Соединение) = Тип("Строка") Тогда
			_Сообщение = "Ошибка при подключении к базе CardDocuments: " + Соединение;			
			
			_Рез = Новый Структура("УспешноеВыполнение, Результат", Ложь, _Сообщение);
			Соединение = Неопределено;
		Иначе	
			
			Записи = Новый COMОбъект("ADODB.Recordset"); 
			Команда = Новый COMObject("ADODB.Command");
			Команда.ActiveConnection = Соединение;
			
			Попытка
				Команда.CommandText = "SET DATEFORMAT ymd
						|
						|SELECT 
						|	cdd.DocId, 
						|	cdd.FIO, 
						|	cdd.INN, 
						|	cdd.Card, 
						|	cdd.CardWithPrefix, 
						|	cdd.Surname, 
						|	cdd.Name, 
						|	cdd.Position, 
						|	cdd.FIOEng, 
						|	cdd.PositionEng, 
						|	cdd.Passport, 
						|	cdd.PassportInternational, 
						|	cdd.Type, 
						|	cdd.Comment, 
						|	cdd.Department, 
						|	cdd.CardOld, 
						|	cdd.DateEnd, 
						|	cdd.PositionStr, 
						|	cd.Date, 
						|	cdd.UseIt,
						|	cdd.Division
						|FROM 
						|	CardDocumentsData cdd
						|	inner join (select cdd.DocId as DocId
						|				from CardDocumentsData cdd
						|				where cdd.DateOfChanges >= '" + Формат(_ДатаПоследнейЗагрузки, "ДФ='yyyy-MM-dd HH:mm:ss.000'") + "'
						|				group by cdd.DocId) iq
						|		on	iq.DocId = cdd.DocId
						|	inner join CardDocuments cd
						|		on	cd.Id = cdd.DocId
						|ORDER BY cdd.DocId, cdd.CardWithPrefix";
				
				НаборЗаписей = Команда.Execute();
				
				_СтрокаОписание = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150));
				_ЧислоОписание = Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(7, 0, ДопустимыйЗнак.Любой));
				_ДатаОписание = Новый ОписаниеТипов("Дата",,,, , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));

				_ТЗ = Новый ТаблицаЗначений();
				_ТЗ.Колонки.Добавить("DocId", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("FIO", _СтрокаОписание);
				_ТЗ.Колонки.Добавить("INN", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("Card", _ЧислоОписание);
				_ТЗ.Колонки.Добавить("CardWithPrefix", _ЧислоОписание);
				//_ТЗ.Колонки.Добавить("Surname", _СтрокаОписание); 
				//_ТЗ.Колонки.Добавить("Name", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("Position", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("FIOEng", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("PositionEng", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("Passport", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("PassportInternational", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("Type", Новый ОписаниеТипов("ПеречислениеСсылка.но_ТипыПропусков"));
				//_ТЗ.Колонки.Добавить("Comment", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("Department", _СтрокаОписание);
				//_ТЗ.Колонки.Добавить("CardOld", _ЧислоОписание);
				//_ТЗ.Колонки.Добавить("DateEnd", _ДатаОписание);
				//_ТЗ.Колонки.Добавить("PositionStr", _СтрокаОписание);
				_ТЗ.Колонки.Добавить("Date", _ДатаОписание);
				_ТЗ.Колонки.Добавить("UseIt", _ЧислоОписание);
				//_ТЗ.Колонки.Добавить("Division", _СтрокаОписание);
				
				Пока НЕ НаборЗаписей.EOF() Цикл
					НС = _ТЗ.Добавить();
					НС.DocId = СокрЛП(НаборЗаписей.Fields("DocId").value);
					//НС.FIO = СокрЛП(НаборЗаписей.Fields("FIO").value);
					НС.INN = СокрЛП(НаборЗаписей.Fields("INN").value);
					//НС.Card = НаборЗаписей.Fields("Card").value;
					НС.CardWithPrefix = НаборЗаписей.Fields("CardWithPrefix").value;
					//НС.Surname = СокрЛП(НаборЗаписей.Fields("Surname").value);
					//НС.Name = СокрЛП(НаборЗаписей.Fields("Name").value);
					//НС.Position = СокрЛП(НаборЗаписей.Fields("Position").value);
					//НС.FIOEng = СокрЛП(НаборЗаписей.Fields("FIOEng").value);
					//НС.PositionEng = СокрЛП(НаборЗаписей.Fields("PositionEng").value);
					//НС.Passport = СокрЛП(НаборЗаписей.Fields("Passport").value);
					//НС.PassportInternational = СокрЛП(НаборЗаписей.Fields("PassportInternational").value);
					//НС.Type = Перечисления.но_ТипыПропусков.Получить(НаборЗаписей.Fields("Type").value);
					//НС.Comment = СокрЛП(НаборЗаписей.Fields("Comment").value);
					//НС.Department = СокрЛП(НаборЗаписей.Fields("Department").value);
					//НС.CardOld = НаборЗаписей.Fields("CardOld").value;
					//НС.DateEnd = НаборЗаписей.Fields("DateEnd").value;
					//НС.PositionStr = СокрЛП(НаборЗаписей.Fields("PositionStr").value);
					_Дата = НаборЗаписей.Fields("Date").value;
					
					НС.Date = ?(ТипЗнч(_Дата) = Тип("Строка"), 
						Дата(Сред(_Дата, 1, 4), Сред(_Дата, 6, 2), Сред(_Дата, 9, 2), Сред(_Дата, 12, 2), Сред(_Дата, 15, 2), Сред(_Дата, 18, 2)), _Дата);
						
					НС.UseIt = НаборЗаписей.Fields("UseIt").value;
					//НС.Division = НаборЗаписей.Fields("Division").value;
					
					НаборЗаписей.MoveNext();
				КонецЦикла;
				
				_ТЗ.Индексы.Добавить("INN");
				
				_Рез = Новый Структура("УспешноеВыполнение, Результат", Истина, _ТЗ);
			Исключение		
				_Сообщение = ОписаниеОшибки();			
				_Рез = Новый Структура("УспешноеВыполнение, Результат", Ложь, _Сообщение);
				
				Соединение.Close();	
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Возврат _Рез;
	
КонецФункции

#КонецОбласти

#КонецЕсли