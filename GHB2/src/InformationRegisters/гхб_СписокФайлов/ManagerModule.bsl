
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПрочитатьСписокФайлов(НаборЗаписей, Ссылка) Экспорт

	НаборЗаписей.Очистить();
	НаборЗаписей.Отбор.ВладелецФайла.Установить(Ссылка);
		
	Запрос = Новый Запрос;
			   
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	но_СписокФайлов.ВладелецФайла,
	|	но_СписокФайлов.Идентификатор КАК Идентификатор,
	|	но_СписокФайлов.ПолноеИмяФайла,
	|	но_СписокФайлов.ПолноеИмяФайлаИсточника,
	|	но_СписокФайлов.Представление,
	|	но_СписокФайлов.Родитель,
	|	но_СписокФайлов.ПометкаУдаления,
	|	но_СписокФайлов.ПодписанЭЦП,
	|	но_СписокФайлов.ТипДанных,
	|	но_СписокФайлов.КаталогСохранения,
	|	но_СписокФайлов.ДатаЗаписи КАК ДатаЗаписи
	|ИЗ
	|	РегистрСведений.но_СписокФайлов КАК но_СписокФайлов
	|ГДЕ
	|	но_СписокФайлов.ВладелецФайла = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаЗаписи";
				 
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	НаборЗаписей.Загрузить(РезультатЗапроса.Выгрузить());	

КонецПроцедуры

Процедура ЗаписатьСписокФайлов(НаборЗаписей, Ссылка, Отказ) Экспорт

	НаборЗаписей.Отбор.ВладелецФайла.Установить(Ссылка);
	
	Для Индекс = 0 По НаборЗаписей.Количество() - 1 Цикл
	
		НаборЗаписей[Индекс].ВладелецФайла = Ссылка;		
	
	КонецЦикла; 
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(), , , , Отказ);
		Возврат;
	КонецПопытки;
	
	ПрочитатьСписокФайлов(НаборЗаписей, Ссылка);
	
КонецПроцедуры

Функция ИнициализироватьТаблицуФайлов() Экспорт
	
	НаборЗаписей = РегистрыСведений.гхб_СписокФайлов.СоздатьНаборЗаписей();
	Возврат НаборЗаписей.Выгрузить();
	
КонецФункции

Функция ПолучитьКаталогХраненияФайлов(ИмяОбъекта, ПолучитьСтроку = Истина) Экспорт

	//ПозицияТочки = Найти(ИмяОбъекта, ".");
	//ДлинаНаименования = СтрДлина(ИмяОбъекта);
	//
	//ОбрезкаСправа = ДлинаНаименования - ПозицияТочки;
	//ОбрезкаСлева  = ПозицияТочки - 1;	
	//
	//НаименованиеОбъекта = Прав(ИмяОбъекта, ОбрезкаСправа);
	//ТипОбъекта = Лев(ИмяОбъекта, ОбрезкаСлева);
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	но_МестаХраненияФайловДляОбъектовМетаданных.ПапкаСохранения
	//	|ИЗ
	//	|	РегистрСведений.но_МестаХраненияФайловДляОбъектовМетаданных КАК но_МестаХраненияФайловДляОбъектовМетаданных
	//	|ГДЕ
	//	|	но_МестаХраненияФайловДляОбъектовМетаданных.МетаданныеОбъект.ВидМетаданных = &ВидМетаданных
	//	|	//И но_МестаХраненияФайловДляОбъектовМетаданных.МетаданныеОбъект.Код = &Код
	//	|	И но_МестаХраненияФайловДляОбъектовМетаданных.МетаданныеОбъект.ИмяМетаданных = &ИмяМетаданных";

	//Запрос.УстановитьПараметр("ВидМетаданных", Перечисления.но_ВидыМетаданных[ТипОбъекта]);
	//Запрос.УстановитьПараметр("ИмяМетаданных", НаименованиеОбъекта);

	//Результат = Запрос.Выполнить();
	//
	//Если НЕ Результат.Пустой() Тогда
	//	
	//	Выборка = Результат.Выбрать();
	//	
	//	Пока Выборка.Следующий() Цикл				
	//		
	//		СлужебноеЗначение = Выборка.ПапкаСохранения;
	//		
	//	КонецЦикла;
	//Иначе
	//	
	//	СлужебноеЗначение = Справочники.гхб_СлужебныеЗначения.ПапкаХраненияФайловУчетнаяЗапись1СНеЗащищенные;
	//	
	//КонецЕсли;
	//
	//ПапкаХранения = ?(ПолучитьСтроку, СлужебноеЗначение.Значение, СлужебноеЗначение);	
	
	ПапкаХранения = Справочники.гхб_СлужебныеЗначения.ПапкаХраненияФайловУчетнаяЗапись1СНеЗащищенные.Значение;
	
	Возврат ПапкаХранения;
	
КонецФункции  
 
Процедура УстановитьТекстПоКоличествуФайлов(Текст, ВладелецФайлов) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	гхб_СписокФайлов.Идентификатор
	|ИЗ
	|	РегистрСведений.гхб_СписокФайлов КАК гхб_СписокФайлов
	|ГДЕ
	|	гхб_СписокФайлов.ВладелецФайла = &ВладелецФайлов
	|	И НЕ гхб_СписокФайлов.ПометкаУдаления
	|	И НЕ гхб_СписокФайлов.ТипДанных В (&ТипДанных)";
	//|	И НЕ но_СписокФайлов.ЭтоФотография";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВладелецФайлов", ВладелецФайлов);
	
	//++ a.romanchuk 25.05.2020 #
	_МассивТиповИсключений = Новый Массив();
	_МассивТиповИсключений.Добавить(Перечисления.гхб_ТипыДанныхФайлов.Картинка);
	_МассивТиповИсключений.Добавить(Перечисления.гхб_ТипыДанныхФайлов.ФотоФизЛица);
	
	Запрос.УстановитьПараметр("ТипДанных", _МассивТиповИсключений);
	//-- a.romanchuk 25.05.2020 #
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
    Текст = "Файлы (" + Выборка.Количество() + ")";
	
КонецПроцедуры
 
Процедура ДобавитьФайлПодУчетнойЗаписьюПрограммно(НаборЗаписей, СтруктураПараметров, ПрикрепляемыйТендер, НазваниеДокумента = Неопределено, УИДФайла = Неопределено, ТипФайла = Неопределено, ВладелецФайла = Неопределено) Экспорт
            
	НаборЗаписейФайл = ИнициализироватьТаблицуФайлов();
	
	СтрокаНабораЗаписей = НаборЗаписейФайл.Добавить();	
	ИмяФайлаВременное = ПолучитьИмяВременногоФайла(ТипФайла);
	
	ДанныеТендер = ПолучитьИзВременногоХранилища(ПрикрепляемыйТендер);
	ДанныеТендер.Записать(ИмяФайлаВременное);
	
	СтрокаНабораЗаписей.ПолноеИмяФайлаИсточника = ИмяФайлаВременное;
	
	Если ВладелецФайла <> Неопределено Тогда
		СтрокаНабораЗаписей.ВладелецФайла = ВладелецФайла;
	КонецЕсли;
	
	СтрокаНабораЗаписей.Идентификатор = ?(УИДФайла = Неопределено, Новый УникальныйИдентификатор, УИДФайла);

	ДобавитьФайлыПодУчетнойЗаписью(НаборЗаписей, НаборЗаписейФайл, СтруктураПараметров, , ?(НазваниеДокумента = Неопределено, "Тендерный протокол", НазваниеДокумента));
	
	Попытка
		УдалитьФайлы(ИмяФайлаВременное);
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Удаление файлов при добавлении в регистр ""Список файлов"" программно'",
					ОбщегоНазначения.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Ошибка,,,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

Процедура ДобавитьФотоСКамерыНаМобильномКлиенте(ДвоичныеДанные, СтруктураПараметров) Экспорт
	
	Отказ = Ложь;
	ТекущийКаталогСохранения = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(СтруктураПараметров.КаталогСохранения.Значение);
	ОтносительныйПуть = "";
	
	Подкаталоги = Новый Массив;
	Подкаталоги.Добавить(СокрЛП(СтруктураПараметров.Организация._КодБД));
	Подкаталоги.Добавить(СтруктураПараметров.ИмяВладельца);
	Подкаталоги.Добавить(Формат(Год(СтруктураПараметров.ДатаЗаписи), "ЧГ=0"));
	Подкаталоги.Добавить(Формат(Месяц(СтруктураПараметров.ДатаЗаписи), "ЧГ=0"));
	
	Для Индекс = 0 По Подкаталоги.Количество() - 1 Цикл
	
		ТекущийКаталогСохранения = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(ТекущийКаталогСохранения + Подкаталоги[Индекс]);
		ОтносительныйПуть = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(ОтносительныйПуть + Подкаталоги[Индекс]);
		ТекущийОтвет = СоздатьПапкуПодУчетнойЗаписью(ТекущийКаталогСохранения);
		
		Если ТипЗнч(ТекущийОтвет) = Тип("Строка") Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекущийОтвет, , , , Отказ);
		КонецЕсли;
				
	КонецЦикла; 
	
	Если Отказ Тогда
		Возврат;	
	КонецЕсли; 
	
	Идентификатор = Новый УникальныйИдентификатор;
	
	// На данный момент для тестирования не принципиально расширение картинки
	ПолноеИмяФайла = ТекущийКаталогСохранения + Строка(Идентификатор) + ".jpg";
	ОтносительноеИмяФайла = ОтносительныйПуть + Строка(Идентификатор) + ".jpg";
	
	ДвоичныеДанные.Записать(ПолноеИмяФайла);
	
	НаборЗаписей = РегистрыСведений.гхб_СписокФайлов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Идентификатор.Установить(Идентификатор);
	НаборЗаписей.Отбор.ВладелецФайла.Установить(СтруктураПараметров.ВладелецФайла);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();	
	Запись.Идентификатор = Идентификатор;
	Запись.ВладелецФайла = СтруктураПараметров.ВладелецФайла;	
	Запись.ПолноеИмяФайла = ОтносительноеИмяФайла;
	Запись.ПолноеИмяФайлаИсточника = "Камера телефона";
	Запись.Представление = "Фото с телефона";
	Запись.КаталогСохранения = СтруктураПараметров.КаталогСохранения;
	Запись.ДатаЗаписи = гхб_ОбщегоНазначенияСервер.ВернутьВремяНаСервере();
	
	НаборЗаписей.Записать();
	
КонецПроцедуры		

#Область РаботаСФайлами

Функция ПоместитьФайлВХранилищеУчетнаяЗапись(ИмяФайла) Экспорт
	
	Структура = Новый Структура();
	Структура.Вставить("Ошибка", "");
	Структура.Вставить("Расширение", "");
	Структура.Вставить("Адрес", "");
	Структура.Вставить("ВремяИзменения", '00010101');
	Структура.Вставить("УниверсальноеВремяИзменения", '00010101');
	
	Попытка
		Ф = Новый Файл(ИмяФайла);
		Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла));
		
		Структура.ВремяИзменения = Ф.ПолучитьВремяИзменения(); 
		Структура.УниверсальноеВремяИзменения = Ф.ПолучитьУниверсальноеВремяИзменения(); 		
		Структура.Расширение = Ф.Расширение;
		Структура.Адрес = Адрес;
		
		Возврат Структура;
	Исключение
		Структура.Ошибка = ОписаниеОшибки();
		
		Возврат Структура;
	КонецПопытки;
	
КонецФункции

Функция СоздатьПапкуПодУчетнойЗаписью(Путь) Экспорт
	Попытка
		Файл = Новый Файл(Путь);
		
		Если Файл.Существует() Тогда
			Возврат Истина;
		Иначе
			СоздатьКаталог(Путь);
			Возврат Истина;
		КонецЕсли;
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки;
КонецФункции

Функция СохранитьФайлПодУчетнойЗаписью(Имя, Путь) Экспорт 
	
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Имя));
	Рез = СохранитьФайлИзХранилищеУчетнаяЗапись(Адрес, Путь);
	УдалитьИзВременногоХранилища(Адрес);
	
	Возврат Рез;
	
КонецФункции

Функция СохранитьФайлИзХранилищеУчетнаяЗапись(Адрес, ИмяФайла) Экспорт
	
	Попытка
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
		ДвоичныеДанные.Записать(ИмяФайла);
		Возврат Истина;
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьФайлыПодУчетнойЗаписью(НаборЗаписей, ТаблицаФайлов, СтруктураПараметров, Отказ = Ложь, НаименованиеПредставления = Неопределено) Экспорт

	ТекущийКаталогСохранения = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(СтруктураПараметров.КаталогСохранения.Значение);
	ОтносительныйПуть = "";
	
	Подкаталоги = Новый Массив;
	Подкаталоги.Добавить(СокрЛП(СтруктураПараметров.Организация._КодБД));
	Подкаталоги.Добавить(СтруктураПараметров.ИмяВладельца);
	Подкаталоги.Добавить(Формат(Год(СтруктураПараметров.ДатаЗаписи), "ЧГ=0"));
	Подкаталоги.Добавить(Формат(Месяц(СтруктураПараметров.ДатаЗаписи), "ЧГ=0"));
	
	Для Индекс = 0 По Подкаталоги.Количество() - 1 Цикл
	
		ТекущийКаталогСохранения = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(ТекущийКаталогСохранения + Подкаталоги[Индекс]);
		ОтносительныйПуть = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(ОтносительныйПуть + Подкаталоги[Индекс]);
		ТекущийОтвет = СоздатьПапкуПодУчетнойЗаписью(ТекущийКаталогСохранения);
		
		Если ТипЗнч(ТекущийОтвет) = Тип("Строка") Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекущийОтвет, , , , Отказ);
		КонецЕсли;
				
	КонецЦикла; 
	
	Если Отказ Тогда
		Возврат;	
	КонецЕсли; 
	
	Для Каждого СтрокаТаблицаФайлов Из ТаблицаФайлов Цикл
	
		ТекущийФайл = Новый Файл(СтрокаТаблицаФайлов.ПолноеИмяФайлаИсточника);
		
		Отказ = Ложь;
		
		Если ТекущийФайл.Существует() Тогда
			
			Если ТекущийФайл.ЭтоКаталог() Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя копировать каталоги(" + СтрокаТаблицаФайлов.ПолноеИмяФайлаИсточника + ").", , , , Отказ);
				Возврат;
			КонецЕсли;
			
			Если ТекущийФайл.Размер() > 20971520 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Размер файла (" + СтрокаТаблицаФайлов.ПолноеИмяФайлаИсточника 
																	+ ") не может быть больше 20 Мб!", , , , Отказ);
				Возврат;
			КонецЕсли;
			
			ПолноеИмяФайла = ТекущийКаталогСохранения + Строка(СтрокаТаблицаФайлов.Идентификатор) + ТекущийФайл.Расширение;
			ОтносительноеИмяФайла = ОтносительныйПуть + Строка(СтрокаТаблицаФайлов.Идентификатор) + ТекущийФайл.Расширение;
			
			ТекущийОтвет = СохранитьФайлПодУчетнойЗаписью(СтрокаТаблицаФайлов.ПолноеИмяФайлаИсточника, ПолноеИмяФайла);
			
			Если ТипЗнч(ТекущийОтвет) = Тип("Строка") Тогда 
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекущийОтвет, , , , Отказ);
				Возврат;
				
			Иначе
				
				Запись = НаборЗаписей.Добавить();	
				ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицаФайлов);
				
				Запись.ПолноеИмяФайла = ОтносительноеИмяФайла;
							
				Если ПустаяСтрока(Запись.Представление) Тогда
					Если НаименованиеПредставления = Неопределено Тогда
						Запись.Представление = ТекущийФайл.ИмяБезРасширения; 			
					Иначе
						Запись.Представление = НаименованиеПредставления;
					КонецЕсли;
				КонецЕсли;
				
				Запись.КаталогСохранения = СтруктураПараметров.КаталогСохранения;
				
				Запись.ДатаЗаписи = гхб_ОбщегоНазначенияСервер.ВернутьВремяНаСервере();
				
			КонецЕсли;	
			
		Иначе	
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Указанный файл не найден(" 
																+ СтрокаТаблицаФайлов.ПолноеИмяФайлаИсточника + ").", , , , Отказ);
			
		КонецЕсли;
			
	КонецЦикла; 	

КонецПроцедуры

#КонецОбласти

#КонецЕсли