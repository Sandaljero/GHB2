
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПеременныеФормы(Параметры);
	
	//Если ОбщегоНазначенияСервер.КаталогХраненияФайловДоступен(КаталогСохранения.Значение, Отказ) Тогда
		
		ПрочитатьСписокФайлов();
		
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	
	//Элементы.НаборЗаписей.ОтборСтрок = Новый ФиксированнаяСтруктура("ПометкаУдаления, ЭтоФотография", Ложь, Ложь);	
	УстановитьВидимостьДоступность(Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	//СтруктураПараметров = Новый Структура;
	//СтруктураПараметров.Вставить("ДатаЗаписи"			, ДатаЗаписи);	
	//СтруктураПараметров.Вставить("ОрганизацияКодОбмена"	, ОрганизацияКодОбмена);
	//СтруктураПараметров.Вставить("ИмяВладельца"			, ИмяВладельца);
	//СтруктураПараметров.Вставить("КаталогСохранения"	, КаталогСохранения);
	//СтруктураПараметров.Вставить("ВладелецФайла"		, ВладелецФайлов);
	//СтруктураПараметров.Вставить("ИдентификаторСтроки"	, ИдентификаторСтроки);
		
	//РаботаСоСканером.ПерехватСобытияОтКомпонентыTWAIN(Источник, Событие, Данные, НаборЗаписей, СтруктураПараметров);
		
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
		
	ОповеститьОВыборе(ВладелецФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПредставлениеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
		УстановитьРасширениеРаботыСФайлами();    
	КонецЕсли;
	
	#Если ВебКлиент Тогда
	Файл = "";
		
	Если ПоместитьФайл(, , Файл, , УникальныйИдентификатор) Тогда
		
		МассивФайлов = Новый Массив;
		МассивФайлов.Добавить(Файл);
		
		ДобавитьФайлыПодУчетнойЗаписьюИнтерактивно(МассивФайлов);
		Модифицированность = Истина;
		
	КонецЕсли;
	#Иначе	
	ВыбратьФайл_("Выбор файла", "", "Образцы документа (*.*)|*.*", Истина, Истина);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаКомандыУдалитьФайл", ЭтотОбъект, 
							Элементы.НаборЗаписей.ТекущиеДанные.Идентификатор);
		
	ПоказатьВопрос(ОписаниеОповещения, "Удалить выбранный файл?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	КаталогСохраненияЗначение = ПолучитьКаталог(ТекущиеДанные.КаталогСохранения);
	
	Если ТекущиеДанные <> Неопределено Тогда 
		ПутьКФайлу = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(КаталогСохраненияЗначение) + ТекущиеДанные.ПолноеИмяФайла;
		ОткрытьФайлПодУчетнойЗаписью(ПутьКФайлу);
	Иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выделите строку!");
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСоСканера(Команда)
	
	//РаботаСоСканером.ДобавитьФайлСоСканера();
	
	ПараметрыДобавления = Новый Структура;
	ПараметрыДобавления.Вставить("ОбработчикРезультата", Неопределено);
	ПараметрыДобавления.Вставить("ВладелецФайла", ВладелецФайлов);
	ПараметрыДобавления.Вставить("ФормаВладелец", ЭтотОбъект);
	ПараметрыДобавления.Вставить("НеОткрыватьКарточкуПослеСозданияИзФайла", Истина);
	ПараметрыДобавления.Вставить("ЭтоФайл", Истина);
	
	РаботаСФайламиСлужебныйКлиент.ДобавитьСоСканера(ПараметрыДобавления);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСканера(Команда)
	
	//КомпонентаУстановлена = РаботаСоСканером.ПроинициализироватьКомпоненту();
	//
	//СистемнаяИнформация = Новый СистемнаяИнформация();
	//ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;
	//
	//ПараметрыФормы = Новый Структура(
	//	"КомпонентаУстановлена, ИдентификаторКлиента",
	//	КомпонентаУстановлена,
	//	ИдентификаторКлиента);
	//
	//ОткрытьФормуМодально("ОбщаяФорма.но_НастройкаСканирования", ПараметрыФормы);
	
	РаботаСФайламиКлиент.ОткрытьФормуНастройкиСканирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзПочты(Команда)
	
	//ОткрытьФорму("Обработка.но_ВыборПисьма.Форма.Форма", , ЭтаФорма, , , , 
	//				Новый ОписаниеОповещения("ОбработкаКомандДобавитьИзПочты", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьФайл_(ЗаголовокДиалога, ИмяФайла, ФильтрРасширения, МножВыбор, ПроверкаСуществования,СохранятьФайл = ЛОЖЬ) Экспорт
	
	Перем ИмяФайлаДляВозврата;
	
	Если МножВыбор Тогда
		ИмяФайлаДляВозврата = Новый Массив();
	Иначе
		ИмяФайлаДляВозврата = "";
	КонецЕсли;

	Если СохранятьФайл Тогда
		Режим = РежимДиалогаВыбораФайла.Сохранение;
	Иначе
		Режим = РежимДиалогаВыбораФайла.Открытие;
	КонецЕсли; 

	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = ЗаголовокДиалога;
	ДиалогОткрытияФайла.ПолноеИмяФайла = ИмяФайла;
	ДиалогОткрытияФайла.Фильтр = ФильтрРасширения;
	ДиалогОткрытияФайла.МножественныйВыбор = МножВыбор;
	ДиалогОткрытияФайла.ПроверятьСуществованиеФайла = ПроверкаСуществования;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаКомандыВыбратьФайл", ЭтотОбъект, МножВыбор);
	
	ДиалогОткрытияФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыВыбратьФайл(Результат, МножВыбор) Экспорт

	Если Результат <> Неопределено Тогда
		
		ДобавитьФайлыПодУчетнойЗаписьюИнтерактивно(Результат);
		Модифицированность = Истина;
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыУдалитьФайл(Результат, Идентификатор) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		УстановитьПометкуНаУдаление(Идентификатор);
		Модифицированность = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаСерверебезКонтекста
Функция ПолучитьКаталог(КаталогСохранения)
	Возврат КаталогСохранения.Значение;
КонецФункции

&НаКлиенте
Процедура ОткрытьФайлПодУчетнойЗаписью(ПутьКФайлу) Экспорт 
	
	Ответ = ПоместитьФайлВХранилищеУчетнаяЗапись(ПутьКФайлу);
			
	Если НЕ ПустаяСтрока(Ответ.Ошибка) Тогда
		Предупреждение(Ответ.Ошибка);
		Возврат;
	Иначе
		#Если ВебКлиент Тогда
		НачатьПолучениеФайлаССервера(Ответ.Адрес, Ответ.ИмяБезРасширения + Ответ.Расширение);
		#Иначе
		ИмяФайла = ПолучитьИмяВременногоФайла(Ответ.Расширение);
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Ответ.Адрес);
		ДвоичныеДанные.Записать(ИмяФайла);
		УдалитьИзВременногоХранилища(Ответ.Адрес);
		
		ЗапуститьПриложение(ИмяФайла);
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоместитьФайлВХранилищеУчетнаяЗапись(ПутьКФайлу)
	Возврат РегистрыСведений.гхб_СписокФайлов.ПоместитьФайлВХранилищеУчетнаяЗапись(ПутьКФайлу);
КонецФункции

&НаКлиенте
Процедура ДобавитьФайлыПодУчетнойЗаписьюИнтерактивно(МассивФайлов) Экспорт 	
		
	ТекущийКаталогСохранения = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(ПолучитьКаталог(КаталогСохранения));
	ОтносительныйПуть = "";
	
	Подкаталоги = Новый Массив;
	Подкаталоги.Добавить(СокрЛП(ОрганизацияКодОбмена));
	Подкаталоги.Добавить(ИмяВладельца);
	Подкаталоги.Добавить(Формат(Год(ДатаЗаписи), "ЧГ=0"));
	Подкаталоги.Добавить(Формат(Месяц(ДатаЗаписи), "ЧГ=0"));
	
	ТекущееВремя = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	Для Индекс = 0 По Подкаталоги.Количество() - 1 Цикл
	
		ТекущийКаталогСохранения = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(ТекущийКаталогСохранения + Подкаталоги[Индекс]);
		ОтносительныйПуть = ОтносительныйПуть + гхб_ОбщегоНазначенияКлиентСервер.ДобавитьСлешВПуть(Подкаталоги[Индекс]);
		ТекущийОтвет = СоздатьПапкуПодУчетнойЗаписьюНаСервере(ТекущийКаталогСохранения);
		
		Если ТипЗнч(ТекущийОтвет) = Тип("Строка") Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекущийОтвет);
		КонецЕсли;
				
	КонецЦикла; 
	
	Для Каждого ТекущийФайл Из МассивФайлов Цикл
	
		ТекущийФайл = Новый Файл(ТекущийФайл);
		ИдетификаторФайла = Новый УникальныйИдентификатор;

		
		Если ТекущийФайл.Существует() Тогда
			
			Если ТекущийФайл.ЭтоКаталог() Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя копировать каталоги(" + ТекущийФайл + ").");
			КонецЕсли;
			
			Если ТекущийФайл.Размер() > 20971520 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Размер файла (" + ТекущийФайл + ") не может быть больше 20 Мб!");
			КонецЕсли;
			
			ПолноеИмяФайла = ТекущийКаталогСохранения + Строка(ИдетификаторФайла) + ТекущийФайл.Расширение;
			ОтносительноеИмяФайла = ОтносительныйПуть + Строка(ИдетификаторФайла) + ТекущийФайл.Расширение;
			
			ТекущийОтвет = СохранитьФайлПодУчетнойЗаписью(ТекущийФайл.ПолноеИмя, ПолноеИмяФайла);
			
			Если ТипЗнч(ТекущийОтвет) = Тип("Строка") Тогда 
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекущийОтвет);
				
			Иначе
				
				ЗаписатьДанныеВРегистр(ТекущийФайл.ПолноеИмя, ТекущийФайл.ИмяБезРасширения, ИдетификаторФайла, ОтносительноеИмяФайла, ТекущееВремя);
				
			КонецЕсли;	
			
		Иначе	
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Указанный файл не найден(" + ТекущийФайл + ").");
			
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция СохранитьФайлПодУчетнойЗаписью(Имя, Путь) Экспорт 
	
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Имя));
	Рез = СохранитьФайлИзХранилищеУчетнаяЗаписьНаСервере(Адрес, Путь);
	УдалитьИзВременногоХранилища(Адрес);
	
	Возврат Рез;
	
КонецФункции

&НаСервереБезКонтекста
Функция СохранитьФайлИзХранилищеУчетнаяЗаписьНаСервере(Адрес, Путь)
	Возврат РегистрыСведений.гхб_СписокФайлов.СохранитьФайлИзХранилищеУчетнаяЗапись(Адрес, Путь);
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьПапкуПодУчетнойЗаписьюНаСервере(ТекущийКаталогСохранения)
	Возврат РегистрыСведений.гхб_СписокФайлов.СоздатьПапкуПодУчетнойЗаписью(ТекущийКаталогСохранения)
КонецФункции

&НаСервере
Процедура УстановитьПометкуНаУдаление(УИДФайла)
	
	Набор = РеквизитФормыВЗначение("НаборЗаписей");
	
	Для Каждого Стр Из Набор Цикл
		Если Стр.Идентификатор = УИДФайла Тогда
			Стр.ПометкаУдаления = Истина	
		КонецЕсли;
	КонецЦикла;
			
	ЗначениеВРеквизитФормы(Набор, "НаборЗаписей");	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПеременныеФормы(Параметры) Экспорт

	МетаданныеВладельца 	= Метаданные.НайтиПоТипу(ТипЗнч(Параметры.ВладелецФайлов));
	
	ВладелецФайлов    	 = Параметры.ВладелецФайлов;
	ИмяВладельца   	  	 = ?(ТипЗнч(Параметры.ВладелецФайлов) = Тип("Строка"), ВладелецФайлов, МетаданныеВладельца.Имя);
	ДатаЗаписи 		   	 = гхб_ОбщегоНазначенияСервер.ВернутьВремяНаСервере();	
	ОрганизацияКодОбмена = "GHB_2";
	КаталогСохранения 	 = Справочники.гхб_СлужебныеЗначения.ПапкаХраненияФайловУчетнаяЗапись1СНеЗащищенные;
	
	Если Параметры.Свойство("ИдентификаторСтроки") Тогда
		 ИдентификаторСтроки = Параметры.ИдентификаторСтроки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСписокФайлов()

	Набор = РеквизитФормыВЗначение("НаборЗаписей");
	
	Набор.Отбор.ВладелецФайла.Установить(ВладелецФайлов);
	Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
		Набор.Отбор.ИдентификаторСтроки.Установить(ИдентификаторСтроки);
	КонецЕсли;
	Набор.Прочитать();
	
	ЗначениеВРеквизитФормы(Набор, "НаборЗаписей");

КонецПроцедуры

&НаСервере
Процедура УстановитьНеДоступностьКнопокРедактирования()
	
	Элементы.НаборЗаписейДобавить.Видимость = Ложь;
	Элементы.НаборЗаписейУдалить.Видимость = Ложь;
	Элементы.НаборЗаписейДобавитьСоСканера.Видимость = Ложь;
	Элементы.НаборЗаписейНастройкиСканера.Видимость = Ложь;
	Элементы.НаборЗаписей.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеВРегистр(ПолноеИмя, ИмяБезРасширения, ИдетификаторФайла, ОтносительноеИмяФайла, ТекущееВремя)
	
	ТекНаборЗаписей = РеквизитФормыВЗначение("НаборЗаписей");
	
	Запись = ТекНаборЗаписей.Добавить();	
	Запись.Идентификатор           = ИдетификаторФайла;
	Запись.ВладелецФайла           = ВладелецФайлов;
	Запись.ПолноеИмяФайла 	       = ОтносительноеИмяФайла;
	Запись.ПолноеИмяФайлаИсточника = ПолноеИмя;
	Запись.Представление 	 	   = ИмяБезРасширения; 				
	Запись.КаталогСохранения 	   = КаталогСохранения;
	Запись.ДатаЗаписи 			   = ТекущееВремя; 
	
	ЗначениеВРеквизитФормы(ТекНаборЗаписей,	"НаборЗаписей"); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандДобавитьИзПочты(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		
		ДобавитьФайлыПодУчетнойЗаписьюИнтерактивно(Результат);
		Модифицированность = Истина;
		
		// Чистка из кеша
		Для Каждого СтрУд Из Результат Цикл
			УдалитьФайлы(СтрУд);
		КонецЦикла;	
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность(Параметры)
	
	Если Параметры.Свойство("НевозможноДобавлятьФайлы") И Параметры.НевозможноДобавлятьФайлы Тогда
		УстановитьНеДоступностьКнопокРедактирования();
	КонецЕсли;
	
#Если ВебКлиент Тогда
	Элементы.НаборЗаписейДобавитьСоСканера.Видимость = Ложь;
	Элементы.НаборЗаписейНастройкиСканера.Видимость = Ложь;
#КонецЕсли

	Элементы.НаборЗаписейДобавитьСоСканера.Доступность = РаботаСФайламиСлужебныйКлиент.ДоступнаКомандаСканировать();

КонецПроцедуры

#КонецОбласти
