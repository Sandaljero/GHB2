
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Перем ТекущаяДата;
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	//
КонецПроцедуры

Процедура НачалоПодписанияПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	Если ЭтотОбъект.ТаблицаПодписания.Количество() = 0 Тогда
		#Если НЕ Сервер И НЕ ВнешнееСоединение Тогда
			Сообщить("Пустая таблица подписания");
		#КонецЕсли
		Отказ = Истина;
	КонецЕсли;
	
	УстановитьСтатусУОбъекта(Перечисления.но_СтатусыДокумента.НаПодписи);	
	
	Если Состояние = Перечисления.но_СостояниеПодписи.Подписан Тогда
		Состояние = Перечисления.но_СостояниеПодписи.НаПодписании;
	КонецЕсли;
КонецПроцедуры

Процедура ПодписаниеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	НайденныеСтроки = ЭтотОбъект.ТаблицаПодписания.НайтиСтроки(Новый Структура("Приоритет",ЭтотОбъект.ТекущийПриориет));
	ЗадачаВедущая = ФормируемыеЗадачи[0];
	
	Попытка
		лстрАвтора = Строка(ЭтотОбъект.ПодписываемыйОбъект.Ответственный);
		лАвтора = ЭтотОбъект.ПодписываемыйОбъект.Ответственный;
		//лстрАвтора = Строка(ЭтотОбъект.ИнициаторПодписания);
		//лАвтора = ЭтотОбъект.ИнициаторПодписания;
	Исключение
		лстрАвтора = "";
		лАвтора = Справочники.Пользователи.ПустаяСсылка();
	КонецПопытки;
	
	// ++ Литвиненко 03.09.2020 #15017  
	ДопПараметры = ЭлектроннаяПочта.СформироватьСтруктуруДопПараметровОтправкиПисемИзОчереди();
	ДопПараметры._ТипПисьмаХТМЛ = Истина;
	// -- Литвиненко 03.09.2020 #15017
			
	Если НайденныеСтроки.Количество() > 1  Тогда
		НоваяСсылка = Задачи.СогласованиеДокумента.ПолучитьСсылку(Новый УникальныйИдентификатор());
		ЗадачаВедущая.УстановитьСсылкуНового(НоваяСсылка);
		
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			Если НайденнаяСтрока.Приоритет = 0 Тогда
				Продолжить;
			Конецесли;
			
			ДочерняяЗадача = Задачи.СогласованиеДокумента.СоздатьЗадачу();
			ДочерняяЗадача.БизнесПроцесс = ЭтотОбъект.Ссылка;
			ДочерняяЗадача.ВедущаяЗадача = НоваяСсылка;
			ДочерняяЗадача.Дата = ТекущаяДата();
			
			ДочерняяЗадача.Наименование = "Визирование документа";
			ДочерняяЗадача.Документ = ЭтотОбъект.ПодписываемыйОбъект;
			ДочерняяЗадача.ВидСообщения = Перечисления.ВидыСообщений.Визирование;
			ДочерняяЗадача.ДатаВыполненияСрок = ПолучитьВремяВыполненияСрок(ЭтотОбъект.ПодписываемыйОбъект,НайденнаяСтрока.СрокПодписания,НайденнаяСтрока.БазовоеСобытие);
			ДочерняяЗадача.НомерСтрокиТЧМаршрута = НайденнаяСтрока.НомерСтроки;
			ДочерняяЗадача.Маршрут = ЭтотОбъект.МаршрутПодписания;
			ДочерняяЗадача.Индекс = ЭтотОбъект.Индекс;
			ДочерняяЗадача.Состояние = НайденнаяСтрока.СостояниеПодписи; 
			ДочерняяЗадача.Ответственный = лАвтора; 
			
			Если (Строка(НайденнаяСтрока.Подразделение) <> "") И (Строка(НайденнаяСтрока.Должность) <> "") Тогда
				НоваяСтрокаАдресаты = ДочерняяЗадача.Адресаты.Добавить();
				НоваяСтрокаАдресаты.Подразделение 	= НайденнаяСтрока.Подразделение;
				НоваяСтрокаАдресаты.Должность 		= НайденнаяСтрока.Должность;
				
				//НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("Подразделение, Должность, Приоритет", НайденнаяСтрока.Подразделение, НайденнаяСтрока.Должность, ЭтотОбъект.ТекущийПриориет));
				//
				//Если НайденныеСтрокиМаршрута.Количество() > 0 Тогда
				//	Для Каждого СтрокаМаршрута Из НайденныеСтрокиМаршрута Цикл 
				//		ДопСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ДополнительныеПодписи.НайтиСтроки(Новый Структура("УИД", СтрокаМаршрута.УИД));
				//		
				//		Для Каждого ДопСтрокаМаршрута Из ДопСтрокиМаршрута Цикл 
				//			НоваяСтрокаАдресаты = ДочерняяЗадача.Адресаты.Добавить();
				//			НоваяСтрокаАдресаты.Подразделение 	= ДопСтрокаМаршрута.Подразделение;
				//			НоваяСтрокаАдресаты.Должность 		= ДопСтрокаМаршрута.Должность;
				//		КонецЦикла;
				//	КонецЦикла;
				//	
				//	ДочерняяЗадача.Адресаты.Свернуть("Подразделение, Должность", "");
				//КонецЕсли;
			КонецЕсли;
			
			Если НЕ (ЭтотОбъект.МаршрутПодписания.ДополнительныеПодписи.Количество() = 0) Тогда
				Если НЕ НайденнаяСтрока.Подразделение.Пустая() И НЕ НайденнаяСтрока.Должность.Пустая() Тогда
					НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("Подразделение, Должность, Приоритет", НайденнаяСтрока.Подразделение, НайденнаяСтрока.Должность, ЭтотОбъект.ТекущийПриориет));
				ИначеЕсли ЗначениеЗаполнено(НайденнаяСтрока.Стадия) Тогда
					Если ТипЗнч(НайденнаяСтрока.Стадия) = Тип("СправочникСсылка.но_РолиДокументооборота") Тогда
						НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("РольДокументооборота, Приоритет", НайденнаяСтрока.Стадия, ЭтотОбъект.ТекущийПриориет));
					ИначеЕсли ТипЗнч(НайденнаяСтрока.Стадия) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
						НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("Сотрудник, Приоритет", НайденнаяСтрока.Стадия, ЭтотОбъект.ТекущийПриориет));
					Иначе
						НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("Приоритет", ЭтотОбъект.ТекущийПриориет));
					КонецЕсли;
				Иначе
					НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("Приоритет", ЭтотОбъект.ТекущийПриориет));
				КонецЕсли;
					
				Если НайденныеСтрокиМаршрута.Количество() > 0 Тогда
					Для Каждого СтрокаМаршрута Из НайденныеСтрокиМаршрута Цикл 
						ДопСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ДополнительныеПодписи.НайтиСтроки(Новый Структура("УИД", СтрокаМаршрута.УИД));
						
						Для Каждого ДопСтрокаМаршрута Из ДопСтрокиМаршрута Цикл 
							НоваяСтрокаАдресаты = ДочерняяЗадача.Адресаты.Добавить();
							НоваяСтрокаАдресаты.Подразделение 			= ДопСтрокаМаршрута.Подразделение;
							НоваяСтрокаАдресаты.Должность 				= ДопСтрокаМаршрута.Должность;
							НоваяСтрокаАдресаты.РольДокументооборота 	= ДопСтрокаМаршрута.РольДокументооборота;
							НоваяСтрокаАдресаты.Сотрудник				= ДопСтрокаМаршрута.Сотрудник;
						КонецЦикла;
					КонецЦикла;
					
					ДочерняяЗадача.Адресаты.Свернуть("Подразделение, Должность, РольДокументооборота, Сотрудник", "");
				КонецЕсли;
			КонецЕсли;

			ЗаполнитьПолучателяУЗадачи(ДочерняяЗадача,НайденнаяСтрока.Стадия);
			
			ДочерняяЗадача.Записать();
			НайденнаяСтрока.СозданнаяЗадача = ДочерняяЗадача.Ссылка;
			НайденнаяСтрока.ДатаВыдачи = ТекущаяДата();
			лстрАвтор = "";
			
			// ++ Литвиненко 28.08.2020 #15017
			Текст = Справочники.ИдентификаторыОбъектовМетаданных.СформироватьШаблонПодписания(ЭтотОбъект.ПодписываемыйОбъект, НайденнаяСтрока.СозданнаяЗадача);
			ТекстСМС = "Поступил документ "+Строка(ЭтотОбъект.ПодписываемыйОбъект)+" на подписание "+лстрАвтора;
			Если ПустаяСтрока(Текст) Тогда
				Текст = ТекстСМС;
				ДопПараметры._ТипПисьмаХТМЛ = Ложь;
			КонецЕсли;
			// -- Литвиненко 28.08.2020 #15017
			Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ЭтотОбъект.ПодписываемыйОбъект)) Тогда
				//УведомитьПоМылу(НайденнаяСтрока.Стадия,"Поступил документ "+Строка(ЭтотОбъект.ПодписываемыйОбъект)+" на подписание "+лстрАвтора,НайденнаяСтрока.Email,НайденнаяСтрока.SMS);
				// ++ Литвиненко 10.09.2020 #15017  
				Если НайденнаяСтрока.Email Тогда
					УведомитьПоМылу(НайденнаяСтрока.Стадия, Текст,		Истина,Ложь,,,,,ДопПараметры);
				КонецЕсли;
				Если НайденнаяСтрока.SMS Тогда
					УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС,	Ложь,Истина,,,,,ДопПараметры);
				КонецЕсли;
				// -- Литвиненко 10.09.2020 #15017
			Иначе 
				//УведомитьПоМылу(НайденнаяСтрока.Стадия,"Поступил элемент "+Строка(ЭтотОбъект.ПодписываемыйОбъект)+" на подписание "+лстрАвтора,НайденнаяСтрока.Email,НайденнаяСтрока.SMS);	
				// ++ Литвиненко 10.09.2020 #15017  
				Если НайденнаяСтрока.Email Тогда
					УведомитьПоМылу(НайденнаяСтрока.Стадия, Текст,		Истина,Ложь,,,,,ДопПараметры);
				КонецЕсли;
				Если НайденнаяСтрока.SMS Тогда
					УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС,	Ложь,Истина,,,,,ДопПараметры);
				КонецЕсли;
				// -- Литвиненко 10.09.2020 #15017
			КонецЕсли;

			Если (Строка(НайденнаяСтрока.Подразделение) <> "") И (Строка(НайденнаяСтрока.Должность) <> "") Тогда
				Для Каждого СтрАдресаты Из ДочерняяЗадача.Адресаты Цикл 
					Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ЭтотОбъект.ПодписываемыйОбъект)) Тогда
						//УведомитьПоМылу(НайденнаяСтрока.Стадия,"Поступил документ "+Строка(ЭтотОбъект.ПодписываемыйОбъект)+" на подписание "+лстрАвтора,НайденнаяСтрока.Email,НайденнаяСтрока.SMS, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник);
						// ++ Литвиненко 10.09.2020 #15017  
						Если НайденнаяСтрока.Email Тогда
							УведомитьПоМылу(НайденнаяСтрока.Стадия, Текст, 		Истина, Ложь, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);
						КонецЕсли;
						Если НайденнаяСтрока.SMS Тогда
							УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС, 	Ложь, Истина, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);
						КонецЕсли;
						// -- Литвиненко 10.09.2020 #15017
					Иначе                                                                                                                                                               
						//УведомитьПоМылу(НайденнаяСтрока.Стадия,"Поступил элемент "+Строка(ЭтотОбъект.ПодписываемыйОбъект)+" на подписание "+лстрАвтора,НайденнаяСтрока.Email,НайденнаяСтрока.SMS, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник);
						// ++ Литвиненко 10.09.2020 #15017  
						Если НайденнаяСтрока.Email Тогда
							УведомитьПоМылу(НайденнаяСтрока.Стадия, Текст,		Истина, Ложь, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);
						КонецЕсли;
						Если НайденнаяСтрока.SMS Тогда
							УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС,	Ложь, Истина, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);
						КонецЕсли;
						// -- Литвиненко 10.09.2020 #15017
					КонецЕсли;					
				КонецЦикла;
			КонецЕсли;
			//p.lukashov(16.07.2015) --->
			РазослатьПисьмаПоОбъекту(НайденнаяСтрока, ДочерняяЗадача, лстрАвтора);
			//p.lukashov(16.07.2015) <---
		КонецЦикла;
	ИначеЕсли НайденныеСтроки.Количество() = 1  Тогда
		НайденнаяСтрока = НайденныеСтроки[0];	
		ЗадачаВедущая.Наименование = "Визирование документа";
		ЗадачаВедущая.Документ = ЭтотОбъект.ПодписываемыйОбъект;
		ЗадачаВедущая.ВидСообщения = Перечисления.ВидыСообщений.Визирование;
		ЗадачаВедущая.ДатаВыполненияСрок = ПолучитьВремяВыполненияСрок(ЭтотОбъект.ПодписываемыйОбъект,НайденнаяСтрока.СрокПодписания,НайденнаяСтрока.БазовоеСобытие);
		ЗадачаВедущая.НомерСтрокиТЧМаршрута = НайденнаяСтрока.НомерСтроки;
		ЗадачаВедущая.Маршрут = ЭтотОбъект.МаршрутПодписания;
		ЗадачаВедущая.Индекс = ЭтотОбъект.Индекс;
		ЗадачаВедущая.Состояние = НайденнаяСтрока.СостояниеПодписи; 
		ЗадачаВедущая.Ответственный = лАвтора;
		
		Если (Строка(НайденнаяСтрока.Подразделение) <> "") И (Строка(НайденнаяСтрока.Должность) <> "") Тогда
			НоваяСтрокаАдресаты = ЗадачаВедущая.Адресаты.Добавить();
			НоваяСтрокаАдресаты.Подразделение 	= НайденнаяСтрока.Подразделение;
			НоваяСтрокаАдресаты.Должность 		= НайденнаяСтрока.Должность;
			
			//НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписейНовая.НайтиСтроки(Новый Структура("Подразделение, Должность, Приоритет", НайденнаяСтрока.Подразделение, НайденнаяСтрока.Должность, ЭтотОбъект.ТекущийПриориет));
			//
			//Если НайденныеСтрокиМаршрута.Количество() > 0 Тогда
			//	Для Каждого СтрокаМаршрута Из НайденныеСтрокиМаршрута Цикл 
			//		ДопСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ДополнительныеПодписи.НайтиСтроки(Новый Структура("УИД", СтрокаМаршрута.УИД));
			//		
			//		Для Каждого ДопСтрокаМаршрута Из ДопСтрокиМаршрута Цикл 
			//			НоваяСтрокаАдресаты = ЗадачаВедущая.Адресаты.Добавить();
			//			НоваяСтрокаАдресаты.Подразделение 	= ДопСтрокаМаршрута.Подразделение;
			//			НоваяСтрокаАдресаты.Должность 		= ДопСтрокаМаршрута.Должность;
			//		КонецЦикла;
			//	КонецЦикла;
			//	
			//	ЗадачаВедущая.Адресаты.Свернуть("Подразделение, Должность", "");
			//КонецЕсли;
		КонецЕсли;
		
		Если НЕ (ЭтотОбъект.МаршрутПодписания.ДополнительныеПодписи.Количество() = 0) Тогда
			Если НЕ НайденнаяСтрока.Подразделение.Пустая() И НЕ НайденнаяСтрока.Должность.Пустая() Тогда
				НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("Подразделение, Должность, Приоритет", НайденнаяСтрока.Подразделение, НайденнаяСтрока.Должность, ЭтотОбъект.ТекущийПриориет));
			ИначеЕсли ЗначениеЗаполнено(НайденнаяСтрока.Стадия) Тогда
				Если ТипЗнч(НайденнаяСтрока.Стадия) = Тип("СправочникСсылка.но_РолиДокументооборота") Тогда
					НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("РольДокументооборота, Приоритет", НайденнаяСтрока.Стадия, ЭтотОбъект.ТекущийПриориет));
				ИначеЕсли ТипЗнч(НайденнаяСтрока.Стадия) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
					НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("Сотрудник, Приоритет", НайденнаяСтрока.Стадия, ЭтотОбъект.ТекущийПриориет));
				Иначе
					НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("Приоритет", ЭтотОбъект.ТекущийПриориет));
				КонецЕсли;
			Иначе
				НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаПодписей.НайтиСтроки(Новый Структура("Приоритет", ЭтотОбъект.ТекущийПриориет));
			КонецЕсли;
			
			Если НайденныеСтрокиМаршрута.Количество() > 0 Тогда
				Для Каждого СтрокаМаршрута Из НайденныеСтрокиМаршрута Цикл 
					ДопСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ДополнительныеПодписи.НайтиСтроки(Новый Структура("УИД", СтрокаМаршрута.УИД));
					
					Для Каждого ДопСтрокаМаршрута Из ДопСтрокиМаршрута Цикл 
						НоваяСтрокаАдресаты = ЗадачаВедущая.Адресаты.Добавить();
						НоваяСтрокаАдресаты.Подразделение 			= ДопСтрокаМаршрута.Подразделение;
						НоваяСтрокаАдресаты.Должность 				= ДопСтрокаМаршрута.Должность;
						НоваяСтрокаАдресаты.РольДокументооборота 	= ДопСтрокаМаршрута.РольДокументооборота;
						НоваяСтрокаАдресаты.Сотрудник 				= ДопСтрокаМаршрута.Сотрудник;
					КонецЦикла;
				КонецЦикла;
				
				ЗадачаВедущая.Адресаты.Свернуть("Подразделение, Должность, РольДокументооборота, Сотрудник", "");
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьПолучателяУЗадачи(ЗадачаВедущая,НайденнаяСтрока.Стадия);
		НоваяСсылка = Задачи.СогласованиеДокумента.ПолучитьСсылку(Новый УникальныйИдентификатор());
		ЗадачаВедущая.УстановитьСсылкуНового(НоваяСсылка);
		НайденнаяСтрока.СозданнаяЗадача = НоваяСсылка;
		НайденнаяСтрока.ДатаВыдачи = ТекущаяДата();
		
		
		// ++ Литвиненко 28.08.2020 #15017  
		Текст = Справочники.ИдентификаторыОбъектовМетаданных.СформироватьШаблонПодписания(ЭтотОбъект.ПодписываемыйОбъект, НайденнаяСтрока.СозданнаяЗадача);
		ТекстСМС = "Поступил документ "+Строка(ЭтотОбъект.ПодписываемыйОбъект)+" на подписание "+лстрАвтора;
		Если ПустаяСтрока(Текст) Тогда
			Текст = ТекстСМС;
			ДопПараметры._ТипПисьмаХТМЛ = Ложь;
		КонецЕсли;
		// -- Литвиненко 28.08.2020 #15017
		Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ЭтотОбъект.ПодписываемыйОбъект)) Тогда
			//УведомитьПоМылу(НайденнаяСтрока.Стадия,"Поступил документ "+Строка(ЭтотОбъект.ПодписываемыйОбъект)+" на подписание "+лстрАвтора,НайденнаяСтрока.Email,НайденнаяСтрока.SMS);
			// ++ Литвиненко 10.09.2020 #15017  
			Если НайденнаяСтрока.Email Тогда
				УведомитьПоМылу(НайденнаяСтрока.Стадия, Текст,		Истина,Ложь,,,,,ДопПараметры);
			КонецЕсли;
			Если НайденнаяСтрока.SMS Тогда
				УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС,	Ложь,Истина,,,,,ДопПараметры);
			КонецЕсли;
			// -- Литвиненко 10.09.2020 #15017
		Иначе
			// ++ Литвиненко 10.09.2020 #15017  
			Если НайденнаяСтрока.Email Тогда
				УведомитьПоМылу(НайденнаяСтрока.Стадия, Текст,		Истина,Ложь,,,,,ДопПараметры);
			КонецЕсли;
			Если НайденнаяСтрока.SMS Тогда
				УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС,	Ложь,Истина,,,,,ДопПараметры);
			КонецЕсли;
			// -- Литвиненко 10.09.2020 #15017
		КонецЕсли;
		
		Если (Строка(НайденнаяСтрока.Подразделение) <> "") И (Строка(НайденнаяСтрока.Должность) <> "") Тогда
			Для Каждого СтрАдресаты Из ЗадачаВедущая.Адресаты Цикл 
				Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ЭтотОбъект.ПодписываемыйОбъект)) Тогда
					// ++ Литвиненко 10.09.2020 #15017  
					Если НайденнаяСтрока.Email Тогда
						УведомитьПоМылу(НайденнаяСтрока.Стадия, Текст,		Истина,Ложь, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);
					КонецЕсли;
					Если НайденнаяСтрока.SMS Тогда
						УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС,	Ложь,Истина, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);
					КонецЕсли;
					// -- Литвиненко 10.09.2020 #15017
				Иначе                                                                                                                                                               
					// ++ Литвиненко 10.09.2020 #15017  
					Если НайденнаяСтрока.Email Тогда
						УведомитьПоМылу(НайденнаяСтрока.Стадия, Текст,		Истина,Ложь, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);
					КонецЕсли;
					Если НайденнаяСтрока.SMS Тогда
						УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС,	Ложь,Истина, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);
					КонецЕсли;
					// -- Литвиненко 10.09.2020 #15017
				КонецЕсли;					
			КонецЦикла;
		КонецЕсли;
		
		//p.lukashov(16.07.2015) --->
		//РазослатьПисьмаПоОбъекту(НайденнаяСтрока, ЗадачаВедущая, лстрАвтора);
		//p.lukashov(16.07.2015) <---
		
		// Прищенко 20.05.2020 12:43:42
		//ПодписаниеРазослатьПисьмаИзОбъекта(НайденнаяСтрока, ЗадачаВедущая);
		// Прищенко 20.05.2020 12:43:45
	КонецЕсли;
	
	ЭтотОбъект.Записать();
КонецПроцедуры

Процедура ПодписаниеПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если Задача.Состояние <> Перечисления.но_СостояниеПодписи.Отозван
	 И Задача.Состояние <> Перечисления.но_СостояниеПодписи.Отклонен 
	 И Задача.Состояние <> Перечисления.но_СостояниеПодписи.ПустаяСсылка() ТОгда
		ПерейтиКСледующемуПриоритету();
	Конецесли;
	
	ЭтотОбъект.Индекс = ЭтотОбъект.Индекс + 1;
	ЭтотОбъект.Записать();
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	//
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ЭтотОбъект.ПометкаУдаления Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
				|	СогласованиеДокумента.Ссылка
				|ИЗ
				|	Задача.СогласованиеДокумента КАК СогласованиеДокумента
				|ГДЕ
				|	СогласованиеДокумента.БизнесПроцесс = &БизнесПроцесс
				|	И СогласованиеДокумента.ПометкаУдаления = ЛОЖЬ");
				
		Запрос.УстановитьПараметр("БизнесПроцесс",ЭтотОбъект.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Попытка
				ЗО = Выборка.Ссылка.ПолучитьОбъект();
			Исключение
				Продолжить;
			КонецПопытки;
			
			ЗО.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
		
		УстановитьСтатусУОбъекта(Перечисления.но_СтатусыДокумента.Черновик);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьМаршрутНовый(ТипМаршрутаСсылка,ОбъектВладелецСсылка) Экспорт
	//Если НЕ ПроверитьДопустимостьПодписания(ОбъектВладелецСсылка, ТипМаршрутаСсылка.ВремяСобытия, ТипМаршрутаСсылка.ВидДействия, ТипМаршрутаСсылка.Получатель) Тогда
	//	#Если Клиент тогда
	//		Предупреждение("Срок инициации подписания документа уже прошел");
	//	#КонецЕсли
	//	
	//	ЭтотОбъект.МаршрутПодписания = Справочники.ТипыМаршрутов.ПустаяСсылка();
	//	СтандартнаяОбработка = Ложь;
	//	Возврат;
	//КонецЕсли;
	
	ЭтотОбъект.МаршрутПодписания = ТипМаршрутаСсылка;
	ЭтотОбъект.ТаблицаПодписания.Очистить();
	
	_РуководительРавенИнициатору = Ложь;
	_РуководительРавенИнициаторуСтарый = Ложь;
	
	_МассивУдаляемыхСтадий = Новый Массив();
	
	Для Каждого Строка Из ТипМаршрутаСсылка.ТаблицаПодписей Цикл
		Если ТипЗнч(Строка.УсловиеВхожденияВМаршрут) = Тип("Строка") Тогда
			Если НЕ ПустаяСтрока(Строка.УсловиеВхожденияВМаршрут) Тогда
				Если НЕ БизнесПроцессы.Подписание.ПроверитьСсылку(ОбъектВладелецСсылка, Строка.УсловиеВхожденияВМаршрут) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		Конецесли;
			
		Если (Строка(Строка.Подразделение) <> "") И (Строка(Строка.Должность) <> "") Тогда
			НайдСтроки = ЭтотОбъект.ТаблицаПодписания.НайтиСтроки(Новый Структура("Подразделение, Должность",Строка.Подразделение, Строка.Должность));
			
			Если НайдСтроки.Количество() > 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если Строка(Строка.Сотрудник) <> "" Тогда
			Если ЭтотОбъект.ТаблицаПодписания.Найти(Строка.Сотрудник,"Стадия") <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;	
		
		Если Строка(Строка.РольДокументооборота) <> "" Тогда
			Если ЭтотОбъект.ТаблицаПодписания.Найти(Строка.РольДокументооборота,"Стадия") <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если (Строка(Строка.Подразделение) <> "") И (Строка(Строка.Должность) <> "") Тогда
			стр = ЭтотОбъект.ТаблицаПодписания.Добавить();
			стр.Подразделение 	= Строка.Подразделение;
			стр.Должность 		= Строка.Должность;
			стр.Приоритет 	 	= Строка.Приоритет;
			стр.Email 		 	= Строка.Email;
			стр.SMS 			= Строка.SMS;				
			стр.Редактирование 	= Строка.Редактирование;
		ИначеЕсли Строка(Строка.Сотрудник) <> "" Тогда
			стр = ЭтотОбъект.ТаблицаПодписания.Добавить();
			стр.Стадия 			= Строка.Сотрудник;	
			стр.Приоритет 	 	= Строка.Приоритет;
			стр.Email 		 	= Строка.Email;
			стр.SMS 			= Строка.SMS;				
			стр.Редактирование 	= Строка.Редактирование;
		ИначеЕсли Строка(Строка.РольДокументооборота) <> "" Тогда 
			стр = ЭтотОбъект.ТаблицаПодписания.Добавить();
            стр.Стадия = Строка.РольДокументооборота;

			_Стадия = Неопределено;
			
			Если Строка.РольДокументооборота.Предопределенный Тогда
				_Стадия = БизнесПроцессы.Подписание.ВернутьПредопределенныйЭлементНаОснованииДокумента(Строка.РольДокументооборота, ОбъектВладелецСсылка, Неопределено); //Строка.РольДокументооборота.ТипОтбора);
				
				Если НЕ ЗначениеЗаполнено(_Стадия) ИЛИ (ТипЗнч(_Стадия) = Тип("СписокЗначений") И _Стадия.Количество() = 0) Тогда
					ЭтотОбъект.ТаблицаПодписания.Удалить(стр);
					Продолжить;
				КонецЕсли;
			Конецесли;
			
			Если НЕ ЗначениеЗаполнено(стр.Стадия) И НЕ ЗначениеЗаполнено(_Стадия) Тогда
				ЭтотОбъект.ТаблицаПодписания.Удалить(стр);
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(_Стадия) И ТипЗнч(_Стадия) = Тип("СписокЗначений") Тогда
				_Инд = 1;
				
				Для Каждого _С Из _Стадия Цикл
					//Если _ДокументДоступаКПомещениям Тогда
					//	_Приоритет = 500 + _Инд;
					//Иначе
						_Приоритет = Строка.Приоритет;
					//КонецЕсли;
					
					Если (_Инд > 1) Тогда
						стр = ЭтотОбъект.ТаблицаПодписания.Добавить();
					КонецЕсли;
					
					стр.Стадия = _С.Значение;
					стр.Приоритет 	 	= _Приоритет;
					стр.Email 		 	= Строка.Email;
					стр.SMS 			= Строка.SMS;				
					стр.Редактирование 	= Строка.Редактирование;
					
					_Инд = _Инд + 1;
				КонецЦикла;
			Иначе
				Если ЗначениеЗаполнено(_Стадия) Тогда
					стр.Стадия = _Стадия;
				КонецЕсли;
				
				стр.Приоритет 	 	= Строка.Приоритет;
				стр.Email 		 	= Строка.Email;
				стр.SMS 			= Строка.SMS;				
				стр.Редактирование 	= Строка.Редактирование;
			КонецЕсли;
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
	_Метаданные = ПодписываемыйОбъект.Метаданные();
	
	_ЦФО = Неопределено;
	
	Если ур_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("ЦФО", _Метаданные) И ТипЗнч(ПодписываемыйОбъект.ЦФО) = Тип("СправочникСсылка.ур_ЦФО") Тогда
		_ЦФО = ПодписываемыйОбъект.ЦФО;
	ИначеЕсли ур_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("Проект", _Метаданные) И ТипЗнч(ПодписываемыйОбъект.Проект) = Тип("СправочникСсылка.ур_Проекты") Тогда
		_ЦФО = ПодписываемыйОбъект.Проект.ЦФО;
	КонецЕсли;
	
	Если НЕ (_ЦФО = Неопределено) Тогда
		//ЗапросЛистыВизирования = но_Документооборот.СформироватьЗапросПоДокументамЛистыВизирования(Истина);
		//РезультатЛистыВизирования = ЗапросЛистыВизирования.Выполнить().Выгрузить();
		//
		//Если РезультатЛистыВизирования.Найти(_ЦФО, "ЦФО") = Неопределено Тогда
		//	_МассивУдаляемыхСтадий.Добавить(Справочники.но_РолиДокументооборота.Продюсер);
		//КонецЕсли;
	КонецЕсли;
	
	Для Каждого _Стадия Из _МассивУдаляемыхСтадий Цикл
		Если ЭтотОбъект.ТаблицаПодписания.Количество() > 1 Тогда
			_НС = ЭтотОбъект.ТаблицаПодписания.Найти(_Стадия, "Стадия");
			
			Если НЕ (_НС = Неопределено) Тогда
				ЭтотОбъект.ТаблицаПодписания.Удалить(_НС);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//-----------------Очиска
	МассивУдаляемыхСтрок = Новый Массив();
	НомерСтроки = 0;
	
	Пока НомерСтроки < ЭтотОбъект.ТаблицаПодписания.Количество() Цикл
		СтрокаМаршрута = ЭтотОбъект.ТаблицаПодписания[НомерСтроки];
		НомерСтроки = НомерСтроки + 1;
		
		Если ТипЗНЧ(СтрокаМаршрута.Стадия) = Тип("СправочникСсылка.но_РолиДокументооборота") Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	но_РолиДокументооборотаУчастникиСогласования.Пользователь КАК ОчищаемаяСтадия
			                      |ИЗ
			                      |	Справочник.но_РолиДокументооборота.УчастникиСогласования КАК но_РолиДокументооборотаУчастникиСогласования
			                      |ГДЕ
			                      |	но_РолиДокументооборотаУчастникиСогласования.Ссылка = &РольДокументооборота
			                      |	И но_РолиДокументооборотаУчастникиСогласования.Дата1 <= &ТекДата
			                      |	И (но_РолиДокументооборотаУчастникиСогласования.Дата2 >= &ТекДата
			                      |	ИЛИ но_РолиДокументооборотаУчастникиСогласования.Дата2 = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
			                      |
			                      |СГРУППИРОВАТЬ ПО
			                      |	но_РолиДокументооборотаУчастникиСогласования.Пользователь");
								  
			Запрос.УстановитьПараметр("ТекДата", НачалоДня(ур_ОбщегоНазначенияСервер._ВернутьВремяНаСервере()));
			Запрос.УстановитьПараметр("РольДокументооборота", СтрокаМаршрута.Стадия);
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				УдаляемыеСтроки = ЭтотОбъект.ТаблицаПодписания.НайтиСтроки(Новый Структура("Стадия", Выборка.ОчищаемаяСтадия));
				
				Если (УдаляемыеСтроки.Количество() = 0) Тогда
					Если ТипЗНЧ(Выборка.ОчищаемаяСтадия) = Тип("СправочникСсылка.Пользователи") Тогда
						Если ЗначениеЗаполнено(Выборка.ОчищаемаяСтадия.ур_ФизЛицо) Тогда
							УдаляемыеСтроки = ЭтотОбъект.ТаблицаПодписания.НайтиСтроки(Новый Структура("Стадия",Выборка.ОчищаемаяСтадия.ур_ФизЛицо));
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
					УдаляемаяСтрока.Стадия = СтрокаМаршрута.Стадия;		
				КонецЦикла;
				
				Если УдаляемыеСтроки.Количество() > 0 Тогда
					ЭтотОбъект.ТаблицаПодписания.Удалить(СтрокаМаршрута);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	СтрокаСвертки = "";
	
	Для Каждого РеквизитТЧ Из Метаданные.БизнесПроцессы.Подписание.ТабличныеЧасти.ТаблицаПодписания.Реквизиты Цикл
		СтрокаСвертки = СтрокаСвертки + РеквизитТЧ.Имя+",";
	КонецЦикла;
	
	СтрокаСвертки = Лев(СтрокаСвертки,СтрДлина(СтрокаСвертки)-1);
	ЭтотОбъект.ТаблицаПодписания.Свернуть(СтрокаСвертки,"");
	ЭтотОбъект.ТаблицаПодписания.Сортировать("Приоритет Убыв");		 
	
	//Заполнение таблицы уведомлений
	ЭтотОбъект.ТаблицаУведомлений.Очистить();
	
	Для Каждого Строка Из ЭтотОбъект.МаршрутПодписания.ТаблицаУведомлений Цикл
		Если ТипЗнч(Строка.УсловиеВхожденияВМаршрут) = Тип("Строка") Тогда
			Если НЕ ПустаяСтрока(Строка.УсловиеВхожденияВМаршрут) Тогда
				Если НЕ БизнесПроцессы.Подписание.ПроверитьСсылку(ОбъектВладелецСсылка, Строка.УсловиеВхожденияВМаршрут) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		Конецесли;
		
		Если (Строка(Строка.Подразделение) <> "") И (Строка(Строка.Должность) <> "") Тогда
			Стр 				= ЭтотОбъект.ТаблицаУведомлений.Добавить();
			Стр.Подразделение 	= Строка.Подразделение;
			Стр.Должность 		= Строка.Должность; 
			Стр.Email 			= Строка.Email;
			Стр.SMS 			= Строка.SMS;
		ИначеЕсли Строка(Строка.Сотрудник) <> "" Тогда
			Стр 			= ЭтотОбъект.ТаблицаУведомлений.Добавить();
			Стр.Получатель 	= Строка.Сотрудник;
			Стр.Email 		= Строка.Email;
			Стр.SMS 		= Строка.SMS;
		ИначеЕсли Строка(Строка.РольДокументооборота) <> "" Тогда 
			Отв = Строка.РольДокументооборота;
			
			Если Строка.РольДокументооборота.Предопределенный Тогда
				Отв = БизнесПроцессы.Подписание.ВернутьПредопределенныйЭлементНаОснованииДокумента(Строка.РольДокументооборота, ОбъектВладелецСсылка);
			КонецЕсли;
			
			Стр 			= ЭтотОбъект.ТаблицаУведомлений.Добавить();
			Стр.Получатель 	= Отв;
			Стр.Email 		= Строка.Email;
			Стр.SMS 		= Строка.SMS;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуМаршрутаНаОсновании(_Основание, _Приемник)
	_Приемник.СрокПодписания = _Основание.СрокПодписания;
	_Приемник.Приоритет 	 = _Основание.Приоритет;
	_Приемник.Email 		 = _Основание.Email;
	_Приемник.SMS 			 = _Основание.SMS;				
	_Приемник.Редактирование = _Основание.Редактирование;
	_Приемник.ВидДействия 	 = _Основание.ВидДействия;	
	_Приемник.Получатель 	 = _Основание.Получатель;	
	_Приемник.ПодписаниеВсех = _Основание.Параллельность;	
КонецПроцедуры

//Регламентирование документа по времени
Функция ВернутьДатуИнициацииПодписания(Документ)
	СсылкаПоследнегоПроцесса = СогласованиеДокументов.ПолучитьТекущийБизнесПроцессДляОбъекта(Документ);
	
	Если СсылкаПоследнегоПроцесса.Пустая() Тогда
		Возврат '00010101';
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	СогласованиеДокумента.Дата КАК Дата
	                      |ИЗ
	                      |	Задача.СогласованиеДокумента КАК СогласованиеДокумента
	                      |ГДЕ
	                      |	СогласованиеДокумента.БизнесПроцесс = &БизнесПроцесс
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Дата УБЫВ");
						  
	Запрос.УстановитьПараметр("БизнесПроцесс",СсылкаПоследнегоПроцесса);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Дата;
	Иначе
		Возврат '00010101';
	КонецЕсли;
КонецФункции

Функция ПолучитьБазовуюДатуДляДокумента(Документ,Класс)
	Если Класс = 1 Тогда
		Метаданныедокумента = Документ.Метаданные();
		
		Если Метаданныедокумента.Реквизиты.Найти("БазоваяДата") = Неопределено ТОгда
			Возврат Документ.Дата;
		Иначе
			Возврат Документ.БазоваяДата;
		КонецЕсли;
	Иначеесли Класс = 2 ТОгда
		ИндексПрошлого = СогласованиеДокументов.ПолучитьТекущийБизнесПроцессДляОбъекта(Документ).Индекс;
		
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		                      |	СогласованиеДокумента.Дата
		                      |ИЗ
		                      |	Задача.СогласованиеДокумента КАК СогласованиеДокумента
		                      |ГДЕ
		                      |	СогласованиеДокумента.Состояние В(&Состояние)
		                      |	И СогласованиеДокумента.Индекс = &Индекс
		                      |	И СогласованиеДокумента.БизнесПроцесс.ПодписываемыйОбъект = &ПодписываемыйОбъект");
							  
		СписокСтатусов = Новый СписокЗначений();
		СписокСтатусов.Добавить(Перечисления.но_СостояниеПодписи.Подписан);
		СписокСтатусов.Добавить(Перечисления.но_СостояниеПодписи.Приостановлен);
		
		Запрос.УстановитьПараметр("ПодписываемыйОбъект",Документ);
		Запрос.УстановитьПараметр("Состояние",СписокСтатусов);
		Запрос.УстановитьПараметр("Индекс",ИндексПрошлого);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Дата;
		Иначе
			Возврат '00010101';
		КонецЕсли;
	Иначе
		Возврат ВернутьДатуИнициацииПодписания(Документ);
	КонецЕсли;
КонецФункции

Функция	ВернутьТекущуюСтруктуруПараметровОграниченийДляСтадииДокумента(Документ,БизнесПроцесс,НомерСтрокиТЧМаршрута)
	СтруктураВозврата = Новый Структура("СрокПодписания,ВидДействия,Получатель,БазовоеСобытие",0,0,Неопределено,0);
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПодписаниеТаблицаПодписания.Получатель,
	                      |	ПодписаниеТаблицаПодписания.СрокПодписания,
	                      |	ПодписаниеТаблицаПодписания.БазовоеСобытие,
	                      |	ПодписаниеТаблицаПодписания.ВидДействия
	                      |ИЗ
	                      |	БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
	                      |ГДЕ
	                      |	ПодписаниеТаблицаПодписания.Ссылка = &Ссылка
	                      |	И ПодписаниеТаблицаПодписания.НомерСтроки = &НомерСтроки");
						  
	Запрос.УстановитьПараметр("Ссылка",БизнесПроцесс);
	Запрос.УстановитьПараметр("НомерСтроки",НомерСтрокиТЧМаршрута);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		СтруктураВозврата.СрокПодписания = Выборка.СрокПодписания;
		СтруктураВозврата.ВидДействия = Выборка.ВидДействия;
		СтруктураВозврата.Получатель = Выборка.Получатель;
		СтруктураВозврата.БазовоеСобытие = Выборка.БазовоеСобытие;
	КонецЕсли;
	
	Возврат СтруктураВозврата;
КонецФункции

Функция ВыполнитьКодДействияДляДокументаИзСтруктуры(СтрПараметров,Документ,Стадия)
	
	Если СтрПараметров.ВидДействия = 1 Тогда
		Инициатор = ПолучитьПользователяИнициатора(Документ);
		
		Если НЕ Инициатор.Пустая() Тогда
			СоздатьЗадачуВМодуле(Инициатор,Документ,Стадия);
			УведомитьПоМылу(Инициатор,"Нарушен срок подписания документа "+Строка(Документ),Истина,Ложь);
		КонецЕсли;
	ИначеЕсли СтрПараметров.ВидДействия = 2 Тогда
		Инициатор = ПолучитьПользователяИнициатора(Документ);
		
		Если НЕ Инициатор.Пустая() Тогда
			ФизЛицоИнициатор = Инициатор.ур_ФизЛицо;
			
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	МатрицаДопустимыхПерепоручений.Ответственный
			                      |ИЗ
			                      |	РегистрСведений.МатрицаДопустимыхПерепоручений КАК МатрицаДопустимыхПерепоручений
			                      |ГДЕ
			                      |	МатрицаДопустимыхПерепоручений.Исполнитель = &Исполнитель");
								  
			Запрос.УстановитьПараметр("Исполнитель",ФизЛицоИнициатор);
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				СоздатьЗадачуВМодуле(Выборка.Ответственный,Документ,Стадия);
				УведомитьПоМылу(Инициатор,"Нарушен срок подписания документа "+Строка(Документ),Истина,Ложь);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли СтрПараметров.ВидДействия = 3 Тогда		
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		                      |	ПодписаниеТаблицаПодписания.Стадия
		                      |ИЗ
		                      |	БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
		                      |ГДЕ
		                      |	ПодписаниеТаблицаПодписания.Ссылка = &Ссылка
		                      |	И ПодписаниеТаблицаПодписания.СостояниеПодписи В(&СписокПодписей)
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	ПодписаниеТаблицаПодписания.Приоритет");
							  
		Запрос.УстановитьПараметр("Ссылка", СогласованиеДокументов.ПолучитьТекущийБизнесПроцессДляОбъекта(Документ));
		
		СписокПодписей = Новый СписокЗначений();
		СписокПодписей.Добавить(Перечисления.но_СостояниеПодписи.НаПодписании);
		СписокПодписей.Добавить(Перечисления.но_СостояниеПодписи.Ожидает);
		
		Запрос.УстановитьПараметр("СписокПодписей", СписокПодписей);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда  
			СоздатьЗадачуВМодуле(Выборка.Стадия,Документ,Стадия);	
			УведомитьПоМылу(Выборка.Стадия,"Нарушен срок подписания документа "+Строка(Документ),Истина,Ложь);
		КонецЕсли;
	ИначеЕсли СтрПараметров.ВидДействия = 4 Тогда
		Если ЗначениеЗаполнено(СтрПараметров.Получатель) Тогда
			УведомитьПоМылу(СтрПараметров.Получатель,"Нарушен срок подписания документа "+Строка(Документ),Истина,Ложь);
			СоздатьЗадачуВМодуле(СтрПараметров.Получатель,Документ,Стадия);
		КонецЕсли;
	ИначеЕсли СтрПараметров.ВидДействия = 5 Тогда
		БизнесПроцессОбъект = СогласованиеДокументов.ПолучитьТекущийБизнесПроцессДляОбъекта(Документ).ПолучитьОбъект();
		
		Если БизнесПроцессОбъект <> Неопределено ТОгда
			БизнесПроцессОбъект.ЗаблокироватьПодписание();    
		Конецесли;
	КонецЕсли;
КонецФункции

Функция ПолучитьПользователяИнициатора(Документ)
	
	БП = гхб_СогласованиеДокументов.ПолучитьТекущийБизнесПроцессДляОбъекта(Документ);
	
	Если НЕ БП.Пустая() Тогда 
		Возврат БП.ИнициаторПодписания;
	Иначе
		Возврат Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция СоздатьЗадачуВМодуле(пПолучатель,Документ,НаКакомЭтапе)
	
	СоздатьЗадачуПоБизнесПроцессу("Уведомление о нарушении срока",
		пПолучатель, Перечисления.ВидыСообщений.УведомлениеОСбое, Документ, НаКакомЭтапе);
		
КонецФункции

Функция СоздатьЗадачуПоБизнесПроцессу(пТекст,пПолучатель,пВидСообщения,пДокумент,пОтветственный = Неопределено)
	НоваяЗадача = Задачи.СогласованиеДокумента.СоздатьЗадачу();	
	НоваяЗадача.Дата = ТекущаяДата;

	ЗаполнитьПолучателяУЗадачи(НоваяЗадача,пПолучатель);
	
	НоваяЗадача.Документ = пДокумент;
	НоваяЗадача.Наименование = пТекст;
	НоваяЗадача.ВидСообщения = пВидСообщения;	
	
	Если пОтветственный = Неопределено Тогда
		Попытка
			пОтветственный = пДокумент.Ответственный;
			НоваяЗадача.Ответственный = пОтветственный;
		Исключение
			//
		КонецПопытки;
	Иначе
		НоваяЗадача.Ответственный = пОтветственный; 	
	КонецЕсли;
	
	НоваяЗадача.Примечание = пТекст + " " + Строка(пДокумент);
	НоваяЗадача.Маршрут = Справочники.МаршрутыДокумента.ПустаяСсылка();
	НоваяЗадача.НомерСтрокиТЧМаршрута = 0;
	НоваяЗадача.ДатаВыполненияСрок = ТекущаяДата;
	НоваяЗадача.Записать();
	Возврат НоваяЗадача;
КонецФункции

Функция ПолучитьВремяВыполненияСрок(Документ,Срок,БазовоеСобытие) Экспорт
	БазовоеВремя = ПолучитьБазовуюДатуДляДокумента(Документ,БазовоеСобытие);
	Возврат БазовоеВремя + Срок*60*60; 
КонецФункции 

Функция ПроверитьСтатусыПоставленныхЗадачНаДату(ТекущаяДата,Документ = Неопределено) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СогласованиеДокумента.Документ,
	                      |	ВЫБОР
	                      |		КОГДА СогласованиеДокумента.Пользователь <> &ПустойПользователь
	                      |			ТОГДА СогласованиеДокумента.Пользователь
	                      |		КОГДА СогласованиеДокумента.РольДокументооборота <> &ПустойРольДокументооборота
	                      |			ТОГДА СогласованиеДокумента.РольДокументооборота
	                      |		КОГДА СогласованиеДокумента.Сотрудник <> &ПустойРольСотрудник
	                      |			ТОГДА СогласованиеДокумента.Сотрудник
	                      |		КОГДА СогласованиеДокумента.Подразделение <> &ПустойПодразделение
	                      |			ТОГДА СогласованиеДокумента.Подразделение
	                      |	КОНЕЦ КАК Стадия,
	                      |	СогласованиеДокумента.Ссылка КАК ЗадачаПоПодписанию,
	                      |	СогласованиеДокумента.БизнесПроцесс,
	                      |	СогласованиеДокумента.НомерСтрокиТЧМаршрута
	                      |ИЗ
	                      |	Задача.СогласованиеДокумента КАК СогласованиеДокумента
	                      |ГДЕ
	                      |	СогласованиеДокумента.Выполнена = ЛОЖЬ
	                      |	И СогласованиеДокумента.ДатаВыполненияСрок <= &ДатаВыполненияСрок
	                      |	И СогласованиеДокумента.ВидСообщения = &ВидСообщения
	                      |	И СогласованиеДокумента.НомерСтрокиТЧМаршрута <> 0
	                      |	И (СогласованиеДокумента.Документ = &Документ
	                      |			ИЛИ &НеПроверятьДокумент)
	                      |	И (НЕ СогласованиеДокумента.Документ ССЫЛКА Задача.СогласованиеДокумента)
	                      |	И СогласованиеДокумента.ДатаВыполненияСрок <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	                      |	И СогласованиеДокумента.БизнесПроцесс.Завершен = ЛОЖЬ");
						  
	Запрос.УстановитьПараметр("ПустойПользователь",Справочники.Пользователи.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойРольДокументооборота",Справочники.РолиДокументооборота.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойРольСотрудник",Справочники.ФизическиеЛица.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойПодразделение",Справочники.ур_ПодразделенияОрганизации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ДатаВыполненияСрок",ТекущаяДата);
	Запрос.УстановитьПараметр("ВидСообщения",Перечисления.ВидыСообщений.Визирование);
	Запрос.УстановитьПараметр("Документ",Документ);
	
	Если Документ = Неопределено Тогда
		Запрос.УстановитьПараметр("НеПроверятьДокумент",Истина);
	Иначе
		Запрос.УстановитьПараметр("НеПроверятьДокумент",Ложь);
	КонецЕсли;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строкарезультата Из Результат Цикл
		СтруктураДействий = ВернутьТекущуюСтруктуруПараметровОграниченийДляСтадииДокумента(Строкарезультата.Документ,Строкарезультата.БизнесПроцесс,Строкарезультата.НомерСтрокиТЧМаршрута);
		ВыполнитьКодДействияДляДокументаИзСтруктуры(СтруктураДействий,Строкарезультата.Документ,Строкарезультата.Стадия);
		ЗадачаОбъект = Строкарезультата.ЗадачаПоПодписанию.ПолучитьОбъект();
		ЗадачаОбъект.ДатаВыполненияСрок = Дата(1,1,1,0,0,0);
		ЗадачаОбъект.Записать();
	КонецЦикла;
КонецФункции

Функция ПроверитьДопустимостьПодписания(Документ,ВремяСобытия,ВидДействия,Получатель) Экспорт
	//Если ВидДействия <> 0 Тогда
	//	БазоваяДата = ПолучитьБазовуюДатуДляДокумента(Документ,1);
	//	
	//	Если БазоваяДата - ВремяСобытия * 3600 < ТекущаяДата Тогда
	//		Если ВидДействия = 4 Тогда
	//			Если ЗначениеЗаполнено(Получатель) Тогда
	//				СоздатьЗадачуВМодуле(Получатель,Документ,"инициации подписания");
	//			КонецЕсли; 
	//		ИначеЕсли ВидДействия = 5 Тогда
	//			Возврат Ложь;
	//		Конецесли;
	//	КонецЕсли;
	//Иначе
	//	Возврат Истина;
	//КонецЕсли;
	
	Возврат Истина;
КонецФункции

//Процедуры бизнес процесса
Процедура МаршрутПройденПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Если ЭтотОбъект.Состояние = Перечисления.но_СостояниеПодписи.Отозван Тогда
		Результат = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПодписаниеТаблицаПодписания.Приоритет КАК Приоритет,
	                      |	ПодписаниеТаблицаПодписания.СостояниеПодписи КАК СостояниеПодписи,
	                      |	ПодписаниеТаблицаПодписания.ПодписаниеВсех КАК ПодписаниеВсех
	                      |ИЗ
	                      |	БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
	                      |ГДЕ
	                      |	ПодписаниеТаблицаПодписания.Ссылка = &Ссылка
	                      |	И ПодписаниеТаблицаПодписания.СостояниеПодписи <> &НаОзнакомлении
	                      |	И ПодписаниеТаблицаПодписания.СостояниеПодписи <> &Ознакомлен
	                      |ИТОГИ
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СостояниеПодписи),
	                      |	МАКСИМУМ(ПодписаниеВсех)
	                      |ПО
	                      |	Приоритет");
						  
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("НаОзнакомлении",Перечисления.но_СостояниеПодписи.НаОзнакомлении);
	Запрос.УстановитьПараметр("Ознакомлен",Перечисления.но_СостояниеПодписи.Ознакомлен);
	ДеревоРезультата = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Подписан = Истина;
	Заблокирован = Истина;
	Отклонен = Истина;
	
	Для Каждого СтрокаВерхнегоУровня Из ДеревоРезультата.Строки Цикл
		Если СтрокаВерхнегоУровня.ПодписаниеВсех Тогда
			Для Каждого СтрокаВторогоУровня Из СтрокаВерхнегоУровня.Строки Цикл
				Подписан = Подписан И (СтрокаВторогоУровня.СостояниеПодписи = Перечисления.но_СостояниеПодписи.Подписан);
                Заблокирован = Заблокирован ИЛИ (СтрокаВторогоУровня.СостояниеПодписи = Перечисления.но_СостояниеПодписи.Заблокирован);
				Отклонен = Отклонен ИЛИ (СтрокаВторогоУровня.СостояниеПодписи = Перечисления.но_СостояниеПодписи.Отклонен);
			КонецЦикла;
		Иначе
			Подписан = Подписан И (СтрокаВерхнегоУровня.Строки.Найти(Перечисления.но_СостояниеПодписи.Подписан,"СостояниеПодписи") <> Неопределено);
			Заблокирован = Заблокирован И (СтрокаВерхнегоУровня.Строки.Найти(Перечисления.но_СостояниеПодписи.Заблокирован,"СостояниеПодписи") <> Неопределено);
			Отклонен = Заблокирован И (СтрокаВерхнегоУровня.Строки.Найти(Перечисления.но_СостояниеПодписи.Отклонен,"СостояниеПодписи") <> Неопределено);
		КонецЕсли;
		
		Если НЕ Подписан Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Подписан Тогда
		 УстановитьСтатусУОбъекта(Перечисления.но_СтатусыДокумента.Утвержден);	
		 
		 Попытка
		 	ЭтотОбъект.Прочитать();
	 	 Исключение
		 	//
		КонецПопытки;
		
		 ЭтотОбъект.Состояние = Перечисления.но_СостояниеПодписи.Подписан;
		 ЭтотОбъект.Записать();
	КонецЕсли;
	
	Результат = Подписан;	
КонецПроцедуры

Процедура ОбработкаПодписанияОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СогласованиеДокумента.Состояние,
	                      |	СогласованиеДокумента.НомерСтрокиТЧМаршрута,
	                      |	СогласованиеДокумента.Ответственный
	                      |ИЗ
	                      |	Задача.СогласованиеДокумента КАК СогласованиеДокумента
	                      |ГДЕ
	                      |	СогласованиеДокумента.БизнесПроцесс = &БизнесПроцесс
	                      |	И СогласованиеДокумента.Индекс = &Индекс");
						  
	Запрос.УстановитьПараметр("БизнесПроцесс",ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Индекс",ЭтотОбъект.Индекс - 1);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Состояние = Перечисления.но_СостояниеПодписи.Подписан Тогда
			Результат = БизнесПроцессы.Подписание.ТочкиМаршрута.ОбработкаПодписания.Варианты.Подписан;
			ЗапросКонтроляРедактирования = Новый Запрос("ВЫБРАТЬ
			                                            |	ИсторияПодписанияДокументаСрезПоследних.ДокументМодифицировался
			                                            |ИЗ
			                                            |	РегистрСведений.ИсторияПодписанияДокумента.СрезПоследних КАК ИсторияПодписанияДокументаСрезПоследних
			                                            |ГДЕ
			                                            |	ИсторияПодписанияДокументаСрезПоследних.БизнесПроцесс = &БизнесПроцесс
			                                            |	И ИсторияПодписанияДокументаСрезПоследних.Документ = &Документ");
														
			ЗапросКонтроляРедактирования.УстановитьПараметр("БизнесПроцесс",ЭтотОбъект.Ссылка);
			ЗапросКонтроляРедактирования.УстановитьПараметр("Документ",ЭтотОбъект.ПодписываемыйОбъект);
			ВыборкаКонтроляРедактирования = ЗапросКонтроляРедактирования.Выполнить().Выбрать();
			лДокументРедактировался = Ложь;
			
			Если ВыборкаКонтроляРедактирования.Следующий() ТОгда
				лДокументРедактировался = ВыборкаКонтроляРедактирования.ДокументМодифицировался;
			КонецЕсли;
			
			Если лДокументРедактировался Тогда
				ИсполнительТек = Выборка.Ответственный;
				Запрос = Новый Запрос("ВЫБРАТЬ
				                      |	ПодписаниеТаблицаПодписания.СозданнаяЗадача.Ответственный КАК Ответственный
				                      |ИЗ
				                      |	БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
				                      |ГДЕ
				                      |	ПодписаниеТаблицаПодписания.Ссылка = &Ссылка
				                      |	И ПодписаниеТаблицаПодписания.СостояниеПодписи = &СостояниеПодписи
				                      |	И ПодписаниеТаблицаПодписания.СозданнаяЗадача.Ответственный <> &ОтветственныйТек");
									  
				Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
				Запрос.УстановитьПараметр("СостояниеПодписи",Перечисления.но_СостояниеПодписи.Подписан);
				Запрос.УстановитьПараметр("ОтветственныйТек",ИсполнительТек);
				ТЧОтветственный = Запрос.Выполнить().Выгрузить();
				
				Попытка
					НоваяСтрока = ТЧОтветственный.Добавить();
					НоваяСтрока.Ответственный = ЭтотОбъект.ПодписываемыйОбъект.Ответственный;
					//НоваяСтрока.Ответственный = ЭтотОбъект.ИнициаторПодписания;
				Исключение
					//
				КонецПопытки;
				
				ТЧОтветственный.Свернуть("Ответственный");
				
				Для Каждого лПолучатель Из ТЧОтветственный Цикл
					СоздатьЗадачуПоБизнесПроцессу("Документ был изменен",лПолучатель.Ответственный,Перечисления.ВидыСообщений.Сообщение,ЭтотОбъект.ПодписываемыйОбъект,);	
				КонецЦикла;
				
				Менеджер = РегистрыСведений.ИсторияПодписанияДокумента.СоздатьМенеджерЗаписи();
				Менеджер.Документ = ЭтотОбъект.ПодписываемыйОбъект;
				Менеджер.БизнесПроцесс = ЭтотОбъект.Ссылка;
				Менеджер.ДокументМодифицировался = Ложь;
				Менеджер.Период = ТекущаяДата();
				Менеджер.Записать();
				ЭтотОбъект.Записать();
			КонецЕсли;
			
			Возврат;
		ИначеЕсли Выборка.Состояние = Перечисления.но_СостояниеПодписи.Отклонен Тогда
			ЭтотОбъект.Состояние = Перечисления.но_СостояниеПодписи.Отклонен;
			Результат = БизнесПроцессы.Подписание.ТочкиМаршрута.ОбработкаПодписания.Варианты.Отклонен;
			ЭтотОбъект.Записать();
			УстановитьСтатусУОбъекта(Перечисления.но_СтатусыДокумента.Черновик);
			Возврат;
		ИначеЕсли Выборка.Состояние = Перечисления.но_СостояниеПодписи.Отозван Тогда
			НомерСтроки = Выборка.НомерСтрокиТЧМаршрута - 1;
			
			Если ЭтотОбъект.Стартован Тогда
				ПерейтиКСледующемуПриоритету(ЭтотОбъект.ТаблицаПодписания[НомерСтроки].Приоритет);
			КонецЕсли;
			
			Результат = БизнесПроцессы.Подписание.ТочкиМаршрута.ОбработкаПодписания.Варианты.Отозван;
			ЭтотОбъект.Записать();
			УстановитьСтатусУОбъекта(Перечисления.но_СтатусыДокумента.Черновик);
			Возврат;
		ИначеЕсли Выборка.Состояние = Перечисления.но_СостояниеПодписи.Ознакомлен Тогда
			Результат = БизнесПроцессы.Подписание.ТочкиМаршрута.ОбработкаПодписания.Варианты.Ознакомлен;
			Возврат;
		Иначе
			Результат = БизнесПроцессы.Подписание.ТочкиМаршрута.ОбработкаПодписания.Варианты.НеизвестныйСтатус;	
			УстановитьСтатусУОбъекта(Перечисления.но_СтатусыДокумента.Черновик);
		КонецЕсли;
	Иначе
		Результат = БизнесПроцессы.Подписание.ТочкиМаршрута.ОбработкаПодписания.Варианты.НеизвестныйСтатус;
		УстановитьСтатусУОбъекта(Перечисления.но_СтатусыДокумента.Черновик);
	КонецЕсли;
КонецПроцедуры

Процедура КонтрольПаралельногоПодписанияОбработка(ТочкаМаршрутаБизнесПроцесса)
	//
КонецПроцедуры

Процедура ОтозванИнициаторомПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Попытка
		АвторДокумента = ЭтотОбъект.ПодписываемыйОбъект.Ответственный;
		//АвторДокумента = ЭтотОбъект.ИнициаторПодписания;
	Исключение
		Результат = Ложь;
		Возврат;
	КонецПопытки;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СогласованиеДокумента.Состояние
	                      |ИЗ
	                      |	Задача.СогласованиеДокумента КАК СогласованиеДокумента
	                      |ГДЕ
	                      |	СогласованиеДокумента.БизнесПроцесс = &БизнесПроцесс
	                      |	И СогласованиеДокумента.Индекс = &Индекс
	                      |	И СогласованиеДокумента.Ответственный = &Ответственный");
						  
	Запрос.УстановитьПараметр("БизнесПроцесс",ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Ответственный",АвторДокумента);
	Запрос.УстановитьПараметр("Индекс",ЭтотОбъект.Индекс - 1);
	Выборка = Запрос.Выполнить().Выбрать();	
	Результат = Выборка.Следующий();	
	
	Если Результат Тогда
		ЭтотОбъект.Прочитать();
		ЭтотОбъект.Состояние = Перечисления.но_СостояниеПодписи.Отозван;
		ЭтотОбъект.Записать();
	Конецесли;
КонецПроцедуры

Функция ВернутьСледующийПриоритет(ВерхняяГраница) Экспорт
	МаксПриоритет = -1;
	
	Для Каждого СтрокаТаблицыПодписания из ЭтотОбъект.ТаблицаПодписания Цикл                    
		Если (СтрокаТаблицыПодписания.Приоритет > МаксПриоритет) И (СтрокаТаблицыПодписания.Приоритет < ВерхняяГраница) Тогда
			МаксПриоритет = СтрокаТаблицыПодписания.Приоритет;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МаксПриоритет;
КонецФункции

Функция ВернутьПредыдущийПриоритет(_Граница) Экспорт
	_Приоритет = 999999;
	
	Для Каждого СтрокаТаблицыПодписания Из ЭтотОбъект.ТаблицаПодписания Цикл                    
		Если (СтрокаТаблицыПодписания.Приоритет < _Приоритет) И (СтрокаТаблицыПодписания.Приоритет > _Граница) Тогда
			_Приоритет = СтрокаТаблицыПодписания.Приоритет;
		КонецЕсли;
	КонецЦикла;
	
	Возврат _Приоритет;
КонецФункции

Процедура ПерейтиКСледующемуПриоритету(пПриоритет = Неопределено) Экспорт
	Если пПриоритет = Неопределено Тогда
		лПриоритет = ВернутьСледующийПриоритет(ЭтотОбъект.ТекущийПриориет);
	Иначе
		лПриоритет = пПриоритет;
	КонецЕсли;
	
	ЭтотОбъект.ТекущийПриориет = лПриоритет;
	лСостояние = Перечисления.но_СостояниеПодписи.НаПодписании; 
	
	Пока лПриоритет > -1 Цикл
		НайденныеСтроки = ЭтотОбъект.ТаблицаПодписания.НайтиСтроки(Новый Структура("Приоритет",лПриоритет));	
		
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			Если НайденнаяСтрока.СостояниеПодписи = Перечисления.но_СостояниеПодписи.НаОзнакомлении 
			 ИЛИ НайденнаяСтрока.СостояниеПодписи = Перечисления.но_СостояниеПодписи.Ознакомлен ТОгда
			    Если Не НайденнаяСтрока.СозданнаяЗадача.Пустая() Тогда
					НайденнаяСтрока.СозданнаяЗадача = Задачи.СогласованиеДокумента.ПустаяСсылка();
				КонецЕсли;
				
				Продолжить;
			КонецЕсли;
			
			НайденнаяСтрока.СостояниеПодписи = лСостояние;	
			НайденнаяСтрока.ДатаПодписания = '00010101';
			НайденнаяСтрока.Сотрудник = Справочники.Пользователи.ПустаяСсылка();
			НайденнаяСтрока.Комментарии = "";
			
			Если НЕ НайденнаяСтрока.СозданнаяЗадача.Пустая() Тогда
				НайденнаяСтрока.СозданнаяЗадача = Задачи.СогласованиеДокумента.ПустаяСсылка();
			КонецЕсли;
		КонецЦикла;
		
		лСостояние = Перечисления.но_СостояниеПодписи.Ожидает;
		лПриоритет = ВернутьСледующийПриоритет(лПриоритет);
	КонецЦикла;;
КонецПроцедуры

Процедура УстановитьСтатусУОбъекта(Статус) экспорт
	Объект = ЭтотОбъект.ПодписываемыйОбъект.ПолучитьОбъект();
	
	Попытка
		Объект.СостояниеДокумента = Статус;
		
		Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Объект.Ссылка)) Тогда
			СогласованиеДокументов.ЗаписатьДокументПроведениеПриСогласовании(ЭтотОбъект.ПодписываемыйОбъект);
			Если Объект.ПроверитьЗаполнение() Тогда
				Объект.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
				СогласованиеДокументов.УдалитьДокументПроведениеПриСогласовании(ЭтотОбъект.ПодписываемыйОбъект);
			Иначе
				ВызватьИсключение "Обнаружены ошибки заполнения документа";
			КонецЕсли;	
		Иначе
			Объект.Записать();
		КонецЕсли;
		
		#Если ТолстыйКлиентОбычноеПриложение Тогда
		ФормаОбъекта = ЭтотОбъект.ПодписываемыйОбъект.ПолучитьФорму();
		
		Если ФормаОбъекта.Открыта() Тогда
			ФормаОбъекта.Прочитать();
			#Если НЕ Сервер И НЕ ВнешнееСоединение Тогда
				но_ДокументооборотКлиент.КонтрольРедактирования(ФормаОбъекта);
				РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(""+Объект.Ответственный+" ("+Объект.СостояниеДокумента+")", Объект, ФормаОбъекта);
			#КонецЕсли
		Конецесли;
		#КонецЕсли
	Исключение
		Сообщить("Ошибка установки статуса в БП ""Подписание"": " + ОписаниеОшибки());	
	КонецПопытки;
КонецПроцедуры

Процедура СозданиеУведомленийПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Ном = 0;
	
	Попытка
		//ТекПолучатель = ЭтотОбъект.ПодписываемыйОбъект.Ответственный;
		ТекПолучатель = ЭтотОбъект.ИнициаторПодписания;
		ИнформМылом = Истина;
		ИнформСМС = Истина;
	Исключение
		Если ЭтотОбъект.Состояние <> Перечисления.но_СостояниеПодписи.Подписан Тогда
			Возврат;
		КонецЕсли;

		Если ЭтотОбъект.ТаблицаУведомлений.Количество() = 0 Тогда
			Возврат;
		Иначе
			ТекПолучатель = ЭтотОбъект.ТаблицаУведомлений[0].Получатель;
			ИнформМылом = ЭтотОбъект.ТаблицаУведомлений[0].Email;
			ИнформСМС = ЭтотОбъект.ТаблицаУведомлений[0].SMS;
			Ном = 1;
			Подразделение 	= ЭтотОбъект.ТаблицаУведомлений[0].Подразделение;
			Должность 		= ЭтотОбъект.ТаблицаУведомлений[0].Должность;
		Конецесли;
	КонецПопытки;
	
	Попытка
		лстрАвтора = Строка(ЭтотОбъект.ПодписываемыйОбъект.Ответственный);
		лАвтора = ЭтотОбъект.ПодписываемыйОбъект.Ответственный;
		//лстрАвтора = Строка(ЭтотОбъект.ИнициаторПодписания);
		//лАвтора = ЭтотОбъект.ИнициаторПодписания;
	Исключение
		лстрАвтора = "";
		лАвтора = Справочники.Пользователи.ПустаяСсылка();
	КонецПопытки;
	
	КолСтрок = ЭтотОбъект.ТаблицаУведомлений.Количество();
	ЭтотОбъект.Прочитать();
	
	// ++ Литвиненко 03.09.2020 #15017  
	ДопПараметры = ЭлектроннаяПочта.СформироватьСтруктуруДопПараметровОтправкиПисемИзОчереди();
	ДопПараметры._ТипПисьмаХТМЛ = Истина;
	// -- Литвиненко 03.09.2020 #15017
	
	Пока Ном <= ЭтотОбъект.ТаблицаУведомлений.Количество() Цикл
		НайденныеСтроки = ЭтотОбъект.ТаблицаПодписания.НайтиСтроки(Новый Структура("Стадия,СостояниеПодписи",ТекПолучатель,Перечисления.но_СостояниеПодписи.НаОзнакомлении));
		
		Если НайденныеСтроки.Количество() <> 0 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				Если ЗначениеЗаполнено(НайденнаяСтрока.СозданнаяЗадача) Тогда
					ЗО = НайденнаяСтрока.СозданнаяЗадача.ПолучитьОбъект();
					
					Если ЗО <> Неопределено ТОгда
						ЗО.УстановитьПометкуУдаления(Истина);
					КонецЕсли;
				КонецЕсли;
				
				ЭтотОбъект.ТаблицаПодписания.Удалить(НайденнаяСтрока);
			КонецЦикла;
		КонецЕсли;
		
		НоваяЗадача = Задачи.СогласованиеДокумента.СоздатьЗадачу(); 
		НоваяЗадача.Дата = ТекущаяДата;

		Если (Строка(Подразделение) <> "") И (Строка(Должность) <> "") Тогда
			НоваяСтрокаАдресаты = НоваяЗадача.Адресаты.Добавить();
			НоваяСтрокаАдресаты.Подразделение 	= Подразделение;
			НоваяСтрокаАдресаты.Должность 		= Должность;
			НайденныеСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ТаблицаУведомлений.НайтиСтроки(Новый Структура("Подразделение, Должность", Подразделение, Должность));
			
			Если НайденныеСтрокиМаршрута.Количество() > 0 Тогда
				Для Каждого СтрокаМаршрута Из НайденныеСтрокиМаршрута Цикл 
					ДопСтрокиМаршрута = ЭтотОбъект.МаршрутПодписания.ДополнительныеУведомления.НайтиСтроки(Новый Структура("УИД", СтрокаМаршрута.УИД));
					
					Для Каждого ДопСтрокаМаршрута Из ДопСтрокиМаршрута Цикл 
						НоваяСтрокаАдресаты = НоваяЗадача.Адресаты.Добавить();
						НоваяСтрокаАдресаты.Подразделение 	= ДопСтрокаМаршрута.Подразделение;
						НоваяСтрокаАдресаты.Должность 		= ДопСтрокаМаршрута.Должность;
					КонецЦикла;
				КонецЦикла;
				
				НоваяЗадача.Адресаты.Свернуть("Подразделение, Должность", "");
			КонецЕсли;
		КонецЕсли;

		ЗаполнитьПолучателяУЗадачи(НоваяЗадача,ТекПолучатель);
		НоваяЗадача.Документ = ЭтотОбъект.ПодписываемыйОбъект;
		НоваяЗадача.Наименование = "Подписание завершено";
		НоваяЗадача.ВидСообщения = Перечисления.ВидыСообщений.Визирование;
		НоваяЗадача.Примечание =  "Подписание завершено с статусом" + Строка(ЭтотОбъект.Состояние);
		НоваяЗадача.Маршрут = Справочники.но_МаршрутыСогласования.ПустаяСсылка();
		НоваяЗадача.НомерСтрокиТЧМаршрута = 0;
		НоваяЗадача.ДатаВыполненияСрок = ТекущаяДата;
		НоваяЗадача.БизнесПроцесс = ЭтотОбъект.Ссылка;
		НоваяЗадача.Ответственный = лАвтора;
		НоваяЗадача.Записать();		
		
		
		НоваяСтрокаТаблицыПодписания = ЭтотОбъект.ТаблицаПодписания.Добавить();
		НоваяСтрокаТаблицыПодписания.Стадия = ТекПолучатель;
		НоваяСтрокаТаблицыПодписания.Подразделение = Подразделение;
		НоваяСтрокаТаблицыПодписания.Должность = Должность;		
		НоваяСтрокаТаблицыПодписания.ДатаВыдачи = ТекущаяДата;
		НоваяСтрокаТаблицыПодписания.СостояниеПодписи = Перечисления.но_СостояниеПодписи.НаОзнакомлении;
		НоваяСтрокаТаблицыПодписания.СозданнаяЗадача = НоваяЗадача.Ссылка;
		
		ФормируемыеЗадачи.Добавить(НоваяЗадача);

		// ++ Литвиненко 28.08.2020 #15017  
		Текст = Справочники.ИдентификаторыОбъектовМетаданных.СформироватьШаблонПодписания(ЭтотОбъект.ПодписываемыйОбъект, НоваяСтрокаТаблицыПодписания.СозданнаяЗадача);
		ТекстСМС = "Поступил документ " + Строка(ЭтотОбъект.ПодписываемыйОбъект) + " на ознакомление "+лстрАвтора;
		Если ПустаяСтрока(Текст) Тогда
			Текст = ТекстСМС;
			ДопПараметры._ТипПисьмаХТМЛ = Ложь;
		КонецЕсли;
		// -- Литвиненко 28.08.2020 #15017
		Если НоваяЗадача.Адресаты.Количество() = 0 Тогда
			//УведомитьПоМылу(ТекПолучатель,"Поступил документ " + Строка(ЭтотОбъект.ПодписываемыйОбъект) + " на ознакомление "+лстрАвтора,ИнформМылом,ИнформСМС);			
			// ++ Литвиненко 10.09.2020 #15017  
			Если ИнформМылом Тогда
				УведомитьПоМылу(ТекПолучатель, Текст,		Истина,Ложь,,,,, ДопПараметры);
			КонецЕсли;
			Если ИнформСМС Тогда
				УведомитьПоМылу(ТекПолучатель, ТекстСМС,	Ложь,Истина,,,,, ДопПараметры);
			КонецЕсли;
			// -- Литвиненко 10.09.2020 #15017
		Иначе
			Для Каждого СтрАдресат Из НоваяЗадача.Адресаты Цикл 	
				//УведомитьПоМылу(ТекПолучатель, Текст,ИнформМылом,ИнформСМС,СтрАдресат.Подразделение,СтрАдресат.Должность, СтрАдресат.РольДокументооборота, СтрАдресат.Сотрудник);
				// ++ Литвиненко 10.09.2020 #15017  
				Если ИнформМылом Тогда
					УведомитьПоМылу(ТекПолучатель, Текст,		Истина,Ложь,СтрАдресат.Подразделение,СтрАдресат.Должность, СтрАдресат.РольДокументооборота, СтрАдресат.Сотрудник, ДопПараметры);
				КонецЕсли;
				Если ИнформСМС Тогда
					УведомитьПоМылу(ТекПолучатель, ТекстСМС,	Ложь,Истина,СтрАдресат.Подразделение,СтрАдресат.Должность, СтрАдресат.РольДокументооборота, СтрАдресат.Сотрудник, ДопПараметры);
				КонецЕсли;
				// -- Литвиненко 10.09.2020 #15017
			КонецЦикла;
		КонецЕсли;
		
		Если ЭтотОбъект.Состояние <> Перечисления.но_СостояниеПодписи.Подписан Тогда 
			Прервать;
		КонецЕсли;
		
		Если Ном = ЭтотОбъект.ТаблицаУведомлений.Количество() Тогда
			Прервать;
		КонецЕсли;
		ТекПолучатель = ЭтотОбъект.ТаблицаУведомлений[Ном].Получатель;
		ИнформМылом = ЭтотОбъект.ТаблицаУведомлений[Ном].Email;
		ИнформСМС = ЭтотОбъект.ТаблицаУведомлений[Ном].SMS;

		Подразделение 	= ЭтотОбъект.ТаблицаУведомлений[Ном].Подразделение;
		Должность 		= ЭтотОбъект.ТаблицаУведомлений[Ном].Должность;

		Ном = Ном + 1;	
	КонецЦикла;
	
	ЭтотОбъект.Завершен = Истина;
	ЭтотОбъект.Записать();
КонецПроцедуры

Процедура ЗаблокироватьПодписание() Экспорт
	Для Каждого СтрокаТаблицыПодписания из ЭтотОбъект.ТаблицаПодписания Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицыПодписания.СозданнаяЗадача) Тогда
			ЗадачаО = СтрокаТаблицыПодписания.СозданнаяЗадача.ПолучитьОбъект();
			ЗадачаО.ДатаВыполнения = ТекущаяДата();
			ЗадачаО.Сотрудник = ПараметрыСеанса.ТекущийПользователь;
			ЗадачаО.Состояние = Перечисления.но_СостояниеПодписи.Заблокирован;
			ЗадачаО.Примечание = "Регламент исчерпан";
			ЗадачаО.ПроводитьОбработкуВыполнения = Ложь;
			ЗадачаО.Выполнить();
		КонецЕсли;	
	КонецЦикла;
Конецпроцедуры

Процедура ДобавитьВИсториюСобытие(ТекстСобытия) Экспорт
	ЭтотОбъект.ИсторияСогласования = ЭтотОбъект.ИсторияСогласования + Строка(ТекущаяДата()) + Символы.Таб;
	ЭтотОбъект.ИсторияСогласования = ЭтотОбъект.ИсторияСогласования + Строка(ПараметрыСеанса.ТекущийПользователь) + Символы.Таб;
	ЭтотОбъект.ИсторияСогласования = ЭтотОбъект.ИсторияСогласования + ТекстСобытия;
	ЭтотОбъект.ИсторияСогласования = ЭтотОбъект.ИсторияСогласования + Символы.ПС;
КонецПроцедуры

Процедура ОкончаниеПодписанияПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	ЭтотОбъект.Прочитать();
КонецПроцедуры

Функция НайтиВТаблицеПодписанияСтадия()
	// ФизЛицо Заместителя
	ЗапросОтв = Новый Запрос("ВЫБРАТЬ
								   |	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо
								   |ИЗ
								   |	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(, ОтветственноеЛицо = &ОтветственноеЛицо) КАК ОтветственныеЛицаОрганизацийСрезПоследних");

	ЗапросОтв.УстановитьПараметр("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизаций.УполномоченныйПредставитель);
	Выборка = ЗапросОтв.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		лФизЛицо = Выборка.ФизическоеЛицо;
		НайденныеСтроки = ЭтотОбъект.ТаблицаПодписания.НайтиСтроки(Новый Структура("Стадия",лФизЛицо));
		 
		Если (НайденныеСтроки.Количество() > 0) Тогда 
			Возврат истина;
		КонецЕсли;	
	Иначе
		лФизЛицо = Неопределено;
	КонецЕсли;	
	
	// Пользователь Заместителя
	Если НЕ (лФизЛицо = Неопределено) Тогда     
		ЗапросОтв.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
						   |	Пользователи.Ссылка
						   |ИЗ
						   |	Справочник.Пользователи КАК Пользователи
						   |ГДЕ
						   |	Пользователи.ур_ФизЛицо = &ФизЛицо
						   |УПОРЯДОЧИТЬ ПО
						   |	Пользователи.ПометкаУдаления";					
							
		ЗапросОтв.УстановитьПараметр("ФизЛицо",лФизЛицо); 
		Выборка = ЗапросОтв.Выполнить().Выбрать();
		 
		Если Выборка.Следующий() Тогда
			лПользователь = Выборка.Ссылка;
			НайденныеСтроки = ЭтотОбъект.ТаблицаПодписания.НайтиСтроки(Новый Структура("Стадия",лПользователь));
			  
			Если (НайденныеСтроки.Количество() > 0) Тогда 
	 			Возврат истина;
			КонецЕсли;
		Иначе
		 	лПользователь = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	// РольДокументооборота Заместителя
	Если НЕ (лПользователь = Неопределено) Тогда					 
		ЗапросОтв.Текст = "ВЫБРАТЬ
			                      |	но_РолиДокументооборотаУчастникиСогласования.Ссылка КАК РольДокументооборота,
								  |	но_РолиДокументооборотаУчастникиСогласования.Дата1 КАК ПериодС,
								  |	но_РолиДокументооборотаУчастникиСогласования.Дата2 КАК ПериодПо
			                      |ИЗ
			                      |	Справочник.но_РолиДокументооборота.УчастникиСогласования КАК но_РолиДокументооборотаУчастникиСогласования
			                      |ГДЕ
			                      |	но_РолиДокументооборотаУчастникиСогласования.Пользователь = &Пользователь
			                      |	И но_РолиДокументооборотаУчастникиСогласования.Дата1 <= &ТекДата
			                      |	И (но_РолиДокументооборотаУчастникиСогласования.Дата2 >= &ТекДата
			                      |	ИЛИ но_РолиДокументооборотаУчастникиСогласования.Дата2 = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
			                      |
			                      |СГРУППИРОВАТЬ ПО
			                      |	но_РолиДокументооборотаУчастникиСогласования.Ссылка,
								  |	но_РолиДокументооборотаУчастникиСогласования.Дата1,
								  |	но_РолиДокументооборотаУчастникиСогласования.Дата2";
						  
		ЗапросОтв.УстановитьПараметр("Пользователь", лПользователь);
		ЗапросОтв.УстановитьПараметр("ТекДата", НачалоДня(ур_ОбщегоНазначенияСервер._ВернутьВремяНаСервере()));
		Выборка = ЗапросОтв.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
			Пока Выборка.Следующий() Цикл
				лРольДокументооборота = Выборка.РольДокументооборота;
				НайденныеСтроки = ЭтотОбъект.ТаблицаПодписания.НайтиСтроки(Новый Структура("Стадия", лРольДокументооборота));
				
				Если (НайденныеСтроки.Количество() > 0) Тогда 
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;	 
		Иначе
			 лРольДокументооборота = Неопределено;
		КонецЕсли;
	КонецЕсли; 
	
	Возврат ложь;
КонецФункции

Функция ВернутьТекстДопСообщения(_Объект) Экспорт 
	ЗнчВозврата = "";
	
	//Если ТипЗнч(_Объект) = Тип("ДокументСсылка.ЗаявкаНаКоммандировку")
	// ИЛИ ТипЗнч(_Объект) = Тип("ДокументСсылка.ЗаявкаНаПриемНаРаботу")
	// ИЛИ ТипЗнч(_Объект) = Тип("ДокументСсылка.ЗаявкаНаПеремещениеНаРаботу") Тогда
	//	Если НЕ _Объект.Пустая() Тогда
	//		ЗнчВозврата = _Объект.ПолучитьОбъект().ВернутьСообщениеПодписания();
	//	КонецЕсли;
	//КонецЕсли;
	
	Возврат ЗнчВозврата;
КонецФункции

Процедура УведомитьПоМылу(пПолучатель,Текст,Мыло = Истина,СМС = Ложь, _Подразделение = Неопределено, _Должность = Неопределено, _РольДокументооборота = Неопределено, _СотрудникАдресат = Неопределено, СтруктрураДопПараметров = Неопределено) Экспорт
	
	лПолучатели = СогласованиеДокументов.ПолучитьМассивПользов(пПолучатель);
	
	// ++ Литвиненко 28.08.2020 #15017  
	_ТипПисьмаХТМЛ = ?(СтруктрураДопПараметров=Неопределено, Ложь, СтруктрураДопПараметров._ТипПисьмаХТМЛ);
	// -- Литвиненко 28.08.2020 #15017
	
	Если ТипЗнч(пПолучатель) = Тип("СправочникСсылка.но_РолиДокументооборота")
		И ЗначениеЗаполнено(ПодписываемыйОбъект) 
		//p.lukashov(26.03.2019) --->
		И (пПолучатель = Справочники.но_РолиДокументооборота.Продюсер
			ИЛИ пПолучатель = Справочники.но_РолиДокументооборота.ГлавныйРежиссер
			ИЛИ пПолучатель = Справочники.но_РолиДокументооборота.ДиректорСтудии
			ИЛИ пПолучатель = Справочники.но_РолиДокументооборота.ИсполнительныйПродюсерСтудии) Тогда
		
		МетаданныеДокумента = ПодписываемыйОбъект.Метаданные();
		ЦФОДокумента = Неопределено;
		
		Если ур_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("ЦФО", МетаданныеДокумента) Тогда
			
			ЦФОДокумента = ПодписываемыйОбъект.ЦФО;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ЦФОДокумента)
			И ур_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("Проект", МетаданныеДокумента) Тогда
			
			ЦФОДокумента = ПодписываемыйОбъект.Проект.ЦФО;	
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЦФОДокумента) Тогда
			
			Если пПолучатель = Справочники.но_РолиДокументооборота.Продюсер Тогда
				МассивФизЛицРоли = но_Документооборот.ВернутьПродюсеров(ЦФОДокумента);	
			ИначеЕсли пПолучатель = Справочники.но_РолиДокументооборота.ДиректорСтудии Тогда	
				МассивФизЛицРоли = но_Документооборот.ВернутьДиректоровСтудии(ЦФОДокумента);
			ИначеЕсли пПолучатель = Справочники.но_РолиДокументооборота.ИсполнительныйПродюсерСтудии Тогда	
				МассивФизЛицРоли = но_Документооборот.ВернутьИсполнительныхПродюсеровСтудии(ЦФОДокумента);	
			Иначе
				МассивФизЛицРоли = но_Документооборот.ВернутьГлавныхРежиссеров(ЦФОДокумента);
			КонецЕсли;			
		//p.lukashov(26.03.2019) <---	
			
			ЗапросПользователь = Новый Запрос;
			
			ЗапросПользователь.Текст = 
			"ВЫБРАТЬ
			|	Пользователи.Ссылка
			|ИЗ
			|	Справочник.Пользователи КАК Пользователи
			|ГДЕ
			|	Пользователи.ур_ФизЛицо = &ФизЛицо
			|	И НЕ Пользователи.ПометкаУдаления";
			
			Для Каждого ТекущееФизЛицоРоли Из МассивФизЛицРоли Цикл
				
				ЗапросПользователь.УстановитьПараметр("ФизЛицо", ТекущееФизЛицоРоли);
				РезультатЗапросПользователь = ЗапросПользователь.Выполнить();
				ВыборкаПользователь = РезультатЗапросПользователь.Выбрать();
				
				Пока ВыборкаПользователь.Следующий() Цикл
					лПолучатели.Добавить(ВыборкаПользователь.Ссылка);	
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//p.lukashov(06.03.2019) --->
	Если ТипЗнч(пПолучатель) = Тип("СправочникСсылка.но_РолиДокументооборота")
		И ЗначениеЗаполнено(ПодписываемыйОбъект) 
		И пПолучатель = Справочники.но_РолиДокументооборота.ОтветственныйЗаЦФОЗаявкаНаАВМ Тогда
		
		МетаданныеДокумента = ПодписываемыйОбъект.Метаданные();		
		Если ур_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("ОтветственныйЗаЦФО", МетаданныеДокумента) Тогда
			
			ЗапросПользователь = Новый Запрос;
			
			ЗапросПользователь.Текст = 
			"ВЫБРАТЬ
			|	Пользователи.Ссылка
			|ИЗ
			|	Справочник.Пользователи КАК Пользователи
			|ГДЕ
			|	Пользователи.ур_ФизЛицо = &ФизЛицо
			|	И НЕ Пользователи.ПометкаУдаления";
			
			ЗапросПользователь.УстановитьПараметр("ФизЛицо", ПодписываемыйОбъект.ОтветственныйЗаЦФО);
			РезультатЗапросПользователь = ЗапросПользователь.Выполнить();
			ВыборкаПользователь = РезультатЗапросПользователь.Выбрать();
				
			Пока ВыборкаПользователь.Следующий() Цикл
				лПолучатели.Добавить(ВыборкаПользователь.Ссылка);	
			КонецЦикла;
			
		КонецЕсли;	
		
	КонецЕсли;
	//p.lukashov(06.03.2019) <---
	
	Если НЕ _Подразделение = Неопределено И НЕ _Должность = Неопределено Тогда 
		СписокСотрудников = СогласованиеДокументов.ВернутьСотрудниковПоПодразделениюИДолжности(_Подразделение, _Должность);
		
		Для Каждого _Сотрудник Из СписокСотрудников Цикл
			_лПолучателиСотрудники = СогласованиеДокументов.ПолучитьМассивПользов(_Сотрудник);
			
			Если (лПолучатели.Количество() = 0) Тогда
				лПолучатели = _лПолучателиСотрудники;
			Иначе
				Для Каждого _лПолучательСотрудник Из _лПолучателиСотрудники Цикл
					Если (лПолучатели.Найти(_лПолучательСотрудник) = Неопределено) Тогда 
						лПолучатели.Добавить(_лПолучательСотрудник);
					КонецЕсли;
				КонецЦикла;   
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ _РольДокументооборота = Неопределено Тогда 
		СписокСотрудников = СогласованиеДокументов.ПолучитьМассивПользов(_РольДокументооборота);
		
		Для Каждого _Сотрудник Из СписокСотрудников Цикл
			Если (лПолучатели.Найти(_Сотрудник) = Неопределено) Тогда 
				лПолучатели.Добавить(_Сотрудник);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ _СотрудникАдресат = Неопределено Тогда 
		СписокСотрудников = СогласованиеДокументов.ПолучитьМассивПользов(_СотрудникАдресат);
		
		Для Каждого _Сотрудник Из СписокСотрудников Цикл
			Если (лПолучатели.Найти(_Сотрудник) = Неопределено) Тогда 
				лПолучатели.Добавить(_Сотрудник);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если (лПолучатели.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого лПолучатель Из лПолучатели Цикл
		Если СМС Тогда
			Уведомлять = НЕ лПолучатель.ур_ФизЛицо.НеУведомлятьПоСМС;
			Уведомлять = ?(ТипЗнч(Уведомлять) = Тип("Булево"),Уведомлять,Истина);
			
			Если Уведомлять Тогда
				лТел = ЭлектроннаяПочта.но_ПолучитьНомерМобильногоТелефона(лПолучатель.ур_ФизЛицо);
				
				Если НЕ ПустаяСтрока(лТел) Тогда
					Попытка
						ур_ОбщегоНазначенияСервер.ПоставитьПисьмоВОчередьСервер(лТел, "1С:Подписание:База ресурсов", Текст, Истина);
					Исключение
						//
					КонецПопытки;
				КонецЕсли;                    
			КонецЕсли;
		КонецЕсли;
		
		Если Мыло Тогда 
			Уведомлять = НЕ лПолучатель.ур_ФизЛицо.НеУведомлятьПоПочте;
			Уведомлять = ?(ТипЗнч(Уведомлять) = Тип("Булево"),Уведомлять,Истина);
			
			Если Уведомлять Тогда
				лМыло = Строка(ЭлектроннаяПочта.но_АдресЭлектроннойПочты(лПолучатель));
				
				Если НЕ ПустаяСтрока(лМыло) Тогда
					Попытка
						//ур_ОбщегоНазначенияСервер.ПоставитьПисьмоВОчередьСервер(лМыло, "1С:Подписание:База ресурсов", Текст,, _ТипПисьмаХТМЛ);
						// ++ Литвиненко 01.09.2020 #15017  
						ТемаШаблон = "Подписание [%1] %2 %3 (%4)";
						Тема = СтрШаблон(ТемаШаблон, ЭлектроннаяПочта.ВернутьОрганизациюДляТемыПисьма(), ПодписываемыйОбъект.Метаданные().Синоним, ПодписываемыйОбъект.Номер, ИнициаторПодписания);
						ур_ОбщегоНазначенияСервер.ПоставитьПисьмоВОчередьСервер(лМыло, Тема, Текст,, _ТипПисьмаХТМЛ);
						// -- Литвиненко 01.09.2020 #15017
					Исключение
						//
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьПолучателяУЗадачи(ЗадачаОбъект,Получатель) Экспорт
	Если ТипЗнч(Получатель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ЗадачаОбъект.Сотрудник = Получатель;
	ИначеЕсли ТипЗнч(Получатель) = Тип("СправочникСсылка.ур_ПодразделенияОрганизации") Тогда
		ЗадачаОбъект.Подразделение = Получатель;
	ИначеЕсли ТипЗнч(Получатель) = Тип("СправочникСсылка.ур_ДолжностиОрганизации") Тогда
		ЗадачаОбъект.Должность = Получатель;
	ИначеЕсли ТипЗнч(Получатель) = Тип("СправочникСсылка.но_РолиДокументооборота") Тогда
		ЗадачаОбъект.РольДокументооборота = Получатель;
	ИначеЕсли ТипЗнч(Получатель) = Тип("СправочникСсылка.Пользователи") Тогда
		ЗадачаОбъект.Пользователь = Получатель;
	КонецЕсли;	
КонецПроцедуры

Процедура НачатьСогласованиеМодуль(ТекФорма = Неопределено) экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.МаршрутПодписания) Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	#Если НЕ Сервер И НЕ ВнешнееСоединение Тогда
		Если НЕ (но_ДокументооборотКлиент.СписокДокументыПередИнициализацией().НайтиПоЗначению(ПодписываемыйОбъект.Метаданные().Имя) = Неопределено) Тогда
			Если НЕ (ТекФорма = Неопределено) Тогда
				
			КонецЕсли;
		КонецЕсли;
		
		Если (НЕ ЭтотОбъект.Стартован И ЭтотОбъект.Завершен) 
			ИЛИ (ЭтотОбъект.Стартован И ЭтотОбъект.Завершен) 
			ИЛИ (НЕ ЭтотОбъект.Стартован И НЕ ЭтотОбъект.Завершен И ЭтотОбъект.Состояние = Перечисления.но_СостояниеПодписи.Отозван) Тогда
			
			//Если (ЭтотОбъект.ИнициаторПодписания = ПараметрыСеанса.ТекущийПользователь) Тогда 
				Если НЕ (ЭтотОбъект.ТаблицаПодписания.Найти(Перечисления.но_СостояниеПодписи.Подписан, "СостояниеПодписи") = Неопределено) Тогда
					Сообщить("Нельзя повторно инициировать документ, который уже кем-либо подписан.");
					Возврат;
				КонецЕсли;
				
				Если (Вопрос("Вы уверенны, что хотите повторно инициировать подписание?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет) Тогда
					Возврат;
				КонецЕсли;
				
				_Маршрут = МаршрутПодписания;
				
				ЗавершитьВсеОткрытыеЗадачи();
				ЭтотОбъект.Прочитать();
				
				МаршрутПодписания = _Маршрут;
				
				ЗаполнитьМаршрутНовый(ЭтотОбъект.МаршрутПодписания,ЭтотОбъект.ПодписываемыйОбъект);
				ЭтотОбъект.Записать();
				ЭтотОбъект.Прочитать();

				Если НЕ (ТекФорма = Неопределено) Тогда
					ТекФорма.Обновить();
				КонецЕсли;
			//Иначе
			//	Сообщить("Повторно инициировать подписание может только начавший его пользователь!");
			//	ОтменитьТранзакцию();
			//	Возврат;
			//КонецЕсли;
		КонецЕсли;
	#КонецЕсли
	
	Попытка
		ЭтотОбъект.ТекущийПриориет = ВернутьСледующийПриоритет(1000);
		ПерейтиКСледующемуПриоритету(ЭтотОбъект.ТекущийПриориет);
		ЭтотОбъект.Состояние = Перечисления.но_СостояниеПодписи.НаПодписании;
		ЭтотОбъект.ИнициаторПодписания = ПараметрыСеанса.ТекущийПользователь;
		
		ДобавитьВИсториюСобытие("Инициация");
		
		Если (НЕ ЭтотОбъект.Стартован) ИЛИ (ЭтотОбъект.Стартован И ЭтотОбъект.Завершен) Тогда
			_ТекБП = СогласованиеДокументов.ПолучитьТекущийБизнесПроцессДляОбъекта(ПодписываемыйОбъект);
			
			Если НЕ _ТекБП.Пустая() И НЕ (_ТекБП = ЭтотОбъект.Ссылка) Тогда
				#Если Клиент Тогда
					Предупреждение("Подписание уже инициировано");
				#КонецЕсли
				Модифицированность = Ложь;
				ОтменитьТранзакцию();
				
				#Если Клиент Тогда
				Если НЕ (ТекФорма = Неопределено) Тогда
					ТекФорма.Закрыть();
				КонецЕсли;
				#КонецЕсли
				
				Возврат;
			КонецЕсли;
			ДопСообщение = ВернутьТекстДопСообщения(ПодписываемыйОбъект);
			
			ЭтотОбъект.Стартован = Ложь;
			ЭтотОбъект.Завершен = Ложь;
			ЭтотОбъект.Записать();
			ЭтотОбъект.Старт();
		Иначе
			Сообщить("Подписание уже инициировано");
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		ЭтотОбъект.Прочитать();
		
		#Если Клиент Тогда
		Если НЕ (ТекФорма = Неопределено) Тогда
			ТекФорма.Обновить();
		КонецЕсли;
		#КонецЕсли
	Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();
	КонецПопытки;
КонецПроцедуры

Процедура ЗавершитьВсеОткрытыеЗадачи()
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПодписаниеТаблицаПодписания.СозданнаяЗадача
	               |ИЗ
	               |	БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
	               |ГДЕ
	               |	ПодписаниеТаблицаПодписания.Ссылка = &Ссылка
	               |	И ПодписаниеТаблицаПодписания.СозданнаяЗадача.Выполнена = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Приоритет УБЫВ";
						  
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(Выборка.СозданнаяЗадача) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗадачаОбъект = Выборка.СозданнаяЗадача.ПолучитьОбъект();
		ЗадачаОбъект.Примечание = "Завершено при повторной инициации.";
		ЗадачаОбъект.ПроводитьОбработкуВыполнения = Ложь;
		ЗадачаОбъект.Выполнена = Истина;
		ЗадачаОбъект.Записать();
	КонецЦикла;
КонецПроцедуры

Функция ПолучателиПочты(пПолучатель, ПодписываемыйОбъект, ЦФО_Документа, _СотрудникАдресат = Неопределено, _РольДокументооборота = Неопределено, _Должность = Неопределено, _Подразделение = Неопределено) Экспорт
	
	лПолучатели = СогласованиеДокументов.ПолучитьМассивПользов(пПолучатель);
	
	Если НЕ _Подразделение = Неопределено И НЕ _Должность = Неопределено Тогда 
		СписокСотрудников = СогласованиеДокументов.ВернутьСотрудниковПоПодразделениюИДолжности(_Подразделение, _Должность);
		
		Для Каждого _Сотрудник Из СписокСотрудников Цикл
			_лПолучателиСотрудники = СобытияПодписок.ПолучитьМассивПользов(_Сотрудник);
			
			Если (лПолучатели.Количество() = 0) Тогда
				лПолучатели = _лПолучателиСотрудники;
			Иначе
				Для Каждого _лПолучательСотрудник Из _лПолучателиСотрудники Цикл
					Если (лПолучатели.Найти(_лПолучательСотрудник) = Неопределено) Тогда 
						лПолучатели.Добавить(_лПолучательСотрудник);
					КонецЕсли;
				КонецЦикла;   
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ _РольДокументооборота = Неопределено Тогда 
		СписокСотрудников = СогласованиеДокументов.ПолучитьМассивПользов(_РольДокументооборота);
		
		Для Каждого _Сотрудник Из СписокСотрудников Цикл
			Если (лПолучатели.Найти(_Сотрудник) = Неопределено) Тогда 
				лПолучатели.Добавить(_Сотрудник);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ _СотрудникАдресат = Неопределено Тогда 
		СписокСотрудников = СогласованиеДокументов.ПолучитьМассивПользов(_СотрудникАдресат);
		
		Для Каждого _Сотрудник Из СписокСотрудников Цикл
			Если (лПолучатели.Найти(_Сотрудник) = Неопределено) Тогда 
				лПолучатели.Добавить(_Сотрудник);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	возврат лПолучатели;
КонецФункции

Процедура РазослатьПисьмаПоОбъекту(НайденнаяСтрока, Задача, лстрАвтора)
	
	ДопПараметры = ЭлектроннаяПочта.СформироватьСтруктуруДопПараметровОтправкиПисемИзОчереди();
	
	ТекстСМС = "Поступил " + ?(Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ПодписываемыйОбъект)), "документ", "элемент") + Строка(ПодписываемыйОбъект) + " на подписание " + лстрАвтора;
	
	//Если ЗначениеЗаполнено(МаршрутПодписания.ШаблонРассылки) Тогда
	//	ТекстПисьма = ЗаполнитьТекстПисьмаПоШаблону(НайденнаяСтрока);
	//	
	//	ДопПараметры._ТипПисьмаХТМЛ = Истина;
	//Иначе
		ТекстПисьма = Справочники.ИдентификаторыОбъектовМетаданных.ПолучитьФормуПодписанияДляОбъекта(ПодписываемыйОбъект.Ссылка, Новый Структура("БП, IDПодписание, СостояниеПодписи", Ссылка, Строка(НайденнаяСтрока.СозданнаяЗадача.УникальныйИдентификатор()), НайденнаяСтрока.СостояниеПодписи));
		ДопПараметры._ТипПисьмаХТМЛ = Истина;
		//ТекстПисьма = "Поступил " + ?(Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ПодписываемыйОбъект)), "документ", "элемент") + Строка(ПодписываемыйОбъект) + " на подписание " + лстрАвтора;
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(МаршрутПодписания.ВнешнийИсточник) Тогда
		ДопПараметры._ВнешнийИсточник = МаршрутПодписания.ВнешнийИсточник;
	КонецЕсли;	
	
	МассивВложений = Новый Массив;
	_МассивФайлов = Новый Массив();
	
	ДопПараметры.ЦФО_Документа = НайденнаяСтрока.ЦФО_Документа;
	
	Если МассивВложений.Количество() тогда
		ДопПараметры._Вложение = МассивВложений;
	 КонецЕсли;
	
	Если НайденнаяСтрока.Email Тогда 
		УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстПисьма, Истина, Ложь, , , , , ДопПараметры);
	КонецЕсли;
	
	Если НайденнаяСтрока.SMS Тогда
		УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС, Ложь, Истина, , , , , ДопПараметры);
	КонецЕсли;
	
	Если (Строка(НайденнаяСтрока.Подразделение) <> "") И (Строка(НайденнаяСтрока.Должность) <> "") Тогда
		Для Каждого СтрАдресаты Из Задача.Адресаты Цикл 					
			Если НайденнаяСтрока.Email Тогда
				УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстПисьма, Истина, Ложь, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);					
			КонецЕсли;
			
			Если НайденнаяСтрока.SMS Тогда
				УведомитьПоМылу(НайденнаяСтрока.Стадия, ТекстСМС, Ложь, Истина, СтрАдресаты.Подразделение, СтрАдресаты.Должность, СтрАдресаты.РольДокументооборота, СтрАдресаты.Сотрудник, ДопПараметры);					
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Стр Из _МассивФайлов Цикл
		Попытка
			УдалитьФайлы(Стр);
		Исключение
			//
		КонецПопытки;
	КонецЦикла;
		
КонецПроцедуры	

Процедура ПодписаниеРазослатьПисьмаИзОбъекта(СтрокаМаршрута = Неопределено, Задача = Неопределено)
	ДопПараметры = ЭлектроннаяПочта.СформироватьСтруктуруДопПараметровОтправкиПисемИзОчереди();
	Если ЗначениеЗаполнено(ПодписываемыйОбъект) Тогда
		МенеджерОбъекта = Неопределено;
		Если Метаданные.Документы.Содержит(ПодписываемыйОбъект.Метаданные()) Тогда
			МенеджерОбъекта = Документы;
		ИначеЕсли Метаданные.Справочники.Содержит(ПодписываемыйОбъект.Метаданные()) Тогда
			МенеджерОбъекта = Справочники;
		КонецЕсли;
		Если МенеджерОбъекта <> Неопределено Тогда
			Попытка
				СтруктураПараметры = Новый Структура();
				СтруктураПараметры.Вставить("БизнесПроцессОбъект", ЭтотОбъект);
				СтруктураПараметры.Вставить("СсылкаПодписываемыйОбъект", ПодписываемыйОбъект);
				СтруктураПараметры.Вставить("СсылкаЗадача", Задача);
				СтруктураПараметры.Вставить("СтрокаМаршрута", СтрокаМаршрута);
				СтруктураПараметры.Вставить("ДопПараметры", ДопПараметры);
				МенеджерОбъекта[ПодписываемыйОбъект.Метаданные().Имя].ПодписаниеРазослатьПисьмаПоОбъекту(СтруктураПараметры);
			Исключение
				
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ЗаполнитьТекстПисьмаПоШаблону(НайденнаяСтрока)
	
	ПараметрыДляПисьма = Новый Структура;
	
	Для Каждого Реквизит Из ПодписываемыйОбъект.Метаданные().Реквизиты Цикл
		ЗначениеРеквизита = ПодписываемыйОбъект[Реквизит.Имя];
		
		ПараметрыДляПисьма.Вставить(Реквизит.Имя, ?(Реквизит.Имя = "ЦФО" ИЛИ Реквизит.Имя = "ЦФО_Старый", Строка(ЗначениеРеквизита) + ". Шифр: " + ЗначениеРеквизита.Шифр, Формат(ЗначениеРеквизита, "ДФ=dd.MM.yyyy")));			
	КонецЦикла;
	
	ПараметрыДляПисьма.Вставить("Номер", ПодписываемыйОбъект.Номер);
	ПараметрыДляПисьма.Вставить("Дата", ПодписываемыйОбъект.Дата);
	ПараметрыДляПисьма.Вставить("КомментарийПодстановка", ?(ЗначениеЗаполнено(ПодписываемыйОбъект.Комментарий), "<b>Комментарий:</b> " + ПодписываемыйОбъект.Комментарий + "<br>", ""));
		
	// Таблицы в HTML формируем вручную
	Если ТипЗнч(ПодписываемыйОбъект) = Тип("ДокументСсылка.ЗаявкаНаПриемНаРаботу") Тогда

		Условия = "<b>Во время испытательного срока:</b>
					|<table border=""1"">
					|<tr>
					|<td><b>Наименование условия</b></td>
					|<td><b>Всего (на руки)</b></td>
					|<td><b>По форме1</b></td>
					|<td><b>По форме2</b></td>
					|</tr>";

		Для Каждого Стр Из ПодписываемыйОбъект.Условия Цикл
			Условия = Условия + "<tr>
							     |<td>" + Стр.НаименованиеУсловия + "</td>
								 |<td align=""right"">" + Стр.Всего + "</td>
								 |<td align=""right"">" + Стр.ПоФорме1 + "</td>
								 |<td align=""right"">" + Стр.ПоФорме2 + "</td>
								 |</tr>"	
		КонецЦикла;
		
		Условия = Условия + "</table>
							 |<br>";
							 
		ПараметрыДляПисьма.Вставить("Условия", Условия);							 
							 
		ПослеИспытательногоСрока = "<b>После испытательного срока:</b>
									|<table border=""1"">
									|<tr>
									|<td><b>Наименование условия после</b></td>
									|<td><b>Всего после (на руки)</b></td>
									|<td><b>По форме1 после</b></td>
									|<td><b>По форме2 после</b></td>
									|</tr>";

		Для Каждого Стр Из ПодписываемыйОбъект.ПослеИспытательногоСрока Цикл
			ПослеИспытательногоСрока = ПослеИспытательногоСрока + "<tr>
																   |<td>" + Стр.НаименованиеУсловияПосле + "</td>
																   |<td align=""right"">" + Стр.ВсегоПосле + "</td>
																   |<td align=""right"">" + Стр.ПоФорме1После + "</td>
																   |<td align=""right"">" + Стр.ПоФорме2После + "</td>
																   |</tr>"	
		КонецЦикла;
		
		ПослеИспытательногоСрока = ПослеИспытательногоСрока + "</table>
							 								   |<br>";
																			 
		ПараметрыДляПисьма.Вставить("ПослеИспытательногоСрока", ПослеИспытательногоСрока);							 
		
	ИначеЕсли ТипЗнч(ПодписываемыйОбъект) = Тип("ДокументСсылка.ЗаявкаНаПеремещениеНаРаботу") Тогда	
		
		 ТекущиеУсловия = "<b>Текущие условия:</b>
							|<table border=""1"">
							|<tr>
							|<td><b>Наименование условия</b></td>
							|<td><b>Всего (на руки)</b></td>
							|<td><b>По форме1</b></td>
							|<td><b>По форме2</b></td>
							|</tr>";

		Для Каждого Стр Из ПодписываемыйОбъект.Условия Цикл
			ТекущиеУсловия = ТекущиеУсловия + "<tr>
											     |<td>" + Стр.НаименованиеУсловия + "</td>
												 |<td align=""right"">" + Стр.Всего + "</td>
												 |<td align=""right"">" + Стр.ПоФорме1 + "</td>
												 |<td align=""right"">" + Стр.ПоФорме2 + "</td>
												 |</tr>"	
		КонецЦикла;
		
		ТекущиеУсловия = ТекущиеУсловия + "</table>
							 				|<br>";
							 
		ПараметрыДляПисьма.Вставить("ТекущиеУсловия", ТекущиеУсловия);							 
							 
		НовыеУсловия = "<b>Новые условия:</b>
						|<table border=""1"">
						|<tr>
						|<td><b>Наименование условия после</b></td>
						|<td><b>Всего (на руки)</b></td>
						|<td><b>По форме1 после</b></td>
						|<td><b>По форме2 после</b></td>
						|</tr>";

		Для Каждого Стр Из ПодписываемыйОбъект.Условия Цикл
			НовыеУсловия = НовыеУсловия + "<tr>
										   |<td>" + Стр.НаименованиеУсловия + "</td>
										   |<td align=""right"">" + Стр.ВсегоНовая + "</td>
										   |<td align=""right"">" + Стр.ПоФорме1Новая + "</td>
										   |<td align=""right"">" + Стр.ПоФорме2Новая + "</td>
										   |</tr>"	
		КонецЦикла;
		
		НовыеУсловия = НовыеУсловия + "</table>
							 		   |<br>";
																			 
		ПараметрыДляПисьма.Вставить("НовыеУсловия", НовыеУсловия);
		
		Если ПодписываемыйОбъект.ВидПеремещения = Перечисления.ВидыПеремещения.ИзменениеОкладаБезПеремещения Тогда
			ЦФОСтрока = ?(ПодписываемыйОбъект.ЦФО_Старый <> ПодписываемыйОбъект.ЦФО, "<td><b>ЦФО:</b>" + ПодписываемыйОбъект.ЦФО + ". Шифр: " + ПодписываемыйОбъект.ЦФО.Шифр + "</td>", "");
			ПараметрыДляПисьма.Вставить("ЦФОСтрока", ЦФОСтрока);
		КонецЕсли;
		
		Если ПодписываемыйОбъект.ВидПеремещения = Перечисления.ВидыПеремещения.ИзменениеЦФОСписком ИЛИ ПодписываемыйОбъект.ВидПеремещения = Перечисления.ВидыПеремещения.ИзменениеСинтДолжностиСписком 
			ИЛИ ПодписываемыйОбъект.ВидПеремещения = Перечисления.ВидыПеремещения.ИзменениеКоличестваРабочихЧасовСписком
			ИЛИ ПодписываемыйОбъект.ВидПеремещения = Перечисления.ВидыПеремещения.ИзменениеПодразделенияСписком
			Тогда
			СписокСотрудников = "<b>Список сотрудников:</b>
								|<table border=""1"">
								|<tr>
								|<td><b>Сотрудник</b></td>
								|<td><b>Должность</b></td>
								|<td><b>Подразделение организации</b></td>
								|</tr>";
								
			Для Каждого Стр Из ПодписываемыйОбъект.СотрудникиОрганизации Цикл
				СписокСотрудников = СписокСотрудников + "<tr>
													   |<td>" + Стр.Сотрудник + "</td>
													   |<td>" + Стр.Должность + "</td>
													   |<td>" + Стр.ПодразделениеОрганизации + "</td>
													   |</tr>";	
			КонецЦикла;
		
			СписокСотрудников = СписокСотрудников + "</table>
							 		   				|<br>";
													
			ПараметрыДляПисьма.Вставить("СписокСотрудников", СписокСотрудников);													
		КонецЕсли;	
	КонецЕсли;
		
	ШаблонРассылки = РаботаСоСтроками.ПолучитьШаблон(МаршрутПодписания.ШаблонРассылки, ?(ТипЗнч(ПодписываемыйОбъект) = Тип("ДокументСсылка.ЗаявкаНаПеремещениеНаРаботу"), ПодписываемыйОбъект.ВидПеремещения, Неопределено));
	
	// Строка подписания с авторизацией ОС на kpi.stb.ua
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("wsaddress", "http://kpi.stb.ua/ReqControl_STB/ReqControl_STB.1cws?wsdl");
	СтруктураПараметров.Вставить("procname", "SigningDoc");
	СтруктураПараметров.Вставить("task", Строка(НайденнаяСтрока.СозданнаяЗадача.УникальныйИдентификатор()));
	
	СтрокаПодписать = РаботаСоСтроками.ПолучитьСтрокуЗапросаHTTP(Справочники.но_СлужебныеЗначения.СкриптВебСервисов.Значение, СтруктураПараметров);
	
	ПараметрыДляПисьма.Вставить("СтрокаПодписать", "<a href=""" + СтрокаПодписать + """> Подписать документ </a>");
	
	// Строка подписания без авторизации ОС на public.stb.ua
	СтруктураПараметров.Вставить("wsaddress", "https://public.stb.ua/ReqControl_STB/ReqControl_STB.1cws?wsdl");
	
	СтрокаПодписать = РаботаСоСтроками.ПолучитьСтрокуЗапросаHTTP(Справочники.но_СлужебныеЗначения.СкриптВебСервисовПаблик.Значение, СтруктураПараметров);
	
	ПараметрыДляПисьма.Вставить("СтрокаПодписатьПаблик", "<a href=""" + СтрокаПодписать + """> Подписать документ (с телефона)</a>");
	
	Возврат РаботаСоСтроками.СтрШаблонСтруктура(ШаблонРассылки, ПараметрыДляПисьма);	
	
КонецФункции	

Функция ПолучитьТЗДолжностейДляРассылки()
	Попытка
		ТЗ = ЗначениеИзСтрокиВнутр(Справочники.но_СлужебныеЗначения.СписокДолжностейДляРассылкиПоОбходному.ЗначениеСтрокаНеограничена);
	Исключение
		ТЗ = Новый ТаблицаЗначений();
		ТЗ.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.ДолжностиОрганизаций"));
	КонецПопытки;
	
	
	Возврат ТЗ;
КонецФункции

#КонецОбласти

ТекущаяДата = ТекущаяДата();

#КонецЕсли
