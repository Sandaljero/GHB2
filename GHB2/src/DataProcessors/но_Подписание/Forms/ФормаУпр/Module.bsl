
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	_ТекПользователь = ПолучитьТекПользователя();
	_ФизЛицо = _ТекПользователь.ур_ФизЛицо;
	_ТехническийДиректор = Ложь;
	
	ЗаполнитьДанныеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ЗаполнитьДанные", 1200);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыполненаЗадача" Тогда
	
		ЗаполнитьДанные();
	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ОзнакомитьсяСДокументами(Команда)
	_СпДок = ВернутьСписокНаОзнакомлении();
	
	Если _СпДок.Количество() = 0 Тогда
		Сообщить("У вас нет документов на ознакомлении.");
	Иначе
		_Параметры = Новый Структура("_Список", _СпДок);
		
		ФрмВыбораТиповДокументов = ПолучитьФорму("ВнешняяОбработка.но_Подписание.Форма.ФормаВыбораТиповДокументовУпр", _Параметры, ЭтаФорма);
		Ответ = ФрмВыбораТиповДокументов.ОткрытьМодально();
		
		Если ТипЗнч(Ответ) = Тип("СписокЗначений") Тогда
			Если Ответ.Количество() = 0 Тогда
				Возврат;
			КонецЕсли;
			
			Если Вопрос("Ознакомиться с документами?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Нет Тогда 
				Возврат;
			КонецЕсли;
			
			ОзнакомитьсяНаСервере(Ответ);
			Обновить(Неопределено);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВсеПриИзменении(Элемент)
	ЗаполнитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура _ЗадачиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтрокаЗадачи = Объект._Задачи.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если (СтрокаЗадачи.ВидСообщения = ПредопределенноеЗначение("Перечисление.ВидыСообщений.ВыполнениеЗадачи"))
		ИЛИ (СтрокаЗадачи.ВидСообщения = ПредопределенноеЗначение("Перечисление.ВидыСообщений.Поручение")) Тогда
		
		ОткрытьЗначение(СтрокаЗадачи.Документ);
		
	Иначе
		
		Если ЗначениеЗаполнено(СтрокаЗадачи.Документ) Тогда
			
			ТекущееСостояние = СостояниеЗадачи(СтрокаЗадачи.Задача);
			ОткрытьЗначение(СтрокаЗадачи.Документ);
			
			Если ((СтрокаЗадачи.ВидСообщения = ПредопределенноеЗначение("Перечисление.ВидыСообщений.Сообщение"))
				ИЛИ (СтрокаЗадачи.ВидСообщения = ПредопределенноеЗначение("Перечисление.ВидыСообщений.УведомлениеОСбое")))
				И (ТекущееСостояние <> ПредопределенноеЗначение("Перечисление.но_СостояниеПодписи.НаОзнакомлении")) Тогда
				
				ВыполнитьТекущуюЗадачу(СтрокаЗадачи.Задача, "Сообщение просмотрено!");
								
			КонецЕсли;
			
		Иначе
			
			Если СтрокаЗадачи.ВидСообщения = ПредопределенноеЗначение("Перечисление.ВидыСообщений.Сообщение") Тогда
				ВыполнитьТекущуюЗадачу(СтрокаЗадачи.Задача, "Отсутствует документ для просмотра!");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервереБезКонтекста
Функция СостояниеПодписиНаОзнакомлении()
	
	Возврат Перечисления.но_СостояниеПодписи.НаОзнакомлении;
	
КонецФункции

&НаСервереБезКонтекста
Функция СостояниеЗадачи(_Задача)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(_Задача, "Состояние");
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекПользователя()
	
	Возврат ПараметрыСеанса.ТекущийПользователь;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОзнакомитьсяНаСервере(_СпДок)

	_ТекПользователь = ПолучитьТекПользователя();
	
	Рез = ВернутьРезультатНаОзнакомлении();
	
	Для Каждого Стр Из Рез Цикл
		Если _СпДок.НайтиПоЗначению(ТипЗнч(Стр.Док)) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		БП = Стр.Ссылка.ПолучитьОбъект();
		НС = БП.ТаблицаПодписания.Найти(Стр.НомерСтроки, "НомерСтроки");
		
		Если НЕ (НС = Неопределено) Тогда
			НС.СостояниеПодписи = Перечисления.но_СостояниеПодписи.Ознакомлен;
			НС.ДатаПодписания = НачалоДня(ТекущаяДатаСеанса());
			НС.Сотрудник = _ТекПользователь;
		КонецЕсли;
		
		Если НЕ Стр.СозданнаяЗадача.Пустая() Тогда
			Задача = Стр.СозданнаяЗадача.ПолучитьОбъект();
			
			Если Задача.ПроверитьВыполнение() Тогда
				Задача.ВыполнитьЗадачу();
			КонецЕсли;
		КонецЕсли;
		
		БП.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСписокНаОзнакомлении()
	_СП = Новый СписокЗначений();
	
	Рез = ВернутьРезультатНаОзнакомлении();
	
	Если НЕ (Рез.Количество() = 0) Тогда
		Для Каждого _С Из Рез Цикл
			_ТипДок = ТипЗнч(_С.Док);
			
			Если (_СП.НайтиПоЗначению(_ТипДок) = Неопределено) Тогда
				_СП.Добавить(_ТипДок, _С.Док.Метаданные().Синоним, Истина);
			КонецЕсли;
		КонецЦикла;
		
		_СП.СортироватьПоПредставлению();	
	КонецЕсли;
	
	Возврат _СП;
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьРезультатНаОзнакомлении()
	
	_ТекПользователь = ПолучитьТекПользователя();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
				   |	ПодписаниеТаблицаПодписания.Ссылка,
				   |	ПодписаниеТаблицаПодписания.Стадия,
				   |	ПодписаниеТаблицаПодписания.СостояниеПодписи,
				   |	ПодписаниеТаблицаПодписания.ДатаПодписания,
				   |	ПодписаниеТаблицаПодписания.Сотрудник,
				   |	ПодписаниеТаблицаПодписания.СозданнаяЗадача,
				   |	ПодписаниеТаблицаПодписания.НомерСтроки,
				   |	ПодписаниеТаблицаПодписания.Ссылка.ПодписываемыйОбъект КАК Док
				   |ИЗ
				   |	БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
				   |ГДЕ
				   |	НЕ ПодписаниеТаблицаПодписания.Ссылка.ПометкаУдаления
				   |	И ПодписаниеТаблицаПодписания.Стадия В (&Стадия)
				   |	И ПодписаниеТаблицаПодписания.ДатаПодписания = &ДатаПодписания
				   |	И ПодписаниеТаблицаПодписания.СостояниеПодписи = &СостояниеПодписи";
				   
	_СС = Новый СписокЗначений();
	_СС.Добавить(_ТекПользователь);
	_СС.Добавить(_ТекПользователь.ур_ФизЛицо);
		
	_ТмпСписокСтадий = гхб_СогласованиеДокументов.ВернутьПолныйСписокРолей(_ТекПользователь, Истина);
	
	Для Каждого _Значение Из _ТмпСписокСтадий Цикл
		Если (_СС.НайтиПоЗначению(_Значение.Значение) = Неопределено) Тогда
			_СС.Добавить(_Значение.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Стадия", _СС);
	Запрос.УстановитьПараметр("ДатаПодписания", Дата(1,1,1));
	Запрос.УстановитьПараметр("СостояниеПодписи", Перечисления.но_СостояниеПодписи.НаОзнакомлении);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеНаСервере()
	
	_СписокПользователейПодписания = Новый СписокЗначений();
	_СписокПользователейПодписания.Добавить(_ТекПользователь);
	
	_СписокФЛПодписания = Новый СписокЗначений();
	_СписокФЛПодписания.Добавить(_ФизЛицо);
	
	Если (Все = 0) Тогда 
		//только невыполнены
		УслЗадачи = "
		|			И НЕ СогласованиеДокумента.Выполнена ";
		УслЗадачиБП = "
		|			И НЕ СогласованиеДокумента.Ссылка.Выполнена ";
	ИначеЕсли (Все = 1) Тогда 
		//только выполнены
		УслЗадачи = "
		|			И СогласованиеДокумента.Выполнена ";
		УслЗадачиБП = "
		|			И СогласованиеДокумента.Ссылка.Выполнена ";
	Иначе
		УслЗадачи = "";
		УслЗадачиБП = "";
	КонецЕсли;

	_СписокСтадий = Новый СписокЗначений();
	
	Для Каждого _П Из _СписокПользователейПодписания Цикл
		_ТмпСписокСтадий = гхб_СогласованиеДокументов.ВернутьПолныйСписокРолей(_П.Значение, Истина);
		
		Для Каждого _Значение Из _ТмпСписокСтадий Цикл
			Если (_СписокСтадий.НайтиПоЗначению(_Значение.Значение) = Неопределено) Тогда
				_СписокСтадий.Добавить(_Значение.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ЗапросПД = Новый Запрос();
	ЗапросПД.Текст = "ВЫБРАТЬ
	                 |	СогласованиеДокумента.Ссылка
	                 |ИЗ
	                 |	Задача.СогласованиеДокумента.Адресаты КАК СогласованиеДокумента
	                 |ГДЕ
	                 |	СогласованиеДокумента.Подразделение <> &ПустойПодразделение " + УслЗадачиБП + "
	                 |	И СогласованиеДокумента.Подразделение В(&Подразделение)
	                 |	И СогласованиеДокумента.Должность В(&Должность)
					 |						ИЛИ (СогласованиеДокумента.Сотрудник <> &СотрудникПустое
                     |							И СогласованиеДокумента.Сотрудник В (&Сотрудник))
                     |						ИЛИ СогласованиеДокумента.РольДокументооборота В (&СписокСтадий)";
					 
	ЗапросПД.УстановитьПараметр("ПустойПодразделение", Справочники.гхб_ПодразделенияОрганизацийБазХолдинга.ПустаяСсылка());
	ПодразделениеИДолжностьРаботника = гхб_СогласованиеДокументов.ВернутьПодразделениеИДолжность(_ТекПользователь);
	ЗапросПД.УстановитьПараметр("Подразделение",ПодразделениеИДолжностьРаботника.Подразделение);
	ЗапросПД.УстановитьПараметр("Должность", ПодразделениеИДолжностьРаботника.Должность);	
	ЗапросПД.УстановитьПараметр("СотрудникПустое", Справочники.гхб_ФизическиеЛица.ПустаяСсылка());
	ЗапросПД.УстановитьПараметр("Сотрудник", _СписокФЛПодписания);
	ЗапросПД.УстановитьПараметр("СписокСтадий", _СписокСтадий);
	ТаблПД = ЗапросПД.Выполнить().Выгрузить();

	_СписокСсылокПД = ТаблПД.ВыгрузитьКолонку("Ссылка");
	
	ЗапросЗадачи = Новый Запрос();
    ТекстЗапрос = "ВЫБРАТЬ
	              |	ВложенныйЗапрос.Ссылка КАК Задача,
	              |	ВложенныйЗапрос.ВидСообщения,
	              |	ВложенныйЗапрос.Наименование КАК Документ,
	              |	ВложенныйЗапрос.ДатаИнициации КАК ДатаИнициации,
	              |	ВложенныйЗапрос.Инициатор КАК Инициатор,
	              |	ВложенныйЗапрос.Исполнитель КАК Исполнитель,
	              |	ВложенныйЗапрос.КомментарийИсполнителя,
	              |	ВложенныйЗапрос.ДатаФактическогоВыполнения,
	              |	ВложенныйЗапрос.Выполнена КАК Выполнена,
	              |	ВложенныйЗапрос.ТипДокумента
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ВложенныйЗапрос.Ссылка КАК Ссылка,
	              |		ВложенныйЗапрос.ВидСообщения КАК ВидСообщения,
	              |		ВложенныйЗапрос.Наименование КАК Наименование,
	              |		ВЫБОР
	              |			КОГДА &ОтображатьВДатеВыполнениеФактВыполнение
	              |				ТОГДА ВЫБОР
	              |						КОГДА ВложенныйЗапрос.ДатаИнициации = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	              |							ТОГДА &ДатаИспользуемаяПоУмолчанию
	              |						ИНАЧЕ ВложенныйЗапрос.ДатаИнициации
	              |					КОНЕЦ
	              |			ИНАЧЕ ВложенныйЗапрос.ДатаИнициации
	              |		КОНЕЦ КАК ДатаИнициации,
	              |		ВложенныйЗапрос.Инициатор КАК Инициатор,
	              |		ВложенныйЗапрос.Исполнитель КАК Исполнитель,
	              |		ВЫРАЗИТЬ(ВложенныйЗапрос.КомментарииИсполнителя КАК СТРОКА(100)) КАК КомментарийИсполнителя,
	              |		ВЫБОР
	              |			КОГДА &ОтображатьВДатеВыполнениеФактВыполнение
	              |				ТОГДА ВЫБОР
	              |						КОГДА ВЫБОР
	              |								КОГДА &ОтображатьВДатеВыполнениеФактВыполнение
	              |									ТОГДА ВЫБОР
	              |											КОГДА ВложенныйЗапрос.ДатаФактическогоВыполнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	              |												ТОГДА ВложенныйЗапрос.ДатаФактическогоВыполнения
	              |											ИНАЧЕ ВложенныйЗапрос.ДатаВыполнения
	              |										КОНЕЦ
	              |								ИНАЧЕ ВложенныйЗапрос.ДатаВыполнения
	              |							КОНЕЦ = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	              |							ТОГДА &ДатаИспользуемаяПоУмолчанию
	              |						ИНАЧЕ ВЫБОР
	              |								КОГДА &ОтображатьВДатеВыполнениеФактВыполнение
	              |									ТОГДА ВЫБОР
	              |											КОГДА ВложенныйЗапрос.ДатаФактическогоВыполнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	              |												ТОГДА ВложенныйЗапрос.ДатаФактическогоВыполнения
	              |											ИНАЧЕ ВложенныйЗапрос.ДатаВыполнения
	              |										КОНЕЦ
	              |								ИНАЧЕ ВложенныйЗапрос.ДатаВыполнения
	              |							КОНЕЦ
	              |					КОНЕЦ
	              |			ИНАЧЕ ВЫБОР
	              |					КОГДА &ОтображатьВДатеВыполнениеФактВыполнение
	              |						ТОГДА ВЫБОР
	              |								КОГДА ВложенныйЗапрос.ДатаФактическогоВыполнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	              |									ТОГДА ВложенныйЗапрос.ДатаФактическогоВыполнения
	              |								ИНАЧЕ ВложенныйЗапрос.ДатаВыполнения
	              |							КОНЕЦ
	              |					ИНАЧЕ ВложенныйЗапрос.ДатаВыполнения
	              |				КОНЕЦ
	              |		КОНЕЦ КАК ДатаВыполнения,
	              |		ВложенныйЗапрос.ДатаФактическогоВыполнения КАК ДатаФактическогоВыполнения,
	              |		ВложенныйЗапрос.Выполнена КАК Выполнена,
	              |		ВложенныйЗапрос.ТипДокумента КАК ТипДокумента
	              |	ИЗ
	              |		(ВЫБРАТЬ
	              |			СогласованиеДокумента.Ссылка КАК Ссылка,
	              |			СогласованиеДокумента.ВидСообщения КАК ВидСообщения,
	              |			СогласованиеДокумента.Документ КАК Наименование,
	              |			СогласованиеДокумента.Дата КАК ДатаИнициации,
	              |			СогласованиеДокумента.Ответственный КАК Инициатор,
	              |			ВЫБОР
	              |				КОГДА СогласованиеДокумента.Сотрудник <> &ПустойСотрудник
	              |					ТОГДА СогласованиеДокумента.Сотрудник
	              |				КОГДА СогласованиеДокумента.Пользователь <> &ПустойПользователь
	              |					ТОГДА СогласованиеДокумента.Пользователь
	              |				КОГДА СогласованиеДокумента.РольДокументооборота <> &ПустойРольДокументооборота
	              |					ТОГДА СогласованиеДокумента.РольДокументооборота
	              |				ИНАЧЕ &ПустойСотрудник
	              |			КОНЕЦ КАК Исполнитель,
	              |			ВЫРАЗИТЬ(СогласованиеДокумента.Примечание КАК СТРОКА(100)) КАК КомментарииИсполнителя,
	              |			СогласованиеДокумента.ДатаВыполненияСрок КАК ДатаВыполнения,
	              |			СогласованиеДокумента.ДатаВыполнения КАК ДатаФактическогоВыполнения,
	              |			СогласованиеДокумента.Выполнена КАК Выполнена,
	              |			СогласованиеДокумента.Документ КАК ТипДокумента
	              |		ИЗ
	              |			Задача.СогласованиеДокумента КАК СогласованиеДокумента
				  |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.Подписание.ТаблицаПодписания КАК ПодписаниеТаблицаПодписания
				  |				ПО ПодписаниеТаблицаПодписания.СозданнаяЗадача = СогласованиеДокумента.Ссылка
	              |		ГДЕ
	              |			(СогласованиеДокумента.Пользователь В (&Пользователь)";
				  
				  Если ЗначениеЗаполнено(_ФизЛицо) Тогда
					  ТекстЗапрос = ТекстЗапрос + "
					  		|					ИЛИ СогласованиеДокумента.Сотрудник В (&Сотрудник)";
				  КонецЕсли;
				  
				  ТекстЗапрос = ТекстЗапрос + "
				  |					ИЛИ СогласованиеДокумента.РольДокументооборота В (&РольДокументооборота)
				  |					ИЛИ СогласованиеДокумента.Ссылка В (&СписокСсылокПД)
				  |) " + УслЗадачи + "
	              |			И СогласованиеДокумента.Ссылка.ПометкаУдаления = ЛОЖЬ) КАК ВложенныйЗапрос) КАК ВложенныйЗапрос
				  |УПОРЯДОЧИТЬ ПО ВложенныйЗапрос.ДатаИнициации Убыв
				  |";
		 
	ЗапросЗадачи.Текст = ТекстЗапрос;
	ЗапросЗадачи.УстановитьПараметр("ПустойСотрудник",Справочники.гхб_ФизическиеЛица.ПустаяСсылка());
	ЗапросЗадачи.УстановитьПараметр("ПустойПодразделение",Справочники.гхб_ПодразделенияОрганизацийБазХолдинга.ПустаяСсылка());
	ЗапросЗадачи.УстановитьПараметр("ПустойДолжность",Справочники.гхб_ДолжностиОрганизацийБазХолдинга.ПустаяСсылка());
	ЗапросЗадачи.УстановитьПараметр("ПустойРольДокументооборота",Справочники.но_РолиДокументооборота.ПустаяСсылка());
	ЗапросЗадачи.УстановитьПараметр("ПустойПользователь",Справочники.Пользователи.ПустаяСсылка());
	ЗапросЗадачи.УстановитьПараметр("Пользователь", _СписокПользователейПодписания);
	ЗапросЗадачи.УстановитьПараметр("Сотрудник", _СписокФЛПодписания);
	ЗапросЗадачи.УстановитьПараметр("ОтображатьВДатеВыполнениеФактВыполнение",Ложь);
    ЗапросЗадачи.УстановитьПараметр("ДатаИспользуемаяПоУмолчанию",'00010101');
	ЗапросЗадачи.УстановитьПараметр("СписокСсылокПД", _СписокСсылокПД);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	но_РолиДокументооборотаУчастникиСогласования.Ссылка КАК РольДокументооборота
	                      |ИЗ
	                      |	Справочник.но_РолиДокументооборота.УчастникиСогласования КАК но_РолиДокументооборотаУчастникиСогласования
	                      |ГДЕ
	                      |	НЕ но_РолиДокументооборотаУчастникиСогласования.Ссылка.ПометкаУдаления
	                      |	И но_РолиДокументооборотаУчастникиСогласования.Пользователь В (&Пользователь)
	                      |	И но_РолиДокументооборотаУчастникиСогласования.Дата1 <= &ТекущаяДата
	                      |	И (но_РолиДокументооборотаУчастникиСогласования.Дата2 >= &ТекущаяДата
	                      |	ИЛИ но_РолиДокументооборотаУчастникиСогласования.Дата2 = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))");

	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Пользователь", _СписокПользователейПодписания);
	
	спРолей = Новый СписокЗначений();
	спРолей.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РольДокументооборота"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ур_НазначениеПродюсеровПоЦФО.РольРуководителя,
	|	ур_НазначениеПродюсеровПоЦФО.ЦФО
	|ИЗ
	|	РегистрСведений.ур_НазначениеПродюсеровПоЦФО.СрезПоследних(&ТекущаяДата, ) КАК ур_НазначениеПродюсеровПоЦФО
	|ГДЕ
	|	ур_НазначениеПродюсеровПоЦФО.ФизЛицо В(&Сотрудник)
	|
	|СГРУППИРОВАТЬ ПО
	|	ур_НазначениеПродюсеровПоЦФО.РольРуководителя,
	|	ур_НазначениеПродюсеровПоЦФО.ЦФО";
	
	Запрос.УстановитьПараметр("Сотрудник", _СписокФЛПодписания);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаДинамическихРолей = РезультатЗапроса.Выгрузить();
	
	Индекс = 0;
	
	Пока Индекс < ТаблицаДинамическихРолей.Количество() Цикл
		
		СтрокаТаблицаДинамическихРолей = ТаблицаДинамическихРолей[Индекс];
		
		Если ЗначениеЗаполнено(СтрокаТаблицаДинамическихРолей.РольРуководителя)
			И ЗначениеЗаполнено(СтрокаТаблицаДинамическихРолей.ЦФО) Тогда
		
			Если спРолей.НайтиПоЗначению(СтрокаТаблицаДинамическихРолей.РольРуководителя) = Неопределено Тогда
				спРолей.Добавить(СтрокаТаблицаДинамическихРолей.РольРуководителя);	
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		Иначе
			
			ТаблицаДинамическихРолей.Удалить(СтрокаТаблицаДинамическихРолей);
			
		КонецЕсли;	
			
	КонецЦикла;
	
	ЗапросЗадачи.УстановитьПараметр("РольДокументооборота",спРолей);
	Результат = ЗапросЗадачи.Выполнить();
	Объект._Задачи.Загрузить(Результат.Выгрузить());
	
	Если ТаблицаДинамическихРолей.Количество() > 0 Тогда
		
		Индекс = 0;
		
		Пока Индекс < Объект._Задачи.Количество() Цикл
			
			СтрокаЗадачи = Объект._Задачи[Индекс];
			
			СтрокиТаблицаДинамическихРолей = ТаблицаДинамическихРолей.НайтиСтроки(Новый Структура("РольРуководителя",
				СтрокаЗадачи.Исполнитель));
				
			ТекущуюСтрокуУдалить = Истина;
	
			Если ЗначениеЗаполнено(СтрокаЗадачи.Документ)
				И СтрокиТаблицаДинамическихРолей.Количество() > 0 Тогда
								
				Для Каждого СтрокаТаблицаДинамическихРолей Из СтрокиТаблицаДинамическихРолей Цикл

					Попытка
						_Об = СтрокаЗадачи.Документ.ПолучитьОбъект();
					Исключение
						Продолжить;
					КонецПопытки;
					
					Если СтрокаТаблицаДинамическихРолей.ЦФО = СтрокаЗадачи.Документ.Проект.ЦФО Тогда
						ТекущуюСтрокуУдалить = Ложь;
					КонецЕсли;
					
				КонецЦикла;
				
				//Если НЕ ТекущуюСтрокуУдалить Тогда
				//
				//	Если СтрокаЗадачи.Исполнитель = Справочники.но_РолиДокументооборота.Продюсер
				//		И НЕ (ТипЗнч(СтрокаЗадачи.Документ) = Тип("ДокументСсылка.ур_ГонорарнаяВедомость")
				//		ИЛИ ТипЗнч(СтрокаЗадачи.Документ) = Тип("ДокументСсылка.ур_КорректировкаГонорарнойВедомости")) Тогда
				//		
				//		ТекущуюСтрокуУдалить = Истина;
				//		
				//	ИначеЕсли СтрокаЗадачи.Исполнитель = Справочники.но_РолиДокументооборота.ГлавныйРежиссер 
				//		И НЕ ТипЗнч(СтрокаЗадачи.Документ) = Тип("ДокументСсылка.ур_ГонорарнаяВедомостьПоФактическойОтработке") Тогда
				//		
				//		ТекущуюСтрокуУдалить = Истина;
				//		
				//	КонецЕсли;
				//	
				//КонецЕсли;	
								
			КонецЕсли;
			
			Если ТекущуюСтрокуУдалить Тогда				
				Объект._Задачи.Удалить(СтрокаЗадачи);
			Иначе
				Индекс = Индекс + 1;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанные()
	ЗаполнитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьТекущуюЗадачу(СсылкаНаЗадачу, Примечание)

	ЗадачаОбъект = СсылкаНаЗадачу.ПолучитьОбъект();	

	ЗадачаОбъект.ДатаВыполнения = ТекущаяДата();
	ЗадачаОбъект.Примечание = Примечание;
	
	Если ЗадачаОбъект.Состояние = Перечисления.но_СостояниеПодписи.НаОзнакомлении Тогда
		ЗадачаОбъект.Состояние = Перечисления.но_СостояниеПодписи.Ознакомлен;
	КонецЕсли;
	
	ЗадачаОбъект.Записать();
	ЗадачаОбъект.ВыполнитьЗадачу();
				
КонецПроцедуры

#КонецОбласти
