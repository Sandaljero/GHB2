#Область СобытияФормыЭлементовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БазаХолдингаСсылка = Параметры.БазаХолдинга;
	ЗаполнитьДанныеДляСоздания();
	ЗаполнитьДанныеДляРедактирования();
	ЗаполнитьДанныеДляУдаления();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура УстановитьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	РедактироватьСервер();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодразделения(Команда)
	СоздатьПодразделенияСервер();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПодразделения(Команда)
	УстановитьПометкуУдаленияСервер();
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура РедактироватьСервер()

	мНайденное = ДанныеРедактирование.НайтиСтроки(Новый Структура("ДН,Обработано", Истина, Ложь));
	
	Для каждого СтрокаНайденное Из мНайденное Цикл
		РедактироватьПодразделение(СтрокаНайденное);
	КонецЦикла;

КонецПроцедуры // РедактироватьСервер()

&НаСервере
Процедура РедактироватьПодразделение(ДанныеДляРедактирования)
	
	спрОбъект = ДанныеДляРедактирования.Подразделение.ПолучитьОбъект();
	
	Если спрОбъект.Наименование <> ДанныеДляРедактирования.Наименование И ЗначениеЗаполнено(ДанныеДляРедактирования.Наименование) Тогда
		спрОбъект.Наименование = ДанныеДляРедактирования.Наименование;
	КонецЕсли;
	
	Если спрОбъект.ПометкаУдаления <> ДанныеДляРедактирования.ПометкаУдаления Тогда
		спрОбъект.ПометкаУдаления = ДанныеДляРедактирования.ПометкаУдаления;
	КонецЕсли;
	
	Если спрОбъект.Родитель <> ДанныеДляРедактирования.Родитель И ЗначениеЗаполнено(ДанныеДляРедактирования.Родитель) Тогда
		спрОбъект.Родитель = ДанныеДляРедактирования.Родитель;
	КонецЕсли;
	
	Если спрОбъект.ОрганизацияБазХолдинга <> ДанныеДляРедактирования.Организация Тогда
		спрОбъект.ОрганизацияБазХолдинга = ДанныеДляРедактирования.Организация;
	КонецЕсли;
	
	Если спрОбъект.ДатаС <> ДанныеДляРедактирования.ДатаС Тогда
		спрОбъект.ДатаС = ДанныеДляРедактирования.ДатаС;
	КонецЕсли;
	
	Если спрОбъект.ДатаПо <> ДанныеДляРедактирования.ДатаПо Тогда
		спрОбъект.ДатаПо = ДанныеДляРедактирования.ДатаПо;
	КонецЕсли;
	
	Если спрОбъект.УровеньПодразделения <> ДанныеДляРедактирования.УровеньПодразделения Тогда
		спрОбъект.УровеньПодразделения = ДанныеДляРедактирования.УровеньПодразделения;
	КонецЕсли;
	
	Попытка
		
		спрОбъект.ДополнительныеСвойства.Вставить("ПометкаПришлаОбменом", Истина);
		спрОбъект.Записать();
		ДанныеДляРедактирования.Обработано = Истина;
		
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры // РедактироватьДолжность()

&НаСервере
Процедура СоздатьПодразделенияСервер()

	мНайденное = ДанныеНовые.НайтиСтроки(Новый Структура("ДН,Обработано", Истина, Ложь));
	РодительБазаХолдинга = гхб_ОбщегоНазначенияСервер.ПроверитьСоздатьГруппуПоОрганизацииВСправочникеПодразделенияБазХолдинга(БазаХолдингаСсылка);
	
	Если Не ЗначениеЗаполнено(РодительБазаХолдинга) Тогда
	
		ОбщегоНазначения.СообщитьПользователю("Не найдена папка(Родитель) по имени Базы холдинга");
		Возврат;
	
	КонецЕсли;
	
	Для каждого СтрокаНайденное Из мНайденное Цикл
		СоздатьПодразделение(СтрокаНайденное, ?(ЗначениеЗаполнено(СтрокаНайденное.Родитель), СтрокаНайденное.Родитель, РодительБазаХолдинга));
	КонецЦикла;

КонецПроцедуры // СоздатьДолжностиСервер()

&НаСервере
Процедура СоздатьПодразделение(Данные, Родитель)

	спрОбъект = Справочники.гхб_ПодразделенияОрганизацийБазХолдинга.СоздатьЭлемент();
	спрОбъект.Наименование = Данные.Наименование;
	спрОбъект.Родитель = Родитель;
	спрОбъект.БазаХолдинга = БазаХолдингаСсылка;
	спрОбъект.ОрганизацияБазХолдинга = Данные.Организация;
	спрОбъект.GUIDБазыХолдинга = Данные.guid;
	спрОбъект.ДатаС = Данные.ДатаС;
	спрОбъект.ДатаПо = Данные.ДатаПо;
	
	Попытка
		
		спрОбъект.Записать();
		Данные.Обработано = Истина;
		
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры // СоздатьПодразделение()

&НаСервере
Функция ПолучитьГруппуПоОрганизацииВСправочникеДолжностиГПХБазХолдинга()

	Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БазаХолдингаСсылка, "Наименование");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	гхб_ДолжностиГПХФОП.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.гхб_ДолжностиГПХФОП КАК гхб_ДолжностиГПХФОП
	|ГДЕ
	|	гхб_ДолжностиГПХФОП.ЭтоГруппа
	|	И гхб_ДолжностиГПХФОП.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		
		спрРодитель = Справочники.гхб_ДолжностиГПХФОП.СоздатьГруппу();
		спрРодитель.Наименование = Наименование;
		
		Попытка
		
			спрРодитель.Записать();
			Возврат спрРодитель.Ссылка;
		
		Исключение
			Возврат Неопределено;
		КонецПопытки;
		
	КонецЕсли;

КонецФункции // ПроверитьСоздатьГруппуПоОрганизацииВСправочникеФизЛицаБазХолдинга()

Процедура СоздатьДолжность(ДанныеДляСоздания, РодительБазаХолдинга)

	спрОбъект = Справочники.гхб_ДолжностиГПХФОП.СоздатьЭлемент();
	спрОбъект.ДополнительныеСвойства.Вставить("ПометкаПришлаОбменом", Истина);
	спрОбъект.Родитель = РодительБазаХолдинга;
	спрОбъект.ПометкаУдаления = ДанныеДляСоздания.ПометкаУдаления;
	спрОбъект.Наименование = ДанныеДляСоздания.Наименование;
	спрОбъект.GUIDБазыХолдинга = ДанныеДляСоздания.guid;
	спрОбъект.БазаХолдинга = БазаХолдингаСсылка;
	
	Попытка
		
		спрОбъект.Записать();
		ОбщегоНазначения.СообщитьПользователю("Создана должность " + спрОбъект.Ссылка);
		ДанныеДляСоздания.Обработано = Истина;
		
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкуУдаленияСервер()

	мНайденное = ДанныеУдаление.НайтиСтроки(Новый Структура("ДН,Обработано", Истина, Ложь));
	
	Для каждого СтрокаНайденное Из мНайденное Цикл
	
		спрОбъект = СтрокаНайденное.Подразделение.ПолучитьОбъект();
		спрОбъект.ДополнительныеСвойства.Вставить("ПометкаПришлаОбменом", Истина);
		спрОбъект.ПометкаУдаления = Истина;
		спрОбъект.НетСоответствияВУчетныхБазах = Истина;
		
		Попытка
		
			спрОбъект.Записать();
			СтрокаНайденное.Обработано = Истина;
		
		Исключение
			ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	
	КонецЦикла;

КонецПроцедуры // УстановитьПометкуУдаленияСервер()

&НаСервере
Процедура ЗаполнитьДанныеДляСоздания()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаНетДанныхГХБ();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеНовые.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеДляСоздания()

&НаСервере
Процедура ЗаполнитьДанныеДляРедактирования()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаРазличиеДанных();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Отличия = "";
		
		новСтр = ДанныеРедактирование.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
		Отличия = "";
		
		Если Выборка.Наименование <> Выборка.НаименованиеБХ Тогда
			Отличия = Отличия + "Наименование, " + Символы.ПС;
		КонецЕсли;
		
		Если Выборка.ПометкаУдаленияБХ <> Выборка.ПометкаУдаления Тогда
			Отличия = Отличия + "Пометка удаления " + Символы.ПС;
		КонецЕсли;
		
		Если Выборка.Организация <> Выборка.ОрганизацияБХ Тогда
			Отличия = Отличия + "Организация " + Символы.ПС;
		КонецЕсли;
		
		Если Выборка.Родитель <> Выборка.РодительБХ Тогда
			Отличия = Отличия + "Родитель " + Символы.ПС;
		КонецЕсли;
		
		Если Выборка.ДатаС <> Выборка.ДатаСБХ Тогда
			Отличия = Отличия + "Дата С " + Символы.ПС;
		КонецЕсли;
		
		Если Выборка.ДатаПо <> Выборка.ДатаПоБХ Тогда
			Отличия = Отличия + "Дата По " + Символы.ПС;
		КонецЕсли;
		
		Если Выборка.УровеньПодразделения <> Выборка.УровеньПодразделенияБХ Тогда
			Отличия = Отличия + "Уровень подразделения " + Символы.ПС;
		КонецЕсли;
		
		новСтр.Отличия = Отличия;
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьДанныеДляРедактирования()

&НаСервере
Процедура ЗаполнитьДанныеДляУдаления()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаНетДанныхРИБ();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеУдаление.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеДляУдаления()

&НаСервере
Функция ПолучитьТекстЗапросаРазличиеДанных()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Наименование КАК Наименование,
	|	таб.ПометкаУдаления КАК ПометкаУдаления,
	|	таб.guidОрганизация КАК guidОрганизация,
	|	таб.Родительguid КАК Родительguid,
	|	таб.ДатаС КАК ДатаС,
	|	таб.ДатаПо КАК ДатаПо,
	|	таб.УровеньПодразделения КАК УровеньПодразделения,
	|	таб.guid КАК guid
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Наименование КАК Наименование,
	|	втДанные.ПометкаУдаления КАК ПометкаУдаления,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК Организация,
	|	гхб_ПодразделенияОрганизацийБазХолдингаРодители.Ссылка КАК Родитель,
	|	втДанные.ДатаС КАК ДатаС,
	|	втДанные.ДатаПо КАК ДатаПо,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.Наименование КАК НаименованиеБХ,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.ОрганизацияБазХолдинга КАК ОрганизацияБХ,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.ДатаС КАК ДатаСБХ,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.ДатаПо КАК ДатаПоБХ,
	|	ВЫБОР
	|		КОГДА НЕ гхб_ПодразделенияОрганизацийБазХолдинга.Родитель.ЭтоГруппаБазы
	|			ТОГДА гхб_ПодразделенияОрганизацийБазХолдинга.Родитель
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.гхб_ПодразделенияОрганизацийБазХолдинга.ПустаяСсылка)
	|	КОНЕЦ КАК РодительБХ,
	|	""РИБ"" КАК ТипДанных,
	|	""ГХБ 2.0"" КАК ТипДанныхБХ,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.ПометкаУдаления КАК ПометкаУдаленияБХ,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.Ссылка КАК Подразделение,
	|	втДанные.УровеньПодразделения КАК УровеньПодразделения,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.УровеньПодразделения КАК УровеньПодразделенияБХ
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдинга
	|		ПО втДанные.guid = гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.guidОрганизация = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдингаРодители
	|		ПО втДанные.Родительguid = гхб_ПодразделенияОрганизацийБазХолдингаРодители.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдингаРодители.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	(втДанные.Наименование <> гхб_ПодразделенияОрганизацийБазХолдинга.Наименование
	|			ИЛИ гхб_ПодразделенияОрганизацийБазХолдинга.ПометкаУдаления <> втДанные.ПометкаУдаления
	|			ИЛИ гхб_ОрганизацииБазХолдинга.Ссылка <> гхб_ПодразделенияОрганизацийБазХолдинга.ОрганизацияБазХолдинга
	|			ИЛИ гхб_ПодразделенияОрганизацийБазХолдингаРодители.Ссылка <> гхб_ПодразделенияОрганизацийБазХолдинга.Родитель
	|			ИЛИ втДанные.ДатаС <> гхб_ПодразделенияОрганизацийБазХолдинга.ДатаС
	|			ИЛИ втДанные.ДатаПо <> гхб_ПодразделенияОрганизацийБазХолдинга.ДатаПо
	|			ИЛИ втДанные.УровеньПодразделения <> гхб_ПодразделенияОрганизацийБазХолдинга.УровеньПодразделения)";
	
	Возврат Текст;
	
КонецФункции // ПолучитьТекстЗапросаРазличиеДанных()

&НаСервере
Функция ПолучитьТекстЗапросаНетДанныхГХБ()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Наименование КАК Наименование,
	|	таб.ПометкаУдаления КАК ПометкаУдаления,
	|	таб.guidОрганизация КАК guidОрганизация,
	|	таб.Родительguid КАК Родительguid,
	|	таб.ДатаС КАК ДатаС,
	|	таб.ДатаПо КАК ДатаПо,
	|	таб.УровеньПодразделения КАК УровеньПодразделения,
	|	таб.guid КАК guid
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Наименование КАК Наименование,
	|	втДанные.ПометкаУдаления КАК ПометкаУдаления,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК Организация,
	|	гхб_ПодразделенияОрганизацийБазХолдингаРодители.Ссылка КАК Родитель,
	|	втДанные.ДатаС КАК ДатаС,
	|	втДанные.ДатаПо КАК ДатаПо,
	|	втДанные.guid КАК guid,
	|	втДанные.УровеньПодразделения КАК УровеньПодразделения
	|ИЗ
	|	втДанные КАК втДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдинга
	|		ПО втДанные.guid = гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.guidОрганизация = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдингаРодители
	|		ПО втДанные.Родительguid = гхб_ПодразделенияОрганизацийБазХолдингаРодители.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдингаРодители.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	гхб_ПодразделенияОрганизацийБазХолдинга.Ссылка ЕСТЬ NULL";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаНетДанныхГХБ()

&НаСервере
Функция ПолучитьТекстЗапросаНетДанныхРИБ()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Наименование КАК Наименование,
	|	таб.ПометкаУдаления КАК ПометкаУдаления,
	|	таб.guidОрганизация КАК guidОрганизация,
	|	таб.Родительguid КАК Родительguid,
	|	таб.ДатаС КАК ДатаС,
	|	таб.ДатаПо КАК ДатаПо,
	|	таб.guid КАК guid
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	гхб_ПодразделенияОрганизацийБазХолдинга.Ссылка КАК Подразделение
	|ИЗ
	|	втДанные КАК втДанные
	|		ПРАВОЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдинга
	|		ПО втДанные.guid = гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	втДанные.Наименование ЕСТЬ NULL
	|	И гхб_ПодразделенияОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаНетДанныхРИБ()

#КонецОбласти