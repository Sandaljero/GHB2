#Область СобытияФормыЭлементовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БазаХолдингаСсылка = Параметры.БазаХолдинга;
	ЗаполнитьДанныеДляСоздания();
	ЗаполнитьДанныеДляРедактирования();
	ЗаполнитьДетальныеЗаписи();
	//ЗаполнитьДанныеДляУдаления();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДетальныеЗаписиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДетальныеЗаписиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура УстановитьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	РедактироватьСервер();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДоговора(Команда)
	СоздатьДоговораСервер();
КонецПроцедуры

&НаСервере
Процедура СоздатьДоговораСервер()
	
	мНайденное = ДанныеНовые.НайтиСтроки(Новый Структура("ДН,Обработано", Истина, Ложь));
	
	Для каждого СтрокаНайденное Из мНайденное Цикл
		
		Если ЗначениеЗаполнено(СтрокаНайденное.Контрагент) Тогда
			
			стДоговорБазыХолдинга = гхб_ОбщегоНазначенияСервер.СоздатьЭлементДоговораКонтрагентовБазХолдинга(СтрокаНайденное.Наименование,
																												СтрокаНайденное.guid,
																												БазаХолдингаСсылка,
																												СтрокаНайденное.Контрагент,
																												СтрокаНайденное.Дата,
																												СтрокаНайденное.Номер,
																												СтрокаНайденное.Организация);
			СтрокаНайденное.Обработано = стДоговорБазыХолдинга.БезОшибок;
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура РедактироватьСервер()

	мНайденное = ДанныеРедактирование.НайтиСтроки(Новый Структура("ДН,Обработано", Истина, Ложь));
	
	Для каждого СтрокаНайденное Из мНайденное Цикл
	
		спрОбъект = СтрокаНайденное.Договор.ПолучитьОбъект();
		спрОбъект.РаботникиФОП.Очистить();
		
		мНайденныеДетали = ДетальныеЗаписи.НайтиСтроки(Новый Структура("guid", СтрокаНайденное.guid));
		
		Для каждого СтрокаДеталь Из мНайденныеДетали Цикл
		
			новСтр = спрОбъект.РаботникиФОП.Добавить();
			ЗаполнитьЗначенияСвойств(новСтр, СтрокаДеталь);
			спрОбъект.Дивизион = СтрокаДеталь.Дивизион;
			спрОбъект.ФактическийРуководитель = СтрокаДеталь.ФактическийРуководитель;
		
		КонецЦикла;
		
		Попытка
			
			спрОбъект.Записать();
			СтрокаНайденное.Обработано = Истина;
			
		Исключение
			ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	
	КонецЦикла;

КонецПроцедуры // РедактироватьСервер()

&НаСервере
Процедура ЗаполнитьДетальныеЗаписи()

	тзДивизионы = ПолучитьДивизионы();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанныеДетальные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	таб.ДоговорКонтрагентаGuid КАК ДоговорКонтрагентаGuid,
	|	таб.ДивизионКод КАК ДивизионКод,
	|	таб.ДивизионРодительКод КАК ДивизионРодительКод,
	|	таб.ФактическийРуководительGuid КАК ФактическийРуководительGuid,
	|	таб.ДатаНачала КАК ДатаНачала,
	|	таб.ДатаОкончания КАК ДатаОкончания,
	|	таб.ДолжностьGuid КАК ДолжностьGuid,
	|	таб.ФизЛицоGuid КАК ФизЛицоGuid
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.ДоговорКонтрагентаGuid КАК Guid,
	|	втДанные.ДивизионКод КАК ДивизионКод,
	|	втДанные.ДивизионРодительКод КАК ДивизионРодительКод,
	|	втДанные.ФактическийРуководительGuid КАК ФактическийРуководительGuid,
	|	втДанные.ДолжностьGuid КАК ДолжностьGuid,
	|	втДанные.ДатаНачала КАК ДатаНачала,
	|	втДанные.ДатаОкончания КАК ДатаОкончания,
	|	гхб_ФизическиеЛицаБазХолдингаРуководитель.Ссылка КАК ФактическийРуководитель,
	|	гхб_ФизическиеЛицаБазХолдинга.Ссылка КАК ФизЛицо,
	|	гхб_ДолжностиГПХФОП.Ссылка КАК Должность
	|ИЗ
	|	втДанные КАК втДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ДолжностиГПХФОП КАК гхб_ДолжностиГПХФОП
	|		ПО втДанные.ДолжностьGuid = гхб_ДолжностиГПХФОП.GUIDБазыХолдинга
	|			И (гхб_ДолжностиГПХФОП.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдингаРуководитель
	|		ПО втДанные.ФактическийРуководительGuid = гхб_ФизическиеЛицаБазХолдингаРуководитель.GUIDБазыХолдинга
	|			И (гхб_ФизическиеЛицаБазХолдингаРуководитель.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	|		ПО втДанные.ФизЛицоGuid = гхб_ФизическиеЛицаБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ФизическиеЛицаБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|
	|СГРУППИРОВАТЬ ПО
	|	втДанные.ДатаНачала,
	|	втДанные.ДоговорКонтрагентаGuid,
	|	втДанные.ДивизионКод,
	|	втДанные.ДивизионРодительКод,
	|	втДанные.ФактическийРуководительGuid,
	|	втДанные.ДолжностьGuid,
	|	втДанные.ДатаОкончания,
	|	гхб_ДолжностиГПХФОП.Ссылка,
	|	гхб_ФизическиеЛицаБазХолдинга.Ссылка,
	|	гхб_ФизическиеЛицаБазХолдингаРуководитель.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДетальныеЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
		мНайденое = тзДивизионы.НайтиСтроки(Новый Структура("Код,КодРодитель", Выборка.ДивизионКод, Выборка.ДивизионРодительКод));
		Если мНайденое.Количество() > 0 Тогда
			новСтр.Дивизион = мНайденое[0].Дивизион;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДетальныеЗаписи()

&НаСервере
Процедура ЗаполнитьДанныеДляСоздания()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаНетДанныхГХБ();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеНовые.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеДляСоздания()

&НаСервере
Процедура ЗаполнитьДанныеДляРедактирования()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаРазличиеДанных();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Отличия = "";
		
		новСтр = ДанныеРедактирование.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
		Отличия = "";
		
		Если Выборка.Организация <> Выборка.ОрганизацияБХ Тогда
			Отличия = Отличия + " Организация" + Символы.ПС;
		КонецЕсли;
		
		Если Выборка.Наименование <> Выборка.НаименованиеБХ Тогда
			Отличия = Отличия + " Наименование" + Символы.ПС
		КонецЕсли;
		
		Если Выборка.Номер <> Выборка.НомерДоговораБХ Тогда
			Отличия = Отличия + " НомерДоговора" + Символы.ПС
		КонецЕсли;
		
		Если Выборка.Дата <> Выборка.ДатаДоговораБХ Тогда
			Отличия = Отличия + " ДатаДоговора" + Символы.ПС
		КонецЕсли;
		
		Если Выборка.ПометкаУдаления <> Выборка.ПометкаУдаленияБХ Тогда
			Отличия = Отличия + " ПометкаУдаления" + Символы.ПС
		КонецЕсли;
		
		Если Выборка.Контрагент <> Выборка.КонтрагентБХ Тогда
			Отличия = Отличия + " Контрагент" + Символы.ПС
		КонецЕсли;
		
		новСтр.Отличия = Отличия;
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьДанныеДляРедактирования()

&НаСервере
Функция ПолучитьТекстЗапросаРазличиеДанных()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Организация КАК Организация,
	|	таб.ОрганизацияGuid КАК ОрганизацияGuid,
	|	таб.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	таб.ДоговорКонтрагентаGuid КАК ДоговорКонтрагентаGuid,
	|	таб.Контрагент КАК Контрагент,
	|	таб.КонтрагентGuid КАК КонтрагентGuid,
	|	таб.НомерДоговора КАК НомерДоговора,
	|	таб.ДатаДоговора КАК ДатаДоговора,
	|	таб.ПометкаУдаленияДоговор КАК ПометкаУдаления
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Организация КАК ОрганизацияСтрока,
	|	втДанные.ДоговорКонтрагента КАК Наименование,
	|	втДанные.Контрагент КАК КонтрагентСтрока,
	|	втДанные.НомерДоговора КАК Номер,
	|	втДанные.ДатаДоговора КАК Дата,
	|	втДанные.ПометкаУдаления КАК ПометкаУдаления,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК Организация,
	|	гхб_КонтрагентыБазХолдинга.Ссылка КАК Контрагент,
	|	гхб_ДоговораКонтрагентовБазХолдинга.Наименование КАК НаименованиеБХ,
	|	гхб_ДоговораКонтрагентовБазХолдинга.ПометкаУдаления КАК ПометкаУдаленияБХ,
	|	гхб_ДоговораКонтрагентовБазХолдинга.Номер КАК НомерДоговораБХ,
	|	гхб_ДоговораКонтрагентовБазХолдинга.Дата КАК ДатаДоговораБХ,
	|	гхб_ДоговораКонтрагентовБазХолдинга.Организация КАК ОрганизацияБХ,
	|	гхб_ДоговораКонтрагентовБазХолдинга.Контрагент КАК КонтрагентБХ,
	|	втДанные.ДоговорКонтрагентаGuid КАК Guid,
	|	гхб_ДоговораКонтрагентовБазХолдинга.Ссылка КАК Договор
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ДоговораКонтрагентовБазХолдинга КАК гхб_ДоговораКонтрагентовБазХолдинга
	|		ПО втДанные.ДоговорКонтрагентаGuid = гхб_ДоговораКонтрагентовБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ДоговораКонтрагентовБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.ОрганизацияGuid = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_КонтрагентыБазХолдинга КАК гхб_КонтрагентыБазХолдинга
	|		ПО втДанные.КонтрагентGuid = гхб_КонтрагентыБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_КонтрагентыБазХолдинга.БазаХолдинга = &БазаХолдинга)";
	//|ГДЕ
	//|	(втДанные.ДоговорКонтрагента <> гхб_ДоговораКонтрагентовБазХолдинга.Наименование
	//|			ИЛИ гхб_КонтрагентыБазХолдинга.Ссылка <> гхб_ДоговораКонтрагентовБазХолдинга.Контрагент
	//|			ИЛИ гхб_ОрганизацииБазХолдинга.Ссылка <> гхб_ДоговораКонтрагентовБазХолдинга.Организация
	//|			ИЛИ втДанные.ПометкаУдаления <> гхб_ДоговораКонтрагентовБазХолдинга.ПометкаУдаления
	//|			ИЛИ втДанные.НомерДоговора <> гхб_ДоговораКонтрагентовБазХолдинга.Номер
	//|			ИЛИ втДанные.ДатаДоговора <> гхб_ДоговораКонтрагентовБазХолдинга.Дата
	//|			ИЛИ ИСТИНА)";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаРазличиеДанных()

&НаСервере
Функция ПолучитьТекстЗапросаНетДанныхГХБ()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Организация КАК Организация,
	|	таб.ОрганизацияGuid КАК ОрганизацияGuid,
	|	таб.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	таб.ДоговорКонтрагентаGuid КАК ДоговорКонтрагентаGuid,
	|	таб.Контрагент КАК Контрагент,
	|	таб.КонтрагентGuid КАК КонтрагентGuid,
	|	таб.НомерДоговора КАК НомерДоговора,
	|	таб.ДатаДоговора КАК ДатаДоговора,
	|	таб.ПометкаУдаленияДоговор КАК ПометкаУдаления
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.ДоговорКонтрагента КАК Наименование,
	|	втДанные.НомерДоговора КАК Номер,
	|	втДанные.ДатаДоговора КАК Дата,
	|	втДанные.ПометкаУдаления КАК ПометкаУдаления,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК Организация,
	|	гхб_КонтрагентыБазХолдинга.Ссылка КАК Контрагент,
	|	втДанные.ДоговорКонтрагентаGuid КАК guid
	|ИЗ
	|	втДанные КАК втДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ДоговораКонтрагентовБазХолдинга КАК гхб_ДоговораКонтрагентовБазХолдинга
	|		ПО втДанные.ДоговорКонтрагентаGuid = гхб_ДоговораКонтрагентовБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ДоговораКонтрагентовБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.ОрганизацияGuid = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_КонтрагентыБазХолдинга КАК гхб_КонтрагентыБазХолдинга
	|		ПО втДанные.КонтрагентGuid = гхб_КонтрагентыБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_КонтрагентыБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	гхб_ДоговораКонтрагентовБазХолдинга.Ссылка ЕСТЬ NULL";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаНетДанныхГХБ()

&НаСервере
Функция ПолучитьДивизионы()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	гхб_Дивизионы.Ссылка КАК Дивизион,
	|	гхб_Дивизионы.Код КАК Код,
	|	гхб_ДивизионыРодители.Родитель КАК Родитель,
	|	гхб_ДивизионыРодители.Код КАК КодРодитель
	|ИЗ
	|	Справочник.гхб_Дивизионы КАК гхб_Дивизионы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_Дивизионы КАК гхб_ДивизионыРодители
	|		ПО гхб_Дивизионы.Родитель = гхб_ДивизионыРодители.Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьДивизионы()

#КонецОбласти