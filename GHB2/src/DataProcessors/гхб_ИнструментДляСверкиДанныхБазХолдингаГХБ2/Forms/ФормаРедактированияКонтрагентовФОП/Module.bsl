#Область СобытияФормыЭлементовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БазаХолдингаСсылка = Параметры.БазаХолдинга;
	ЗаполнитьДанныеДляСоздания();
	ЗаполнитьДанныеДляРедактирования();
	//ЗаполнитьДанныеДляУдаления();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура УстановитьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	РедактироватьСервер();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКонтрагентов(Команда)
	СоздатьКонтрагентовНаСервере();
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура РедактироватьСервер()

	мНайденное = ДанныеРедактирование.НайтиСтроки(Новый Структура("ДН,Обработано", Истина, Ложь));
	
	Для каждого СтрокаНайденное Из мНайденное Цикл
		РедактироватьКонтрагента(СтрокаНайденное);
	КонецЦикла;

КонецПроцедуры // РедактироватьСервер()

&НаСервере
Функция ПолучитьГруппуПоОрганизацииВСправочникеДолжностиГПХБазХолдинга()

	Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БазаХолдингаСсылка, "Наименование");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	гхб_ДолжностиГПХФОП.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.гхб_ДолжностиГПХФОП КАК гхб_ДолжностиГПХФОП
	|ГДЕ
	|	гхб_ДолжностиГПХФОП.ЭтоГруппа
	|	И гхб_ДолжностиГПХФОП.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		
		спрРодитель = Справочники.гхб_ДолжностиГПХФОП.СоздатьГруппу();
		спрРодитель.Наименование = Наименование;
		
		Попытка
		
			спрРодитель.Записать();
			Возврат спрРодитель.Ссылка;
		
		Исключение
			Возврат Неопределено;
		КонецПопытки;
		
	КонецЕсли;

КонецФункции // ПроверитьСоздатьГруппуПоОрганизацииВСправочникеФизЛицаБазХолдинга()

&НаСервере
Процедура ЗаполнитьДанныеДляСоздания()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаНетДанныхГХБ();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеНовые.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеДляСоздания()

&НаСервере
Процедура ЗаполнитьДанныеДляРедактирования()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаРазличиеДанных();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Отличия = "";
		
		новСтр = ДанныеРедактирование.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
		Отличия = "";
		
		Если Выборка.НаименованиеБХ <> Выборка.Наименование Тогда
			Отличия = Отличия + " Наименование" + Символы.ПС;
		КонецЕсли;
		
		Если Выборка.КодПоЕДРПОУ <> Выборка.КодПоЕДРПОУБХ Тогда
			Отличия = Отличия + " КодПоЕДРПОУ" + Символы.ПС
		КонецЕсли;
		
		Если Выборка.ИНН <> Выборка.ИННБХ Тогда
			Отличия = Отличия + " ИНН" + Символы.ПС
		КонецЕсли;
		
		Если Выборка.ЮрФизЛицо <> Выборка.ЮрФизЛицоБХ Тогда
			Отличия = Отличия + " ЮрФизЛицо" + Символы.ПС
		КонецЕсли;
		
		Если Выборка.ПометкаУдаления <> Выборка.ПометкаУдаленияБХ Тогда
			Отличия = Отличия + " ПометкаУдаления" + Символы.ПС
		КонецЕсли;
		
		новСтр.Отличия = Отличия;
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьДанныеДляРедактирования()

&НаСервере
Функция ПолучитьТекстЗапросаРазличиеДанных()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Контрагент КАК Наименование,
	|	таб.ПометкаУдаленияКонтрагент КАК ПометкаУдаления,
	|	таб.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	таб.ЮрФизЛицо КАК ЮрФизЛицо,
	|	таб.ИНН КАК ИНН,
	|	таб.ВидКонтрагента КАК ВидКонтрагента,
	|	таб.КонтрагентGuid КАК guid
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Наименование КАК Наименование,
	|	втДанные.ПометкаУдаления КАК ПометкаУдаления,
	|	втДанные.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	втДанные.ЮрФизЛицо КАК ЮрФизЛицо,
	|	втДанные.ИНН КАК ИНН,
	|	втДанные.ВидКонтрагента КАК ВидКонтрагента,
	|	гхб_КонтрагентыБазХолдинга.Наименование КАК НаименованиеБХ,
	|	гхб_КонтрагентыБазХолдинга.ПометкаУдаления КАК ПометкаУдаленияБХ,
	|	гхб_КонтрагентыБазХолдинга.КодПоЕДРПОУ КАК КодПоЕДРПОУБХ,
	|	гхб_КонтрагентыБазХолдинга.ЮрФизЛицо КАК ЮрФизЛицоБХ,
	|	гхб_КонтрагентыБазХолдинга.ИНН КАК ИННБХ,
	|	гхб_КонтрагентыБазХолдинга.ВидКонтрагента КАК ВидКонтрагентаБХ,
	|	гхб_КонтрагентыБазХолдинга.Ссылка КАК Контрагент,
	|	втДанные.guid КАК guid
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_КонтрагентыБазХолдинга КАК гхб_КонтрагентыБазХолдинга
	|		ПО втДанные.guid = гхб_КонтрагентыБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_КонтрагентыБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	(втДанные.Наименование <> гхб_КонтрагентыБазХолдинга.Наименование
	|			ИЛИ втДанные.ПометкаУдаления <> гхб_КонтрагентыБазХолдинга.ПометкаУдаления
	|			ИЛИ втДанные.КодПоЕДРПОУ <> гхб_КонтрагентыБазХолдинга.КодПоЕДРПОУ
	|			ИЛИ втДанные.ЮрФизЛицо <> гхб_КонтрагентыБазХолдинга.ЮрФизЛицо
	|			ИЛИ втДанные.ИНН <> гхб_КонтрагентыБазХолдинга.ИНН
	|			ИЛИ гхб_КонтрагентыБазХолдинга.ВидКонтрагента <> втДанные.ВидКонтрагента)";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаРазличиеДанных()

&НаСервере
Функция ПолучитьТекстЗапросаНетДанныхГХБ()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Контрагент КАК Наименование,
	|	таб.ПометкаУдаленияКонтрагент КАК ПометкаУдаления,
	|	таб.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	таб.ЮрФизЛицо КАК ЮрФизЛицо,
	|	таб.ИНН КАК ИНН,
	|	таб.ВидКонтрагента КАК ВидКонтрагента,
	|	таб.КонтрагентGuid КАК guid
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Наименование КАК Наименование,
	|	втДанные.ПометкаУдаления КАК ПометкаУдаления,
	|	втДанные.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	втДанные.ЮрФизЛицо КАК ЮрФизЛицо,
	|	втДанные.ИНН КАК ИНН,
	|	втДанные.ВидКонтрагента КАК ВидКонтрагента,
	|	втДанные.guid КАК guid
	|ИЗ
	|	втДанные КАК втДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_КонтрагентыБазХолдинга КАК гхб_КонтрагентыБазХолдинга
	|		ПО втДанные.guid = гхб_КонтрагентыБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_КонтрагентыБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	гхб_КонтрагентыБазХолдинга.Ссылка ЕСТЬ NULL";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаНетДанныхГХБ()

&НаСервере
Функция ПолучитьТекстЗапросаНетДанныхРИБ()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Наименование КАК Наименование,
	|	таб.ПометкаУдаления КАК ПометкаУдаления,
	|	таб.guid КАК guid
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	гхб_ДолжностиГПХФОП.Наименование КАК Наименование,
	|	гхб_ДолжностиГПХФОП.GUIDБазыХолдинга КАК guid,
	|	гхб_ДолжностиГПХФОП.ПометкаУдаления КАК ПометкаУдаления,
	|	гхб_ДолжностиГПХФОП.Ссылка КАК ДолжностьОрганизации,
	|	гхб_ДолжностиГПХФОП.ПометкаУдаления КАК ПометкаУдаленияБаза
	|ИЗ
	|	Справочник.гхб_ДолжностиГПХФОП КАК гхб_ДолжностиГПХФОП
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанные КАК втДанные
	|		ПО гхб_ДолжностиГПХФОП.GUIDБазыХолдинга = втДанные.guid
	|ГДЕ
	|	втДанные.Наименование ЕСТЬ NULL
	|	И гхб_ДолжностиГПХФОП.БазаХолдинга = &БазаХолдинга";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаНетДанныхРИБ()

&НаСервере
Процедура СоздатьКонтрагентовНаСервере()
	
	мНайденное = ДанныеНовые.НайтиСтроки(Новый Структура("ДН,Обработано", Истина, Ложь));
	РодительБазаХолдинга = гхб_ОбщегоНазначенияСервер.ПроверитьСоздатьГруппуСправочникаКонтрагентыБазХолдинга(БазаХолдингаСсылка);
	
	Если Не ЗначениеЗаполнено(РодительБазаХолдинга) Тогда
	
		ОбщегоНазначения.СообщитьПользователю("Не найдена папка(Родитель) по имени Базы холдинга");
		Возврат;
	
	КонецЕсли;
	
	Для каждого СтрокаНайденное Из мНайденное Цикл
		
		КонтрагентТекущейБазы = ПолучитьКонтрагентаПоЕДРПОУ(СтрокаНайденное.КодПоЕДРПОУ);
		
		Если Не ЗначениеЗаполнено(КонтрагентТекущейБазы) Тогда
			
			стКонтрагентТекущейБазы = гхб_ОбщегоНазначенияСервер.СоздатьЭлементСправочникаКонтрагенты(СтрокаНайденное.Наименование,
																									СтрокаНайденное.КодПоЕДРПОУ,
																									СтрокаНайденное.ИНН,
																									СтрокаНайденное.ЮрФизЛицо,
																									СтрокаНайденное.ВидКонтрагента);
			Если стКонтрагентТекущейБазы.БезОшибок Тогда
				КонтрагентТекущейБазы = стКонтрагентТекущейБазы.Ссылка;
			КонецЕсли;
		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтрагентТекущейБазы) Тогда
			
			стКотрагентБазыХолдинга = гхб_ОбщегоНазначенияСервер.СоздатьЭлементСправочникаКонтрагентыБазХолдинга(СтрокаНайденное.Наименование,
																												СтрокаНайденное.guid,
																												БазаХолдингаСсылка,
																												КонтрагентТекущейБазы,
																												СтрокаНайденное.КодПоЕДРПОУ,
																												СтрокаНайденное.ЮрФизЛицо,
																												СтрокаНайденное.ИНН,
																												СтрокаНайденное.ВидКонтрагента);
			СтрокаНайденное.Обработано = стКотрагентБазыХолдинга.БезОшибок;
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РедактироватьКонтрагента(ДанныеДляРедактирования)
	
	спрОбъект = ДанныеДляРедактирования.Контрагент.ПолучитьОбъект();
	
	Если спрОбъект.Наименование <> ДанныеДляРедактирования.Наименование И ЗначениеЗаполнено(ДанныеДляРедактирования.Наименование) Тогда
		спрОбъект.Наименование = ДанныеДляРедактирования.Наименование;
	КонецЕсли;
	
	Если спрОбъект.ПометкаУдаления <> ДанныеДляРедактирования.ПометкаУдаления Тогда
		спрОбъект.ПометкаУдаления = ДанныеДляРедактирования.ПометкаУдаления;
	КонецЕсли;
	
	Если спрОбъект.КодПоЕДРПОУ <> ДанныеДляРедактирования.КодПоЕДРПОУ Тогда
		спрОбъект.КодПоЕДРПОУ = ДанныеДляРедактирования.КодПоЕДРПОУ;
	КонецЕсли;
	
	Если спрОбъект.ЮрФизЛицо <> ДанныеДляРедактирования.ЮрФизЛицо Тогда
		спрОбъект.ЮрФизЛицо = ДанныеДляРедактирования.ЮрФизЛицо;
	КонецЕсли;
	
	Если спрОбъект.ВидКонтрагента <> ДанныеДляРедактирования.ВидКонтрагента Тогда
		спрОбъект.ВидКонтрагента = ДанныеДляРедактирования.ВидКонтрагента;
	КонецЕсли;
	
	Если спрОбъект.ИНН <> ДанныеДляРедактирования.ИНН Тогда
		спрОбъект.ИНН = ДанныеДляРедактирования.ИНН;
	КонецЕсли;
	
	Попытка
		
		спрОбъект.ДополнительныеСвойства.Вставить("ПометкаПришлаОбменом", Истина);
		спрОбъект.Записать();
		ДанныеДляРедактирования.Обработано = Истина;
		
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры // РедактироватьДолжность()

&НаСервереБезКонтекста
Функция ПолучитьКонтрагентаПоЕДРПОУ(КодЕДРПОУ)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КодПоЕДРПОУ", КодЕДРПОУ);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	гхб_Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.гхб_Контрагенты КАК гхб_Контрагенты
	|ГДЕ
	|	НЕ гхб_Контрагенты.ПометкаУдаления
	|	И гхб_Контрагенты.КодПоЕДРПОУ = &КодПоЕДРПОУ
	|	И НЕ гхб_Контрагенты.ЭтоГруппа";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Контрагент;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции // ПолучитьКонтрагентаПоЕДРПОУ()

#КонецОбласти