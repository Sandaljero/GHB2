
#Область ДействияФормыЭлементовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	БазаХолдингаСсылка = Параметры.БазаХолдинга;
	ЗаполнитьДанныеДляСоздания();
	ЗаполнитьДанныеДляРедактирования();
	ЗаполнитьДанныеДляУдаления();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура УстановитьФлаги(Команда)
	
	Для каждого СтрокаДанные Из Данные Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлаги(Команда)
	
	Для каждого СтрокаДанные Из Данные Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаписи(Команда)
	СоздатьЗаписьКадровыхДанных();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЗаписи(Команда)
	РедактироватьЗаписиКадровыхДанных();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаписи(Команда)
	УдалитьЗаписиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура СоздатьЗаписьКадровыхДанных()
	
	мНайденное = Данные.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Редактировано Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаДанные.Период) 
			Или Не ЗначениеЗаполнено(СтрокаДанные.Организация) 
			Или Не ЗначениеЗаполнено(СтрокаДанные.Сотрудник)
			Или Не ЗначениеЗаполнено(БазаХолдингаСсылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Запись = РегистрыСведений.гхб_РаботникиОрганизацийБазХолдинга.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, СтрокаДанные);
		Запись.БазаХолдинга = БазаХолдингаСсылка;
		Если ЗначениеЗаполнено(Запись.ПозицияШтатногоРасписания) 
			И Не ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.ПозицияШтатногоРасписания, "GUIDБазыХолдинга")) Тогда
			Запись.ПозицияШтатногоРасписания = Неопределено;
		КонецЕсли;
		Запись.Записать();
		СтрокаДанные.Редактировано = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РедактироватьЗаписиКадровыхДанных()
	
	мНайденное = ДанныеРедактирование.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Редактировано Тогда
			Продолжить;
		КонецЕсли;
		
		Набор = РегистрыСведений.гхб_РаботникиОрганизацийБазХолдинга.СоздатьНаборЗаписей();
		Набор.Отбор.Период.Установить(СтрокаДанные.Период);
		Набор.Отбор.БазаХолдинга.Установить(БазаХолдингаСсылка);
		Набор.Отбор.Организация.Установить(СтрокаДанные.Организация);
		Набор.Отбор.Сотрудник.Установить(СтрокаДанные.Сотрудник);
		
		Набор.Прочитать();
		ЗаписатьНабор = Ложь;
		
		Если Набор.Количество() = 1 Тогда
			
			Если Набор[0].ПричинаИзмененияСостояния <> СтрокаДанные.ПричинаИзмененияСостояния Тогда
				
				Набор[0].ПричинаИзмененияСостояния = СтрокаДанные.ПричинаИзмененияСостояния;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].Должность <> СтрокаДанные.Должность Тогда
				
				Набор[0].Должность = СтрокаДанные.Должность;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].ПодразделениеОрганизации <> СтрокаДанные.ПодразделениеОрганизации Тогда
				
				Набор[0].ПодразделениеОрганизации = СтрокаДанные.ПодразделениеОрганизации;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].ПозицияШтатногоРасписания <> СтрокаДанные.ПозицияШтатногоРасписания Тогда
				
				Если Не (ЗначениеЗаполнено(СтрокаДанные.ПозицияШтатногоРасписания) 
					И Не ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаДанные.ПозицияШтатногоРасписания, "GUIDБазыХолдинга"))) Тогда
					
					Набор[0].ПозицияШтатногоРасписания = СтрокаДанные.ПозицияШтатногоРасписания;
					ЗаписатьНабор = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Набор[0].ДатаОкончанияСрочногоТрудовогоДоговора <> СтрокаДанные.ДатаОкончанияСрочногоТрудовогоДоговора Тогда
				
				Набор[0].ДатаОкончанияСрочногоТрудовогоДоговора = СтрокаДанные.ДатаОкончанияСрочногоТрудовогоДоговора;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].Дивизион <> СтрокаДанные.Дивизион Тогда
				
				Набор[0].Дивизион = СтрокаДанные.Дивизион;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].БюджетныйКодПозиции <> СтрокаДанные.БюджетныйКодПозиции Тогда
				
				Набор[0].БюджетныйКодПозиции = СтрокаДанные.БюджетныйКодПозиции;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].ГруппаДивизиона <> СтрокаДанные.ГруппаДивизиона Тогда
				
				Набор[0].ГруппаДивизиона = СтрокаДанные.ГруппаДивизиона;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].ДатаУвольнения <> СтрокаДанные.ДатаУвольнения Тогда
				
				Набор[0].ГруппаДивизиона = СтрокаДанные.ГруппаДивизиона;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].ЦФО <> СтрокаДанные.ЦФО Тогда
				
				Набор[0].ЦФО = СтрокаДанные.ЦФО;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если ЗаписатьНабор Тогда
			
				Набор.Записать();
				СтрокаДанные.Редактировано = Истина;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // РедактироватьЗаписи()

&НаСервере
Процедура СоздатьПозициюШтатногоРасписания(Наименование, guid, База)
	
	РодительБазаХолдинга = ПроверитьСоздатьГруппуПоПозицииШтатногоРасписанияБазХолдинга();
	
	спрОбъект = Справочники.гхб_ПозицииШтатногоРасписанияБазХолдинга.СоздатьЭлемент();
	спрОбъект.Родитель = РодительБазаХолдинга;
	спрОбъект.Наименование = Наименование;
	спрОбъект.БазаХолдинга = База;
	спрОбъект.GUIDБазыХолдинга = guid;
	
	Попытка
		спрОбъект.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("СозданиеПозициюШтатногоРасписанияБазХолдингаПриЗагрузкеДанных", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры // ПолучитьСоздатьПозициюШтатногоРасписания()

&НаСервере
Функция ПроверитьСоздатьГруппуПоПозицииШтатногоРасписанияБазХолдинга()

	Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БазаХолдингаСсылка, "Наименование");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.гхб_ПозицииШтатногоРасписанияБазХолдинга КАК гхб_ПозицииШтатногоРасписанияБазХолдинга
	|ГДЕ
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.ЭтоГруппа
	|	И гхб_ПозицииШтатногоРасписанияБазХолдинга.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Попытка
	
		спрОбъект = Справочники.гхб_ПозицииШтатногоРасписанияБазХолдинга.СоздатьГруппу();
		спрОбъект.ДополнительныеСвойства.Вставить("ПометкаПришлаОбменом", Истина);
		спрОбъект.Наименование = Наименование;
		спрОбъект.Записать();
		Возврат спрОбъект.Ссылка;
	
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;

КонецФункции // ПроверитьСоздатьГруппуПоПозицииШтатногоРасписанияБазХолдинга()

&НаСервере
Процедура УдалитьЗаписиНаСервере()
	
	мНайденное = ДанныеУдаление.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Удалено Тогда
			Продолжить;
		КонецЕсли;
		
		Набор = РегистрыСведений.гхб_РаботникиОрганизацийБазХолдинга.СоздатьНаборЗаписей();
		Набор.Отбор.Период.Установить(СтрокаДанные.Период);
		Набор.Отбор.БазаХолдинга.Установить(БазаХолдингаСсылка);
		Набор.Отбор.Организация.Установить(СтрокаДанные.Организация);
		Набор.Отбор.Сотрудник.Установить(СтрокаДанные.Сотрудник);
		
		Набор.Прочитать();
			
		Если Набор.Количество() = 1 Тогда
			
			Набор.Очистить();
			Попытка
				
				Набор.Записать();
				СтрокаДанные.Удалено = Истина;
				
			Исключение
				ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДляСоздания()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	таб.Сотрудник КАК СотрудникТекст,
	|	таб.guidСотрудник КАК guidСотрудник,
	|	таб.Должность КАК ДолжностьТекст,
	|	таб.guidДолжность КАК guidДолжность,
	|	таб.ПодразделениеОрганизации КАК ПодразделениеОрганизацииТекст,
	|	таб.guidПодразделениеОрганизации КАК guidПодразделениеОрганизации,
	|	таб.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	таб.ВидЗанятости КАК ВидЗанятости,
	|	таб.Организация КАК ОрганизацияТекст,
	|	таб.guidОрганизации КАК guidОрганизации,
	|	таб.ДивизионКод КАК ДивизионКод,
	|	таб.ДивизионКодРодителя КАК ДивизионКодРодителя,
	|	таб.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	таб.ИНН КАК ИНН,
	|	таб.Позиция КАК Позиция,
	|	таб.Позицияguid КАК Позицияguid,
	|	таб.ЦФО КАК ЦФО,
	|	таб.guidЦФО КАК guidЦФО,
	|	таб.ДатаЗаписиБазыГХБ КАК Период
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.СотрудникТекст КАК СотрудникТекст,
	|	втДанные.guidСотрудник КАК guidСотрудник,
	|	втДанные.ДолжностьТекст КАК ДолжностьТекст,
	|	втДанные.guidДолжность КАК guidДолжность,
	|	втДанные.ПодразделениеОрганизацииТекст КАК ПодразделениеОрганизацииТекст,
	|	втДанные.guidПодразделениеОрганизации КАК guidПодразделениеОрганизации,
	|	втДанные.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	втДанные.ВидЗанятости КАК ВидЗанятости,
	|	втДанные.ОрганизацияТекст КАК ОрганизацияТекст,
	|	втДанные.guidОрганизации КАК guidОрганизации,
	|	втДанные.ДивизионКод КАК ДивизионКод,
	|	втДанные.ДивизионКодРодителя КАК ДивизионКодРодителя,
	|	втДанные.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втДанные.ИНН КАК ИНН,
	|	втДанные.Позиция КАК Позиция,
	|	втДанные.Позицияguid КАК Позицияguid,
	|	втДанные.Период КАК Период,
	|	гхб_ДолжностиОрганизацийБазХолдинга.Ссылка КАК ДолжностьСсылка,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК ОрганизацияСсылка,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.Ссылка КАК ПодразделениеСсылка,
	|	гхб_СотрудникиБазХолдинга.Ссылка КАК СотрудникСсылка,
	|	гхб_ЦФО.Ссылка КАК ЦФОСсылка,
	|	втДанные.ЦФО КАК ЦФОТекст
	|ПОМЕСТИТЬ втСводная
	|ИЗ
	|	втДанные КАК втДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_СотрудникиБазХолдинга КАК гхб_СотрудникиБазХолдинга
	|		ПО втДанные.guidСотрудник = гхб_СотрудникиБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_СотрудникиБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдинга
	|		ПО втДанные.guidПодразделениеОрганизации = гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.guidОрганизации = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ДолжностиОрганизацийБазХолдинга КАК гхб_ДолжностиОрганизацийБазХолдинга
	|		ПО втДанные.guidДолжность = гхб_ДолжностиОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ДолжностиОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ЦФО КАК гхб_ЦФО
	|		ПО втДанные.guidЦФО = гхб_ЦФО.GUIDБазыХолдинга
	|			И (гхб_ЦФО.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСводная.Период КАК Период,
	|	втСводная.ДолжностьСсылка КАК Должность,
	|	втСводная.ОрганизацияСсылка КАК Организация,
	|	втСводная.ПодразделениеСсылка КАК ПодразделениеОрганизации,
	|	втСводная.СотрудникСсылка КАК Сотрудник,
	|	гхб_Дивизионы.Ссылка КАК ГруппаДивизиона,
	|	гхб_ДивизионыРодители.Ссылка КАК Дивизион,
	|	втСводная.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втСводная.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.Ссылка КАК ПозицияШтатногоРасписания,
	|	втСводная.ЦФОСсылка КАК ЦФО
	|ИЗ
	|	втСводная КАК втСводная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гхб_РаботникиОрганизацийБазХолдинга КАК гхб_РаботникиОрганизацийБазХолдинга
	|		ПО втСводная.Период = гхб_РаботникиОрганизацийБазХолдинга.Период
	|			И втСводная.СотрудникСсылка = гхб_РаботникиОрганизацийБазХолдинга.Сотрудник
	|			И втСводная.ОрганизацияСсылка = гхб_РаботникиОрганизацийБазХолдинга.Организация
	|			И (гхб_РаботникиОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_Дивизионы КАК гхб_Дивизионы
	|		ПО втСводная.ДивизионКод = гхб_Дивизионы.Код
	|			И втСводная.ДивизионКодРодителя = гхб_Дивизионы.Родитель.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_Дивизионы КАК гхб_ДивизионыРодители
	|		ПО втСводная.ДивизионКодРодителя = гхб_ДивизионыРодители.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ПозицииШтатногоРасписанияБазХолдинга КАК гхб_ПозицииШтатногоРасписанияБазХолдинга
	|		ПО (ВЫБОР
	|				КОГДА втСводная.Позицияguid = """"
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ втСводная.Позицияguid = гхб_ПозицииШтатногоРасписанияБазХолдинга.GUIDБазыХолдинга
	|			КОНЕЦ)
	|			И (гхб_ПозицииШтатногоРасписанияБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	гхб_РаботникиОрганизацийБазХолдинга.Период ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Период";
	
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", Параметры.БазаХолдинга);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = Данные.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		Если новСтр.ПричинаИзмененияСостояния = Перечисления.гхб_ПричиныИзмененияСостояния.Увольнение Тогда
			новСтр.ДатаУвольнения = НачалоДня(новСтр.Период) - 1
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьДанныеДляСоздания()

&НаСервере
Процедура ЗаполнитьДанныеДляРедактирования()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	таб.Сотрудник КАК СотрудникТекст,
	|	таб.guidСотрудник КАК guidСотрудник,
	|	таб.Должность КАК ДолжностьТекст,
	|	таб.guidДолжность КАК guidДолжность,
	|	таб.ПодразделениеОрганизации КАК ПодразделениеОрганизацииТекст,
	|	таб.guidПодразделениеОрганизации КАК guidПодразделениеОрганизации,
	|	таб.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	таб.ВидЗанятости КАК ВидЗанятости,
	|	таб.Организация КАК ОрганизацияТекст,
	|	таб.guidОрганизации КАК guidОрганизации,
	|	таб.ДивизионКод КАК ДивизионКод,
	|	таб.ДивизионКодРодителя КАК ДивизионКодРодителя,
	|	таб.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	таб.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	таб.ИНН КАК ИНН,
	|	таб.Позиция КАК Позиция,
	|	таб.Позицияguid КАК Позицияguid,
	|	таб.ЦФО КАК ЦФО,
	|	таб.guidЦФО КАК guidЦФО,
	|	таб.ДатаУвольнения КАК ДатаУвольнения,
	|	таб.ДатаЗаписиБазыГХБ КАК Период
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.СотрудникТекст КАК СотрудникТекст,
	|	втДанные.guidСотрудник КАК guidСотрудник,
	|	втДанные.ДолжностьТекст КАК ДолжностьТекст,
	|	втДанные.guidДолжность КАК guidДолжность,
	|	втДанные.ПодразделениеОрганизацииТекст КАК ПодразделениеОрганизацииТекст,
	|	втДанные.guidПодразделениеОрганизации КАК guidПодразделениеОрганизации,
	|	втДанные.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	втДанные.ВидЗанятости КАК ВидЗанятости,
	|	втДанные.ОрганизацияТекст КАК ОрганизацияТекст,
	|	втДанные.guidОрганизации КАК guidОрганизации,
	|	втДанные.ДивизионКод КАК ДивизионКод,
	|	втДанные.ДивизионКодРодителя КАК ДивизионКодРодителя,
	|	втДанные.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втДанные.Позиция КАК Позиция,
	|	втДанные.Позицияguid КАК Позицияguid,
	|	втДанные.Период КАК Период,
	|	гхб_ДолжностиОрганизацийБазХолдинга.Ссылка КАК ДолжностьСсылка,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК ОрганизацияСсылка,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.Ссылка КАК ПодразделениеСсылка,
	|	гхб_СотрудникиБазХолдинга.Ссылка КАК СотрудникСсылка,
	|	втДанные.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	втДанные.ДатаУвольнения КАК ДатаУвольнения,
	|	гхб_ЦФО.Ссылка КАК ЦФОСсылка,
	|	втДанные.ЦФО КАК ЦФОТекст
	|ПОМЕСТИТЬ втСводная
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_СотрудникиБазХолдинга КАК гхб_СотрудникиБазХолдинга
	|		ПО втДанные.guidСотрудник = гхб_СотрудникиБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_СотрудникиБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдинга
	|		ПО втДанные.guidПодразделениеОрганизации = гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.guidОрганизации = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ДолжностиОрганизацийБазХолдинга КАК гхб_ДолжностиОрганизацийБазХолдинга
	|		ПО втДанные.guidДолжность = гхб_ДолжностиОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ДолжностиОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ЦФО КАК гхб_ЦФО
	|		ПО втДанные.guidЦФО = гхб_ЦФО.GUIDБазыХолдинга
	|			И (гхб_ЦФО.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСводная.Период КАК Период,
	|	втСводная.ДолжностьСсылка КАК Должность,
	|	втСводная.ОрганизацияСсылка КАК Организация,
	|	втСводная.ПодразделениеСсылка КАК ПодразделениеОрганизации,
	|	втСводная.СотрудникСсылка КАК Сотрудник,
	|	гхб_Дивизионы.Ссылка КАК ГруппаДивизиона,
	|	гхб_ДивизионыРодители.Ссылка КАК Дивизион,
	|	втСводная.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втСводная.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.Ссылка КАК ПозицияШтатногоРасписания,
	|	втСводная.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	втСводная.ДатаУвольнения КАК ДатаУвольнения,
	|	втСводная.ДивизионКод КАК ДивизионКод,
	|	втСводная.ДивизионКодРодителя КАК ДивизионКодРодителя,
	|	ВЫБОР
	|		КОГДА втСводная.ДолжностьСсылка <> гхб_РаботникиОрганизацийБазХолдинга.Должность
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаДолжность,
	|	ВЫБОР
	|		КОГДА втСводная.ПодразделениеСсылка <> гхб_РаботникиОрганизацийБазХолдинга.ПодразделениеОрганизации
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаПодразделение,
	|	ВЫБОР
	|		КОГДА гхб_РаботникиОрганизацийБазХолдинга.ПричинаИзмененияСостояния <> втСводная.ПричинаИзмененияСостояния
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаПричинаИзмененияСостояния,
	|	ВЫБОР
	|		КОГДА гхб_РаботникиОрганизацийБазХолдинга.ПозицияШтатногоРасписания <> гхб_ПозицииШтатногоРасписанияБазХолдинга.Ссылка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаПозиция,
	|	ВЫБОР
	|		КОГДА гхб_РаботникиОрганизацийБазХолдинга.Дивизион <> гхб_ДивизионыРодители.Ссылка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаДивизион,
	|	ВЫБОР
	|		КОГДА гхб_РаботникиОрганизацийБазХолдинга.БюджетныйКодПозиции <> втСводная.БюджетныйКодПозиции
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаБюджетныйКодПозиции,
	|	ВЫБОР
	|		КОГДА гхб_РаботникиОрганизацийБазХолдинга.ГруппаДивизиона <> гхб_Дивизионы.Ссылка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаГруппаДивизиона,
	|	ВЫБОР
	|		КОГДА втСводная.ДатаОкончанияСрочногоТрудовогоДоговора <> гхб_РаботникиОрганизацийБазХолдинга.ДатаОкончанияСрочногоТрудовогоДоговора
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаДатаОкончанияСрочногоТрудовогоДоговора,
	|	ВЫБОР
	|		КОГДА втСводная.ДатаУвольнения <> гхб_РаботникиОрганизацийБазХолдинга.ДатаУвольнения
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаДатаУвольнения,
	|	гхб_РаботникиОрганизацийБазХолдинга.Организация КАК ОрганизацияРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.Сотрудник КАК СотрудникРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостоянияРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.Должность КАК ДолжностьРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.ПодразделениеОрганизации КАК ПодразделениеОрганизацииРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.ПозицияШтатногоРасписания КАК ПозицияШтатногоРасписанияРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговораРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.Дивизион КАК ДивизионРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.БюджетныйКодПозиции КАК БюджетныйКодПозицииРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.ГруппаДивизиона КАК ГруппаДивизионаРС,
	|	гхб_РаботникиОрганизацийБазХолдинга.ДатаУвольнения КАК ДатаУвольненияРС,
	|	ВЫБОР
	|		КОГДА втСводная.ЦФОСсылка <> гхб_РаботникиОрганизацийБазХолдинга.ЦФО
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДельтаЦФО,
	|	втСводная.ЦФОСсылка КАК ЦФО
	|ПОМЕСТИТЬ втНестыковки
	|ИЗ
	|	втСводная КАК втСводная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.гхб_РаботникиОрганизацийБазХолдинга КАК гхб_РаботникиОрганизацийБазХолдинга
	|		ПО втСводная.Период = гхб_РаботникиОрганизацийБазХолдинга.Период
	|			И втСводная.СотрудникСсылка = гхб_РаботникиОрганизацийБазХолдинга.Сотрудник
	|			И втСводная.ОрганизацияСсылка = гхб_РаботникиОрганизацийБазХолдинга.Организация
	|			И (гхб_РаботникиОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_Дивизионы КАК гхб_Дивизионы
	|		ПО втСводная.ДивизионКод = гхб_Дивизионы.Код
	|			И втСводная.ДивизионКодРодителя = гхб_Дивизионы.Родитель.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_Дивизионы КАК гхб_ДивизионыРодители
	|		ПО втСводная.ДивизионКодРодителя = гхб_ДивизионыРодители.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ПозицииШтатногоРасписанияБазХолдинга КАК гхб_ПозицииШтатногоРасписанияБазХолдинга
	|		ПО (ВЫБОР
	|				КОГДА втСводная.Позицияguid = """"
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ втСводная.Позицияguid = гхб_ПозицииШтатногоРасписанияБазХолдинга.GUIDБазыХолдинга
	|			КОНЕЦ)
	|			И (гхб_ПозицииШтатногоРасписанияБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНестыковки.Период КАК Период,
	|	втНестыковки.Должность КАК Должность,
	|	втНестыковки.Организация КАК Организация,
	|	втНестыковки.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	втНестыковки.Сотрудник КАК Сотрудник,
	|	втНестыковки.ГруппаДивизиона КАК ГруппаДивизиона,
	|	втНестыковки.Дивизион КАК Дивизион,
	|	втНестыковки.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втНестыковки.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	втНестыковки.ПозицияШтатногоРасписания КАК ПозицияШтатногоРасписания,
	|	втНестыковки.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	втНестыковки.ДатаУвольнения КАК ДатаУвольнения,
	|	втНестыковки.ДивизионКод КАК ДивизионКод,
	|	втНестыковки.ДивизионКодРодителя КАК ДивизионКодРодителя,
	|	втНестыковки.дельтаДолжность КАК дельтаДолжность,
	|	втНестыковки.дельтаПодразделение КАК дельтаПодразделение,
	|	втНестыковки.дельтаПричинаИзмененияСостояния КАК дельтаПричинаИзмененияСостояния,
	|	втНестыковки.дельтаПозиция КАК дельтаПозиция,
	|	втНестыковки.дельтаДивизион КАК дельтаДивизион,
	|	втНестыковки.дельтаБюджетныйКодПозиции КАК дельтаБюджетныйКодПозиции,
	|	втНестыковки.дельтаГруппаДивизиона КАК дельтаГруппаДивизиона,
	|	втНестыковки.дельтаДатаОкончанияСрочногоТрудовогоДоговора КАК дельтаДатаОкончанияСрочногоТрудовогоДоговора,
	|	втНестыковки.дельтаДатаУвольнения КАК дельтаДатаУвольнения,
	|	втНестыковки.ОрганизацияРС КАК ОрганизацияРС,
	|	втНестыковки.СотрудникРС КАК СотрудникРС,
	|	втНестыковки.ПричинаИзмененияСостоянияРС КАК ПричинаИзмененияСостоянияРС,
	|	втНестыковки.ДолжностьРС КАК ДолжностьРС,
	|	втНестыковки.ПодразделениеОрганизацииРС КАК ПодразделениеОрганизацииРС,
	|	втНестыковки.ПозицияШтатногоРасписанияРС КАК ПозицияШтатногоРасписанияРС,
	|	втНестыковки.ДатаОкончанияСрочногоТрудовогоДоговораРС КАК ДатаОкончанияСрочногоТрудовогоДоговораРС,
	|	втНестыковки.ДивизионРС КАК ДивизионРС,
	|	втНестыковки.БюджетныйКодПозицииРС КАК БюджетныйКодПозицииРС,
	|	втНестыковки.ГруппаДивизионаРС КАК ГруппаДивизионаРС,
	|	втНестыковки.ДатаУвольненияРС КАК ДатаУвольненияРС,
	|	втНестыковки.ЦФО КАК ЦФО,
	|	втНестыковки.ДельтаЦФО КАК ДельтаЦФО
	|ИЗ
	|	втНестыковки КАК втНестыковки
	|ГДЕ
	|	(втНестыковки.дельтаДолжность
	|			ИЛИ втНестыковки.дельтаПодразделение
	|			ИЛИ втНестыковки.дельтаПричинаИзмененияСостояния
	|			ИЛИ втНестыковки.дельтаПозиция
	|			ИЛИ втНестыковки.дельтаДивизион
	|			ИЛИ втНестыковки.дельтаБюджетныйКодПозиции
	|			ИЛИ втНестыковки.дельтаГруппаДивизиона
	|			ИЛИ втНестыковки.дельтаДатаОкончанияСрочногоТрудовогоДоговора
	|			ИЛИ втНестыковки.дельтаДатаУвольнения
	|			ИЛИ втНестыковки.ДельтаЦФО)";

	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", Параметры.БазаХолдинга);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеРедактирование.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		Если новСтр.ПричинаИзмененияСостояния = Перечисления.гхб_ПричиныИзмененияСостояния.Увольнение Тогда
			новСтр.ДатаУвольнения = НачалоДня(новСтр.Период) - 1
		КонецЕсли;
		
		Отличия = "";
		
		Если Выборка.дельтаДолжность Тогда
			Отличия = Отличия + "Должность" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаПодразделение Тогда
			Отличия = Отличия + "Подразделение" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаПричинаИзмененияСостояния Тогда
			Отличия = Отличия + "Причина Изменения Состояния" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаПозиция Тогда
			Отличия = Отличия + "Позиция" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаДивизион Тогда
			Отличия = Отличия + "Дивизион" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаБюджетныйКодПозиции Тогда
			Отличия = Отличия + "Бюджетный код позиции" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаГруппаДивизиона Тогда
			Отличия = Отличия + "Группа дивизиона" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаДатаОкончанияСрочногоТрудовогоДоговора Тогда
			Отличия = Отличия + "Дата окончания договора" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаДатаУвольнения Тогда
			Отличия = Отличия + "Дата увольнения" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаЦФО Тогда
			Отличия = Отличия + "ЦФО";
		КонецЕсли;
		
		новСтр.Отличия = Отличия;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеДляРедактирования()

&НаСервере
Процедура ЗаполнитьДанныеДляУдаления()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	таб.Сотрудник КАК СотрудникТекст,
	|	таб.guidСотрудник КАК guidСотрудник,
	|	таб.Должность КАК ДолжностьТекст,
	|	таб.guidДолжность КАК guidДолжность,
	|	таб.ПодразделениеОрганизации КАК ПодразделениеОрганизацииТекст,
	|	таб.guidПодразделениеОрганизации КАК guidПодразделениеОрганизации,
	|	таб.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	таб.ВидЗанятости КАК ВидЗанятости,
	|	таб.Организация КАК ОрганизацияТекст,
	|	таб.guidОрганизации КАК guidОрганизации,
	|	таб.ДивизионКод КАК ДивизионКод,
	|	таб.ДивизионКодРодителя КАК ДивизионКодРодителя,
	|	таб.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	таб.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	таб.ИНН КАК ИНН,
	|	таб.Позиция КАК Позиция,
	|	таб.Позицияguid КАК Позицияguid,
	|	таб.ДатаУвольнения КАК ДатаУвольнения,
	|	таб.ДатаЗаписиБазыГХБ КАК Период
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.СотрудникТекст КАК СотрудникТекст,
	|	втДанные.guidСотрудник КАК guidСотрудник,
	|	втДанные.ДолжностьТекст КАК ДолжностьТекст,
	|	втДанные.guidДолжность КАК guidДолжность,
	|	втДанные.ПодразделениеОрганизацииТекст КАК ПодразделениеОрганизацииТекст,
	|	втДанные.guidПодразделениеОрганизации КАК guidПодразделениеОрганизации,
	|	втДанные.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	втДанные.ВидЗанятости КАК ВидЗанятости,
	|	втДанные.ОрганизацияТекст КАК ОрганизацияТекст,
	|	втДанные.guidОрганизации КАК guidОрганизации,
	|	втДанные.ДивизионКод КАК ДивизионКод,
	|	втДанные.ДивизионКодРодителя КАК ДивизионКодРодителя,
	|	втДанные.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втДанные.Позиция КАК Позиция,
	|	втДанные.Позицияguid КАК Позицияguid,
	|	втДанные.Период КАК Период,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК ОрганизацияСсылка,
	|	гхб_СотрудникиБазХолдинга.Ссылка КАК СотрудникСсылка,
	|	втДанные.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	втДанные.ДатаУвольнения КАК ДатаУвольнения
	|ПОМЕСТИТЬ втСводная
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_СотрудникиБазХолдинга КАК гхб_СотрудникиБазХолдинга
	|		ПО втДанные.guidСотрудник = гхб_СотрудникиБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_СотрудникиБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.guidОрганизации = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	гхб_РаботникиОрганизацийБазХолдинга.Организация КАК Организация,
	|	гхб_РаботникиОрганизацийБазХолдинга.Сотрудник КАК Сотрудник,
	|	гхб_РаботникиОрганизацийБазХолдинга.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	гхб_РаботникиОрганизацийБазХолдинга.Должность КАК Должность,
	|	гхб_РаботникиОрганизацийБазХолдинга.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	гхб_РаботникиОрганизацийБазХолдинга.ПозицияШтатногоРасписания КАК ПозицияШтатногоРасписания,
	|	гхб_РаботникиОрганизацийБазХолдинга.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	гхб_РаботникиОрганизацийБазХолдинга.Дивизион КАК Дивизион,
	|	гхб_РаботникиОрганизацийБазХолдинга.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	гхб_РаботникиОрганизацийБазХолдинга.ГруппаДивизиона КАК ГруппаДивизиона,
	|	гхб_РаботникиОрганизацийБазХолдинга.ДатаУвольнения КАК ДатаУвольнения,
	|	гхб_РаботникиОрганизацийБазХолдинга.Период КАК Период,
	|	гхб_РаботникиОрганизацийБазХолдинга.ЦФО КАК ЦФО
	|ИЗ
	|	РегистрСведений.гхб_РаботникиОрганизацийБазХолдинга КАК гхб_РаботникиОрганизацийБазХолдинга
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСводная КАК втСводная
	|		ПО гхб_РаботникиОрганизацийБазХолдинга.Период = втСводная.Период
	|			И гхб_РаботникиОрганизацийБазХолдинга.Организация = втСводная.ОрганизацияСсылка
	|			И гхб_РаботникиОрганизацийБазХолдинга.Сотрудник = втСводная.СотрудникСсылка
	|ГДЕ
	|	втСводная.Период ЕСТЬ NULL
	|	И гхб_РаботникиОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга";
	
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", Параметры.БазаХолдинга);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеУдаление.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		Если новСтр.ПричинаИзмененияСостояния = Перечисления.гхб_ПричиныИзмененияСостояния.Увольнение Тогда
			новСтр.ДатаУвольнения = НачалоДня(новСтр.Период) - 1
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьДанныеДляУдаления()

#КонецОбласти
