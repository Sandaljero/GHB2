
#Область СобытияФормыЭлементовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БазаХолдингаСсылка = Параметры.БазаХолдинга;
	ЗаполнитьДанныеДляСоздания();
	ЗаполнитьДанныеДляРедактирования();
	ЗаполнитьДанныеДляУдаления();
	ЗаполнитьНовыеПозиции();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеУдалениеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеУдалениеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НовыеПозицииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НовыеПозицииПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура УстановитьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаписи(Команда)
	СоздатьЗаписьШтатноеРасписание();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЗаписи(Команда)
	РедактироватьЗаписиШтатноеРасписание();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаписи(Команда)
	УдалитьЗаписиШтатноеРасписание();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиНовыеПозиции(Команда)
	
	Для каждого СтрокаДанные Из НовыеПозиции Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиНовыеПозиции(Команда)
	
	Для каждого СтрокаДанные Из НовыеПозиции Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПозиции(Команда)
	
	мНайденное = НовыеПозиции.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
		
		Если СтрокаДанные.Обработано Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДанные.Обработано = СоздатьПозициюШтатногоРасписания(СтрокаДанные.Позиция, СтрокаДанные.Позицияguid);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура СоздатьЗаписьШтатноеРасписание()
	
	мНайденное = ДанныеНовые.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Обработано Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаДанные.Период) 
			Или Не ЗначениеЗаполнено(СтрокаДанные.Организация) 
			Или Не ЗначениеЗаполнено(СтрокаДанные.ПодразделениеОрганизации)
			Или Не ЗначениеЗаполнено(СтрокаДанные.Позиция)
			Или Не ЗначениеЗаполнено(БазаХолдингаСсылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Запись = РегистрыСведений.гхб_ШтатноеРасписаниеБазХолдинга.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, СтрокаДанные);
		Запись.БазаХолдинга = БазаХолдингаСсылка;
		Запись.Записать();
		СтрокаДанные.Обработано = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РедактироватьЗаписиШтатноеРасписание()
	
	мНайденное = ДанныеРедактирование.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Обработано Тогда
			Продолжить;
		КонецЕсли;
		
		Набор = РегистрыСведений.гхб_ШтатноеРасписаниеБазХолдинга.СоздатьНаборЗаписей();
		Набор.Отбор.Период.Установить(СтрокаДанные.Период);
		Набор.Отбор.БазаХолдинга.Установить(БазаХолдингаСсылка);
		Набор.Отбор.Организация.Установить(СтрокаДанные.Организация);
		Набор.Отбор.ПодразделениеОрганизации.Установить(СтрокаДанные.ПодразделениеОрганизации);
		Набор.Отбор.Позиция.Установить(СтрокаДанные.Позиция);
		
		Набор.Прочитать();
		ЗаписатьНабор = Ложь;
		
		Если Набор.Количество() = 1 Тогда
			
			Если Набор[0].КоличествоСтавок <> СтрокаДанные.КоличествоСтавок Тогда
				
				Набор[0].КоличествоСтавок = СтрокаДанные.КоличествоСтавок;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].КритичнаяПозиция <> СтрокаДанные.КритичнаяПозиция Тогда
				
				Набор[0].КритичнаяПозиция = СтрокаДанные.КритичнаяПозиция;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].БюджетныйКодПозиции <> СтрокаДанные.БюджетныйКодПозиции Тогда
				
				Набор[0].БюджетныйКодПозиции = СтрокаДанные.БюджетныйКодПозиции;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].БюджетныйКодПозицииРуководителя <> СтрокаДанные.БюджетныйКодПозицииРуководителя Тогда
				
				Набор[0].БюджетныйКодПозицииРуководителя = СтрокаДанные.БюджетныйКодПозицииРуководителя;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].УровеньДолжности <> СтрокаДанные.УровеньДолжности Тогда
				
				Набор[0].УровеньДолжности = СтрокаДанные.УровеньДолжности;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если Набор[0].ПризнакПозиции <> СтрокаДанные.ПризнакПозиции Тогда
				
				Набор[0].ПризнакПозиции = СтрокаДанные.ПризнакПозиции;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если ЗаписатьНабор Тогда
			
				Набор.Записать();
				СтрокаДанные.Обработано = Истина;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // РедактироватьЗаписиШтатноеРасписание()

&НаСервере
Процедура УдалитьЗаписиШтатноеРасписание()
	
	мНайденное = ДанныеУдаление.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Обработано Тогда
			Продолжить;
		КонецЕсли;
		
		Набор = РегистрыСведений.гхб_ШтатноеРасписаниеБазХолдинга.СоздатьНаборЗаписей();
		Набор.Отбор.Период.Установить(СтрокаДанные.Период);
		Набор.Отбор.БазаХолдинга.Установить(БазаХолдингаСсылка);
		Набор.Отбор.Организация.Установить(СтрокаДанные.Организация);
		Набор.Отбор.ПодразделениеОрганизации.Установить(СтрокаДанные.ПодразделениеОрганизации);
		Набор.Отбор.Позиция.Установить(СтрокаДанные.Позиция);
		
		Набор.Прочитать();
			
		Если Набор.Количество() = 1 Тогда
			
			Набор.Очистить();
			Попытка
				
				Набор.Записать();
				СтрокаДанные.Обработано = Истина;
				
			Исключение
				ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДляСоздания()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаНетДанныхГХБШтатноеРасписание();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеНовые.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеДляСоздания()

&НаСервере
Процедура ЗаполнитьДанныеДляРедактирования()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаРазличиеДанныхШтатноеРасписание();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Отличия = "";
		
		Если Выборка.дельтаКритическаяПозиция Тогда
			Отличия = Отличия + "Критическая позиция" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаКоличествоСтавок Тогда
			Отличия = Отличия + " Количество ставок" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаБК Тогда
			Отличия = Отличия + "Бюджетный код" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаБКР Тогда
			Отличия = Отличия + "Бюджетный код руководителя" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаУровеньДолжности Тогда
			Отличия = Отличия + "Уровень должности" + Символы.ПС;
		КонецЕсли;
		Если Выборка.дельтаПризнакПозиции Тогда
			Отличия = Отличия + "Признак позиции";
		КонецЕсли;
		
		новСтр = ДанныеРедактирование.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		новСтр.Отличия = Отличия;
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьДанныеДляРедактирования()

&НаСервере
Процедура ЗаполнитьДанныеДляУдаления()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаНетДанныхРИБШтатноеРасписание();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеУдаление.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеДляУдаления()

&НаСервере
Функция ПолучитьТекстЗапросаРазличиеДанныхШтатноеРасписание()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Период КАК Период,
	|	таб.Организация КАК Организация,
	|	таб.Организацияguid КАК Организацияguid,
	|	таб.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	таб.ПодразделениеОрганизацииguid КАК ПодразделениеОрганизацииguid,
	|	таб.Позиция КАК Позиция,
	|	таб.Позицияguid КАК Позицияguid,
	|	таб.КоличествоСтавок КАК КоличествоСтавок,
	|	таб.КритичнаяПозиция КАК КритичнаяПозиция,
	|	таб.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	таб.БюджетныйКодПозицииРуководителя КАК БюджетныйКодПозицииРуководителя,
	|	таб.УровеньДолжности КАК УровеньДолжности,
	|	таб.ПризнакПозиции КАК ПризнакПозиции
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Период КАК Период,
	|	втДанные.Организация КАК Организация,
	|	втДанные.Организацияguid КАК Организацияguid,
	|	втДанные.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	втДанные.ПодразделениеОрганизацииguid КАК ПодразделениеОрганизацииguid,
	|	втДанные.Позиция КАК Позиция,
	|	втДанные.Позицияguid КАК Позицияguid,
	|	втДанные.КоличествоСтавок КАК КоличествоСтавок,
	|	втДанные.КритичнаяПозиция КАК КритичнаяПозиция,
	|	втДанные.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втДанные.БюджетныйКодПозицииРуководителя КАК БюджетныйКодПозицииРуководителя,
	|	втДанные.УровеньДолжности КАК УровеньДолжности,
	|	втДанные.ПризнакПозиции КАК ПризнакПозиции,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК ОрганизацияСсылка,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.Ссылка КАК ПодразделениеСсылка,
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.Ссылка КАК ПозицияСсылка,
	|	гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга КАК ОрганизацияguidБХ,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга КАК ПодразделениеОрганизацииguidБХ,
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.GUIDБазыХолдинга КАК ПозицияguidБХ
	|ПОМЕСТИТЬ втКрайняя
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.Организацияguid = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдинга
	|		ПО втДанные.ПодразделениеОрганизацииguid = гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ПозицииШтатногоРасписанияБазХолдинга КАК гхб_ПозицииШтатногоРасписанияБазХолдинга
	|		ПО втДанные.Позицияguid = гхб_ПозицииШтатногоРасписанияБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПозицииШтатногоРасписанияБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКрайняя.Период КАК Период,
	|	втКрайняя.КоличествоСтавок КАК КоличествоСтавок,
	|	втКрайняя.КритичнаяПозиция КАК КритичнаяПозиция,
	|	втКрайняя.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втКрайняя.БюджетныйКодПозицииРуководителя КАК БюджетныйКодПозицииРуководителя,
	|	втКрайняя.УровеньДолжности КАК УровеньДолжности,
	|	втКрайняя.ПризнакПозиции КАК ПризнакПозиции,
	|	втКрайняя.ОрганизацияСсылка КАК Организация,
	|	втКрайняя.ПодразделениеСсылка КАК ПодразделениеОрганизации,
	|	втКрайняя.ПозицияСсылка КАК Позиция,
	|	ВЫБОР
	|		КОГДА гхб_ШтатноеРасписаниеБазХолдинга.КритичнаяПозиция <> втКрайняя.КритичнаяПозиция
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаКритическаяПозиция,
	|	ВЫБОР
	|		КОГДА гхб_ШтатноеРасписаниеБазХолдинга.КоличествоСтавок <> втКрайняя.КоличествоСтавок
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаКоличествоСтавок,
	|	ВЫБОР
	|		КОГДА втКрайняя.БюджетныйКодПозиции <> гхб_ШтатноеРасписаниеБазХолдинга.БюджетныйКодПозиции
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаБК,
	|	ВЫБОР
	|		КОГДА гхб_ШтатноеРасписаниеБазХолдинга.БюджетныйКодПозицииРуководителя <> втКрайняя.БюджетныйКодПозицииРуководителя
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаБКР,
	|	ВЫБОР
	|		КОГДА гхб_ШтатноеРасписаниеБазХолдинга.УровеньДолжности <> втКрайняя.УровеньДолжности
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаУровеньДолжности,
	|	ВЫБОР
	|		КОГДА гхб_ШтатноеРасписаниеБазХолдинга.ПризнакПозиции <> втКрайняя.ПризнакПозиции
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК дельтаПризнакПозиции
	|ИЗ
	|	втКрайняя КАК втКрайняя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.гхб_ШтатноеРасписаниеБазХолдинга КАК гхб_ШтатноеРасписаниеБазХолдинга
	|		ПО втКрайняя.Период = гхб_ШтатноеРасписаниеБазХолдинга.Период
	|			И втКрайняя.ОрганизацияСсылка = гхб_ШтатноеРасписаниеБазХолдинга.Организация
	|			И втКрайняя.ПодразделениеСсылка = гхб_ШтатноеРасписаниеБазХолдинга.ПодразделениеОрганизации
	|			И втКрайняя.ПозицияСсылка = гхб_ШтатноеРасписаниеБазХолдинга.Позиция
	|			И (гхб_ШтатноеРасписаниеБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	(гхб_ШтатноеРасписаниеБазХолдинга.КритичнаяПозиция <> втКрайняя.КритичнаяПозиция
	|			ИЛИ гхб_ШтатноеРасписаниеБазХолдинга.КоличествоСтавок <> втКрайняя.КоличествоСтавок
	|			ИЛИ втКрайняя.БюджетныйКодПозиции <> гхб_ШтатноеРасписаниеБазХолдинга.БюджетныйКодПозиции
	|			ИЛИ гхб_ШтатноеРасписаниеБазХолдинга.БюджетныйКодПозицииРуководителя <> втКрайняя.БюджетныйКодПозицииРуководителя
	|			ИЛИ гхб_ШтатноеРасписаниеБазХолдинга.УровеньДолжности <> втКрайняя.УровеньДолжности
	|			ИЛИ гхб_ШтатноеРасписаниеБазХолдинга.ПризнакПозиции <> втКрайняя.ПризнакПозиции)";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаНетДанныхГХБШтатноеРасписание()

&НаСервере
Функция ПолучитьТекстЗапросаНетДанныхГХБШтатноеРасписание()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Период КАК Период,
	|	таб.Организация КАК Организация,
	|	таб.Организацияguid КАК Организацияguid,
	|	таб.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	таб.ПодразделениеОрганизацииguid КАК ПодразделениеОрганизацииguid,
	|	таб.Позиция КАК Позиция,
	|	таб.Позицияguid КАК Позицияguid,
	|	таб.КоличествоСтавок КАК КоличествоСтавок,
	|	таб.КритичнаяПозиция КАК КритичнаяПозиция,
	|	таб.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	таб.БюджетныйКодПозицииРуководителя КАК БюджетныйКодПозицииРуководителя,
	|	таб.УровеньДолжности КАК УровеньДолжности,
	|	таб.ПризнакПозиции КАК ПризнакПозиции
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Период КАК Период,
	|	втДанные.Организация КАК Организация,
	|	втДанные.Организацияguid КАК Организацияguid,
	|	втДанные.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	втДанные.ПодразделениеОрганизацииguid КАК ПодразделениеОрганизацииguid,
	|	втДанные.Позиция КАК Позиция,
	|	втДанные.Позицияguid КАК Позицияguid,
	|	втДанные.КоличествоСтавок КАК КоличествоСтавок,
	|	втДанные.КритичнаяПозиция КАК КритичнаяПозиция,
	|	втДанные.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втДанные.БюджетныйКодПозицииРуководителя КАК БюджетныйКодПозицииРуководителя,
	|	втДанные.УровеньДолжности КАК УровеньДолжности,
	|	втДанные.ПризнакПозиции КАК ПризнакПозиции,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК ОрганизацияСсылка,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.Ссылка КАК ПодразделениеСсылка,
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.Ссылка КАК ПозицияСсылка,
	|	гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга КАК ОрганизацияguidБХ,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга КАК ПодразделениеОрганизацииguidБХ,
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.GUIDБазыХолдинга КАК ПозицияguidБХ
	|ПОМЕСТИТЬ втКрайняя
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.Организацияguid = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдинга
	|		ПО втДанные.ПодразделениеОрганизацииguid = гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ПозицииШтатногоРасписанияБазХолдинга КАК гхб_ПозицииШтатногоРасписанияБазХолдинга
	|		ПО втДанные.Позицияguid = гхб_ПозицииШтатногоРасписанияБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПозицииШтатногоРасписанияБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКрайняя.Период КАК Период,
	|	втКрайняя.КоличествоСтавок КАК КоличествоСтавок,
	|	втКрайняя.КритичнаяПозиция КАК КритичнаяПозиция,
	|	втКрайняя.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втКрайняя.БюджетныйКодПозицииРуководителя КАК БюджетныйКодПозицииРуководителя,
	|	втКрайняя.УровеньДолжности КАК УровеньДолжности,
	|	втКрайняя.ПризнакПозиции КАК ПризнакПозиции,
	|	втКрайняя.ОрганизацияСсылка КАК Организация,
	|	втКрайняя.ПодразделениеСсылка КАК ПодразделениеОрганизации,
	|	втКрайняя.ПозицияСсылка КАК Позиция
	|ИЗ
	|	втКрайняя КАК втКрайняя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гхб_ШтатноеРасписаниеБазХолдинга КАК гхб_ШтатноеРасписаниеБазХолдинга
	|		ПО втКрайняя.Период = гхб_ШтатноеРасписаниеБазХолдинга.Период
	|			И втКрайняя.ОрганизацияСсылка = гхб_ШтатноеРасписаниеБазХолдинга.Организация
	|			И втКрайняя.ПодразделениеСсылка = гхб_ШтатноеРасписаниеБазХолдинга.ПодразделениеОрганизации
	|			И втКрайняя.ПозицияСсылка = гхб_ШтатноеРасписаниеБазХолдинга.Позиция
	|			И (гхб_ШтатноеРасписаниеБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	гхб_ШтатноеРасписаниеБазХолдинга.Период ЕСТЬ NULL";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаРазличиеДанныхШтатноеРасписание()

&НаСервере
Функция ПолучитьТекстЗапросаНетДанныхРИБШтатноеРасписание()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Период КАК Период,
	|	таб.Организация КАК Организация,
	|	таб.Организацияguid КАК Организацияguid,
	|	таб.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	таб.ПодразделениеОрганизацииguid КАК ПодразделениеОрганизацииguid,
	|	таб.Позиция КАК Позиция,
	|	таб.Позицияguid КАК Позицияguid,
	|	таб.КоличествоСтавок КАК КоличествоСтавок,
	|	таб.КритичнаяПозиция КАК КритичнаяПозиция,
	|	таб.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	таб.БюджетныйКодПозицииРуководителя КАК БюджетныйКодПозицииРуководителя,
	|	таб.УровеньДолжности КАК УровеньДолжности,
	|	таб.ПризнакПозиции КАК ПризнакПозиции
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Период КАК Период,
	|	втДанные.Организация КАК Организация,
	|	втДанные.Организацияguid КАК Организацияguid,
	|	втДанные.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	втДанные.ПодразделениеОрганизацииguid КАК ПодразделениеОрганизацииguid,
	|	втДанные.Позиция КАК Позиция,
	|	втДанные.Позицияguid КАК Позицияguid,
	|	втДанные.КоличествоСтавок КАК КоличествоСтавок,
	|	втДанные.КритичнаяПозиция КАК КритичнаяПозиция,
	|	втДанные.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	втДанные.БюджетныйКодПозицииРуководителя КАК БюджетныйКодПозицииРуководителя,
	|	втДанные.УровеньДолжности КАК УровеньДолжности,
	|	втДанные.ПризнакПозиции КАК ПризнакПозиции,
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК ОрганизацияСсылка,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.Ссылка КАК ПодразделениеСсылка,
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.Ссылка КАК ПозицияСсылка,
	|	гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга КАК ОрганизацияguidБХ,
	|	гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга КАК ПодразделениеОрганизацииguidБХ,
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.GUIDБазыХолдинга КАК ПозицияguidБХ
	|ПОМЕСТИТЬ втКрайняя
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|		ПО втДанные.Организацияguid = гхб_ОрганизацииБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ПодразделенияОрганизацийБазХолдинга КАК гхб_ПодразделенияОрганизацийБазХолдинга
	|		ПО втДанные.ПодразделениеОрганизацииguid = гхб_ПодразделенияОрганизацийБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПодразделенияОрганизацийБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ПозицииШтатногоРасписанияБазХолдинга КАК гхб_ПозицииШтатногоРасписанияБазХолдинга
	|		ПО втДанные.Позицияguid = гхб_ПозицииШтатногоРасписанияБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ПозицииШтатногоРасписанияБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	гхб_ШтатноеРасписаниеБазХолдинга.Период КАК Период,
	|	гхб_ШтатноеРасписаниеБазХолдинга.Организация КАК Организация,
	|	гхб_ШтатноеРасписаниеБазХолдинга.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	гхб_ШтатноеРасписаниеБазХолдинга.Позиция КАК Позиция,
	|	гхб_ШтатноеРасписаниеБазХолдинга.КоличествоСтавок КАК КоличествоСтавок,
	|	гхб_ШтатноеРасписаниеБазХолдинга.КритичнаяПозиция КАК КритичнаяПозиция,
	|	гхб_ШтатноеРасписаниеБазХолдинга.БюджетныйКодПозиции КАК БюджетныйКодПозиции,
	|	гхб_ШтатноеРасписаниеБазХолдинга.БюджетныйКодПозицииРуководителя КАК БюджетныйКодПозицииРуководителя,
	|	гхб_ШтатноеРасписаниеБазХолдинга.УровеньДолжности КАК УровеньДолжности,
	|	гхб_ШтатноеРасписаниеБазХолдинга.ПризнакПозиции КАК ПризнакПозиции
	|ИЗ
	|	втКрайняя КАК втКрайняя
	|		ПРАВОЕ СОЕДИНЕНИЕ РегистрСведений.гхб_ШтатноеРасписаниеБазХолдинга КАК гхб_ШтатноеРасписаниеБазХолдинга
	|		ПО втКрайняя.Период = гхб_ШтатноеРасписаниеБазХолдинга.Период
	|			И втКрайняя.ОрганизацияСсылка = гхб_ШтатноеРасписаниеБазХолдинга.Организация
	|			И втКрайняя.ПодразделениеСсылка = гхб_ШтатноеРасписаниеБазХолдинга.ПодразделениеОрганизации
	|			И втКрайняя.ПозицияСсылка = гхб_ШтатноеРасписаниеБазХолдинга.Позиция
	|			И (гхб_ШтатноеРасписаниеБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	втКрайняя.Период ЕСТЬ NULL
	|	И гхб_ШтатноеРасписаниеБазХолдинга.БазаХолдинга = &БазаХолдинга";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаНетДанныхРИБШтатноеРасписание()

&НаСервере
Процедура ЗаполнитьНовыеПозиции()
	
	Для каждого СтрокаПозиция Из Параметры.тзПозиции Цикл
	
		новСтр = НовыеПозиции.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, СтрокаПозиция);
	
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьНовыеПозиции()

&НаСервере
Функция СоздатьПозициюШтатногоРасписания(Наименование, guid)
	
	РодительБазаХолдинга = ПроверитьСоздатьГруппуПоПозицииШтатногоРасписанияБазХолдинга();
	
	спрОбъект = Справочники.гхб_ПозицииШтатногоРасписанияБазХолдинга.СоздатьЭлемент();
	спрОбъект.Родитель = РодительБазаХолдинга;
	спрОбъект.Наименование = Наименование;
	спрОбъект.БазаХолдинга = БазаХолдингаСсылка;
	спрОбъект.GUIDБазыХолдинга = guid;
	
	Попытка
		
		спрОбъект.Записать();
		Возврат Истина;
		
	Исключение
		
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
		
	КонецПопытки;

КонецФункции // ПолучитьСоздатьПозициюШтатногоРасписания()

&НаСервере
Функция ПроверитьСоздатьГруппуПоПозицииШтатногоРасписанияБазХолдинга()

	Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БазаХолдингаСсылка, "Наименование");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.гхб_ПозицииШтатногоРасписанияБазХолдинга КАК гхб_ПозицииШтатногоРасписанияБазХолдинга
	|ГДЕ
	|	гхб_ПозицииШтатногоРасписанияБазХолдинга.ЭтоГруппа
	|	И гхб_ПозицииШтатногоРасписанияБазХолдинга.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Попытка
	
		спрОбъект = Справочники.гхб_ПозицииШтатногоРасписанияБазХолдинга.СоздатьГруппу();
		спрОбъект.ДополнительныеСвойства.Вставить("ПометкаПришлаОбменом", Истина);
		спрОбъект.Наименование = Наименование;
		спрОбъект.Записать();
		Возврат спрОбъект.Ссылка;
	
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;

КонецФункции // ПроверитьСоздатьГруппуПоПозицииШтатногоРасписанияБазХолдинга()

#КонецОбласти
