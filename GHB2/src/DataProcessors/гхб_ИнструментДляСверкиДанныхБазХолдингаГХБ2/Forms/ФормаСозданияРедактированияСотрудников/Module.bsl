
#Область ДействияФормыЭлементовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БазаХолдингаСсылка = Параметры.БазаХолдинга;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	таб.Наименование КАК Наименование,
	|	таб.ВидДоговора КАК ВидДоговора,
	|	таб.ВидЗанятости КАК ВидЗанятости,
	|	таб.ФизЛицо КАК ФизЛицо,
	|	таб.ВидДоговораСсылка КАК ВидДоговораСсылка,
	|	таб.ПометкаУдаления КАК ПометкаУдаления,
	|	таб.ВидЗанятостиСсылка КАК ВидЗанятостиСсылка,
	|	таб.guid КАК guid,
	|	таб.ТабельныйНомер КАК ТабельныйНомер,
	|	таб.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	таб.guidФЛ КАК guidФЛ
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Наименование КАК Наименование,
	|	втДанные.ВидДоговора КАК ВидДоговора,
	|	втДанные.ВидЗанятости КАК ВидЗанятости,
	|	втДанные.guid КАК guid,
	|	втДанные.guidФЛ КАК guidФЛ,
	|	гхб_СотрудникиБазХолдинга.Ссылка КАК Сотрудник,
	|	""Не совпадают реквизиты справочников"" КАК Примечание,
	|	втДанные.ПометкаУдаления КАК ПометкаУдаления,
	|	гхб_ФизическиеЛицаБазХолдинга.Ссылка КАК ФизЛицоБазыХолдинга,
	|	втДанные.ВидДоговораСсылка КАК ВидДоговораСсылка,
	|	втДанные.ВидЗанятостиСсылка КАК ВидЗанятостиСсылка,
	|	втДанные.ФизЛицо КАК ФизЛицо,
	|	гхб_СотрудникиБазХолдинга.ВидДоговора КАК ВидДоговораСотрудник,
	|	гхб_СотрудникиБазХолдинга.ВидЗанятости КАК ВидЗанятостиСотрудник,
	|	втДанные.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	гхб_СотрудникиБазХолдинга.ВидСотрудника КАК ВидСотрудника,
	|	втДанные.ТабельныйНомер КАК ТабельныйНомер
	|ПОМЕСТИТЬ втКрайняя
	|ИЗ
	|	втДанные КАК втДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	|		ПО втДанные.guidФЛ = гхб_ФизическиеЛицаБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ФизическиеЛицаБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_СотрудникиБазХолдинга КАК гхб_СотрудникиБазХолдинга
	|		ПО втДанные.guid = гхб_СотрудникиБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_СотрудникиБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	(втДанные.Наименование <> гхб_СотрудникиБазХолдинга.Наименование
	|			ИЛИ гхб_СотрудникиБазХолдинга.ФизЛицоБазыХолдинга <> гхб_ФизическиеЛицаБазХолдинга.Ссылка
	|			ИЛИ гхб_СотрудникиБазХолдинга.ВидДоговора <> втДанные.ВидДоговораСсылка
	|			ИЛИ гхб_СотрудникиБазХолдинга.ВидЗанятости <> втДанные.ВидЗанятостиСсылка
	|			ИЛИ гхб_СотрудникиБазХолдинга.ПометкаУдаления <> втДанные.ПометкаУдаления
	|			ИЛИ гхб_СотрудникиБазХолдинга.ТабельныйНомер <> втДанные.ТабельныйНомер
	|			ИЛИ ВЫБОР
	|				КОГДА гхб_СотрудникиБазХолдинга.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.гхб_ВидыДоговоровСФизЛицами.Подряда)
	|					ТОГДА ВЫБОР
	|							КОГДА гхб_СотрудникиБазХолдинга.ВидСотрудника <> ЗНАЧЕНИЕ(Перечисление.гпх_ВидыСотрудников.ГПХ)
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА втДанные.ДатаОкончанияСрочногоТрудовогоДоговора = ДАТАВРЕМЯ(1, 1, 1)
	|							ТОГДА ВЫБОР
	|									КОГДА гхб_СотрудникиБазХолдинга.ВидСотрудника <> ЗНАЧЕНИЕ(Перечисление.гпх_ВидыСотрудников.БТД)
	|										ТОГДА ИСТИНА
	|									ИНАЧЕ ЛОЖЬ
	|								КОНЕЦ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА гхб_СотрудникиБазХолдинга.ВидСотрудника <> ЗНАЧЕНИЕ(Перечисление.гпх_ВидыСотрудников.СТД)
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ЛОЖЬ
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	втДанные.Наименование,
	|	втДанные.ВидДоговора,
	|	втДанные.ВидЗанятости,
	|	втДанные.guid,
	|	втДанные.guidФЛ,
	|	"""",
	|	""Нет элемента в ГХБ 2"",
	|	втДанные.ПометкаУдаления,
	|	гхб_ФизическиеЛицаБазХолдинга.Ссылка,
	|	втДанные.ВидДоговораСсылка,
	|	втДанные.ВидЗанятостиСсылка,
	|	втДанные.ФизЛицо,
	|	гхб_СотрудникиБазХолдинга.ВидДоговора,
	|	гхб_СотрудникиБазХолдинга.ВидЗанятости,
	|	втДанные.ДатаОкончанияСрочногоТрудовогоДоговора,
	|	гхб_СотрудникиБазХолдинга.ВидСотрудника,
	|	втДанные.ТабельныйНомер
	|ИЗ
	|	втДанные КАК втДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_СотрудникиБазХолдинга КАК гхб_СотрудникиБазХолдинга
	|		ПО втДанные.guid = гхб_СотрудникиБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_СотрудникиБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	|		ПО втДанные.guidФЛ = гхб_ФизическиеЛицаБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ФизическиеЛицаБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	гхб_СотрудникиБазХолдинга.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКрайняя.Наименование КАК Наименование,
	|	втКрайняя.ВидДоговора КАК ВидДоговора,
	|	втКрайняя.ВидЗанятости КАК ВидЗанятости,
	|	втКрайняя.guid КАК guid,
	|	втКрайняя.guidФЛ КАК guidФЛ,
	|	втКрайняя.Сотрудник КАК Сотрудник,
	|	втКрайняя.Примечание КАК Примечание,
	|	втКрайняя.ПометкаУдаления КАК ПометкаУдаления,
	|	втКрайняя.ФизЛицоБазыХолдинга КАК ФизЛицоБазыХолдинга,
	|	втКрайняя.ВидДоговораСсылка КАК ВидДоговораСсылка,
	|	втКрайняя.ВидЗанятостиСсылка КАК ВидЗанятостиСсылка,
	|	втКрайняя.ФизЛицо КАК ФизЛицо,
	|	втКрайняя.ВидДоговораСотрудник КАК ВидДоговораСотрудник,
	|	втКрайняя.ВидЗанятостиСотрудник КАК ВидЗанятостиСотрудник,
	|	втКрайняя.ДатаОкончанияСрочногоТрудовогоДоговора КАК ДатаОкончанияСрочногоТрудовогоДоговора,
	|	ВЫБОР
	|		КОГДА втКрайняя.ВидДоговораСсылка = ЗНАЧЕНИЕ(Перечисление.гхб_ВидыДоговоровСФизЛицами.Подряда)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.гпх_ВидыСотрудников.ГПХ)
	|		КОГДА втКрайняя.ДатаОкончанияСрочногоТрудовогоДоговора <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.гпх_ВидыСотрудников.СТД)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.гпх_ВидыСотрудников.БТД)
	|	КОНЕЦ КАК ВидСотрудника,
	|	втКрайняя.ТабельныйНомер КАК ТабельныйНомер
	|ИЗ
	|	втКрайняя КАК втКрайняя
	|
	|СГРУППИРОВАТЬ ПО
	|	втКрайняя.ВидДоговора,
	|	втКрайняя.ВидЗанятости,
	|	втКрайняя.Сотрудник,
	|	втКрайняя.Наименование,
	|	втКрайняя.guid,
	|	втКрайняя.Примечание,
	|	втКрайняя.guidФЛ,
	|	втКрайняя.ПометкаУдаления,
	|	втКрайняя.ФизЛицоБазыХолдинга,
	|	втКрайняя.ВидДоговораСсылка,
	|	втКрайняя.ВидЗанятостиСсылка,
	|	втКрайняя.ФизЛицо,
	|	втКрайняя.ВидДоговораСотрудник,
	|	втКрайняя.ВидЗанятостиСотрудник,
	|	втКрайняя.ДатаОкончанияСрочногоТрудовогоДоговора,
	|	ВЫБОР
	|		КОГДА втКрайняя.ВидДоговораСсылка = ЗНАЧЕНИЕ(Перечисление.гхб_ВидыДоговоровСФизЛицами.Подряда)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.гпх_ВидыСотрудников.ГПХ)
	|		КОГДА втКрайняя.ДатаОкончанияСрочногоТрудовогоДоговора <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.гпх_ВидыСотрудников.СТД)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.гпх_ВидыСотрудников.БТД)
	|	КОНЕЦ,
	|	втКрайняя.ТабельныйНомер
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", Параметры.БазаХолдинга);
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		новСтр = Данные.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
		Если Выборка.Примечание = "Не совпадают реквизиты справочников" Тогда
			
			ВидСотрудникаРеквизит = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Сотрудник, "ВидСотрудника");
			
			Отличия = "";
			
			Если Выборка.Наименование <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Сотрудник, "Наименование") Тогда
				Отличия = Отличия + "Наименование" + Символы.ПС;
			КонецЕсли;
			Если Выборка.ПометкаУдаления <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Сотрудник, "ПометкаУдаления") Тогда
				Отличия = Отличия + "Пометка удаления" + Символы.ПС;
			КонецЕсли;
			Если Выборка.ФизЛицоБазыХолдинга <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Сотрудник, "ФизЛицоБазыХолдинга") Тогда
				Отличия = Отличия + "ФизЛицо базы холдинга" + Символы.ПС;
			КонецЕсли;
			Если Выборка.ВидДоговораСсылка <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Сотрудник, "ВидДоговора") Тогда
				Отличия = Отличия + "Вид договора " + Символы.ПС;
			КонецЕсли;
			Если Выборка.ВидЗанятостиСсылка <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Сотрудник, "ВидЗанятости") Тогда
				Отличия = Отличия + "Вид занятости" + Символы.ПС;
			КонецЕсли;
			
			Если Выборка.ТабельныйНомер <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Сотрудник, "ТабельныйНомер") Тогда
				Отличия = Отличия + "Табельный номер" + Символы.ПС;
			КонецЕсли;
			
			Если Выборка.ВидДоговораСсылка = Перечисления.гхб_ВидыДоговоровСФизЛицами.Подряда Тогда
			
				Если ВидСотрудникаРеквизит <> Перечисления.гпх_ВидыСотрудников.ГПХ Тогда
					Отличия = Отличия + "Вид сотрудника" + Символы.ПС;
				КонецЕсли;
				
			ИначеЕсли Выборка.ВидДоговораСсылка = Перечисления.гхб_ВидыДоговоровСФизЛицами.ТрудовойДоговор Тогда
				
				Если (ВидСотрудникаРеквизит = Перечисления.гпх_ВидыСотрудников.БТД 
					И ЗначениеЗаполнено(Выборка.ДатаОкончанияСрочногоТрудовогоДоговора))
					Или 
					(ВидСотрудникаРеквизит = Перечисления.гпх_ВидыСотрудников.СТД 
					И Не ЗначениеЗаполнено(Выборка.ДатаОкончанияСрочногоТрудовогоДоговора))
					Тогда
					Отличия = Отличия + "Вид сотрудника" + Символы.ПС;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВидСотрудникаРеквизит) Тогда
				Отличия = Отличия + "Не заполнен вид сотрудника" + Символы.ПС;
			КонецЕсли;
			
			новСтр.Отличия = Отличия;
			
		ИначеЕсли Выборка.Примечание = "Нет элемента в ГХБ 2" Тогда
			новСтр.НеСуществуетСотрудник = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура УстановитьФлаги(Команда)
	
	Для каждого СтрокаДанные Из Данные Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлаги(Команда)
	
	Для каждого СтрокаДанные Из Данные Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСоздатьДанные(Команда)
	РедактироватьСоздатьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура РедактироватьСоздатьДанныеНаСервере()
	
	мНайденное = Данные.НайтиСтроки(Новый Структура("ДН", Истина));
	
	РодительБазаХолдинга =  ПроверитьСоздатьГруппуПоОрганизацииВСправочникеСотрудникиБазХолдинга(БазаХолдингаСсылка);
	
	Если РодительБазаХолдинга = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Редактировано Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаДанные.НеСуществуетСотрудник Тогда
			СтрокаДанные.Редактировано = СоздатьСотрудникаБазыХолдинга(СтрокаДанные, РодительБазаХолдинга);
		Иначе
			СтрокаДанные.Редактировано = РедактироватьСотрудникаБазыХолдинга(СтрокаДанные);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Функция РедактироватьСотрудникаБазыХолдинга(СтрокаДанные)

	Попытка
		
		спрОбъект = СтрокаДанные.Сотрудник.ПолучитьОбъект();
		спрОбъект.ДополнительныеСвойства.Вставить("ПометкаПришлаОбменом", Истина);
		
		Если спрОбъект.Наименование <> СтрокаДанные.Наименование Тогда
			спрОбъект.Наименование = СтрокаДанные.Наименование;
		КонецЕсли;
		Если спрОбъект.ВидДоговора <> СтрокаДанные.ВидДоговораСсылка Тогда
			спрОбъект.ВидДоговора = СтрокаДанные.ВидДоговораСсылка;
		КонецЕсли;
		Если спрОбъект.ВидЗанятости <> СтрокаДанные.ВидЗанятостиСсылка Тогда
			спрОбъект.ВидЗанятости = СтрокаДанные.ВидЗанятостиСсылка;
		КонецЕсли;
		Если спрОбъект.ВидСотрудника <> СтрокаДанные.ВидСотрудника Тогда
			спрОбъект.ВидСотрудника = СтрокаДанные.ВидСотрудника;
		КонецЕсли;
		Если спрОбъект.ФизЛицоБазыХолдинга <> СтрокаДанные.ФизЛицоБазыХолдинга Тогда
			спрОбъект.ФизЛицоБазыХолдинга = СтрокаДанные.ФизЛицоБазыХолдинга;
		КонецЕсли;
		Если спрОбъект.ПометкаУдаления <> СтрокаДанные.ПометкаУдаления Тогда
			спрОбъект.ПометкаУдаления = СтрокаДанные.ПометкаУдаления;
		КонецЕсли;
		Если спрОбъект.ТабельныйНомер <> СтрокаДанные.ТабельныйНомер Тогда
			спрОбъект.ТабельныйНомер = СтрокаДанные.ТабельныйНомер;
		КонецЕсли;
		
		спрОбъект.Записать();
		Возврат Истина;
		
	Исключение
		
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
		
	КонецПопытки;

КонецФункции

&НаСервере
Функция СоздатьСотрудникаБазыХолдинга(СтрокаДанные, РодительБазаХолдинга)

	Попытка
		
		спрОбъект = Справочники.гхб_СотрудникиБазХолдинга.СоздатьЭлемент();
		спрОбъект.ДополнительныеСвойства.Вставить("ПометкаПришлаОбменом", Истина);
		спрОбъект.Родитель = РодительБазаХолдинга;
		спрОбъект.Наименование = СтрокаДанные.Наименование;
		спрОбъект.GUIDБазыХолдинга = СтрокаДанные.guid;
		спрОбъект.БазаХолдинга = БазаХолдингаСсылка;
		спрОбъект.ФизЛицоБазыХолдинга = СтрокаДанные.ФизЛицоБазыХолдинга;
		спрОбъект.ВидДоговора = СтрокаДанные.ВидДоговораСсылка;
		спрОбъект.ВидЗанятости = СтрокаДанные.ВидЗанятостиСсылка;
		спрОбъект.ВидСотрудника = СтрокаДанные.ВидСотрудника;
		спрОбъект.ТабельныйНомер = СтрокаДанные.ТабельныйНомер;
		Если спрОбъект.ВидДоговора = Перечисления.гхб_ВидыДоговоровСФизЛицами.Подряда Тогда
			спрОбъект.ВидСотрудника = Перечисления.гпх_ВидыСотрудников.ГПХ;
		КонецЕсли;
		
		спрОбъект.ДатаСозданияЭлементаОбменом = ТекущаяДата();
		спрОбъект.Записать();
		Возврат Истина;
		
	Исключение
		
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
		
	КонецПопытки;

КонецФункции // РедактироватьСотрудникаБазыХолдинга()

Функция ПроверитьСоздатьГруппуПоОрганизацииВСправочникеСотрудникиБазХолдинга(БазаХолдинга)

	Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БазаХолдинга, "Наименование");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	гхб_СотрудникиБазХолдинга.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.гхб_СотрудникиБазХолдинга КАК гхб_СотрудникиБазХолдинга
	|ГДЕ
	|	гхб_СотрудникиБазХолдинга.ЭтоГруппа
	|	И гхб_СотрудникиБазХолдинга.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Попытка
	
		спрОбъект = Справочники.гхб_СотрудникиБазХолдинга.СоздатьГруппу();
		спрОбъект.ДополнительныеСвойства.Вставить("ПометкаПришлаОбменом", Истина);
		спрОбъект.Наименование = Наименование;
		спрОбъект.Записать();
		Возврат спрОбъект.Ссылка;
	
	Исключение
		ЗаписьЖурналаРегистрации("СозданиеГруппыСотрудникаБазХолдингаПриЗагрузкеДанных", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки());
	КонецПопытки;

КонецФункции // ПроверитьСоздатьГруппуПоОрганизацииВСправочникеСотрудникиБазХолдинга()

#КонецОбласти