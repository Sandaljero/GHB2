
#Область СобытияФормыЭлементовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БазаХолдингаСсылка = Параметры.БазаХолдинга;
	ЗаполнитьДанныеДляСоздания();
	ЗаполнитьДанныеДляРедактирования();
	ЗаполнитьДанныеДляУдаления();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРедактированиеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНовыеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеУдалениеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеУдалениеПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура УстановитьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиНовые(Команда)
	
	Для каждого СтрокаДанные Из ДанныеНовые Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиРедактирование(Команда)
	
	Для каждого СтрокаДанные Из ДанныеРедактирование Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиУдаление(Команда)
	
	Для каждого СтрокаДанные Из ДанныеУдаление Цикл
		СтрокаДанные.ДН = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаписи(Команда)
	СоздатьЗаписьКИ();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЗаписи(Команда)
	РедактироватьЗаписиКИ();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗаписи(Команда)
	УдалитьЗаписиКИ();
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура СоздатьЗаписьКИ()
	
	мНайденное = ДанныеНовые.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Обработано Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаДанные.Объект) 
			Или Не ЗначениеЗаполнено(СтрокаДанные.Тип) 
			Или Не ЗначениеЗаполнено(СтрокаДанные.Вид) Тогда
			Продолжить;
		КонецЕсли;
		
		Запись = РегистрыСведений.гхб_КонтактнаяИнформацияБазХолдинга.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, СтрокаДанные);
		Запись.БазаХолдинга = БазаХолдингаСсылка;
		Запись.Записать();
		СтрокаДанные.Обработано = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РедактироватьЗаписиКИ()
	
	мНайденное = ДанныеРедактирование.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Обработано Тогда
			Продолжить;
		КонецЕсли;
		
		Набор = РегистрыСведений.гхб_КонтактнаяИнформацияБазХолдинга.СоздатьНаборЗаписей();
		Набор.Отбор.БазаХолдинга.Установить(БазаХолдингаСсылка);
		Набор.Отбор.Объект.Установить(СтрокаДанные.Объект);
		Набор.Отбор.Тип.Установить(СтрокаДанные.Тип);
		Набор.Отбор.Вид.Установить(СтрокаДанные.Вид);
		
		Набор.Прочитать();
		ЗаписатьНабор = Ложь;
		
		Если Набор.Количество() = 1 Тогда
			
			Если Набор[0].Представление <> СтрокаДанные.Представление Тогда
				
				Набор[0].Представление = СтрокаДанные.Представление;
				ЗаписатьНабор = Истина;
				
			КонецЕсли;
			
			Если ЗаписатьНабор Тогда
			
				Набор.Записать();
				СтрокаДанные.Обработано = Истина;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // РедактироватьЗаписиШтатноеРасписание()

&НаСервере
Процедура УдалитьЗаписиКИ()
	
	мНайденное = ДанныеУдаление.НайтиСтроки(Новый Структура("ДН", Истина));
	
	Для каждого СтрокаДанные Из мНайденное Цикл
	
		Если СтрокаДанные.Обработано Тогда
			Продолжить;
		КонецЕсли;
		
		Набор = РегистрыСведений.гхб_КонтактнаяИнформацияБазХолдинга.СоздатьНаборЗаписей();
		Набор.Отбор.БазаХолдинга.Установить(БазаХолдингаСсылка);
		Набор.Отбор.Объект.Установить(СтрокаДанные.Объект);
		Набор.Отбор.Тип.Установить(СтрокаДанные.Тип);
		Набор.Отбор.Вид.Установить(СтрокаДанные.Вид);
		
		Набор.Прочитать();
			
		Если Набор.Количество() = 1 Тогда
			
			Набор.Очистить();
			Попытка
				
				Набор.Записать();
				СтрокаДанные.Обработано = Истина;
				
			Исключение
				ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДляСоздания()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаНетДанныхГХБКИ();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеНовые.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеДляСоздания()

&НаСервере
Процедура ЗаполнитьДанныеДляРедактирования()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаРазличиеДанныхКИ();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеРедактирование.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьДанныеДляРедактирования()

&НаСервере
Процедура ЗаполнитьДанныеДляУдаления()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("таб", Параметры.тзДанные);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдингаСсылка);
	Запрос.Текст = ПолучитьТекстЗапросаНетДанныхРИБКИ();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		новСтр = ДанныеУдаление.Добавить();
		ЗаполнитьЗначенияСвойств(новСтр, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеДляУдаления()

&НаСервере
Функция ПолучитьТекстЗапросаРазличиеДанныхКИ()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Представление КАК Представление,
	|	таб.Тип КАК Тип,
	|	таб.Вид КАК Вид,
	|	таб.ТипСсылка КАК ТипСсылка,
	|	таб.ВидСсылка КАК ВидСсылка,
	|	таб.guid КАК guid,
	|	таб.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Представление КАК Представление,
	|	втДанные.Тип КАК Тип,
	|	втДанные.Вид КАК Вид,
	|	втДанные.guid КАК guid,
	|	втДанные.ФизЛицо КАК ФизЛицо,
	|	втДанные.ТипСсылка КАК ТипСсылка,
	|	втДанные.ВидСсылка КАК ВидСсылка,
	|	гхб_ФизическиеЛицаБазХолдинга.Ссылка КАК Объект
	|ПОМЕСТИТЬ втКрайняя
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	|		ПО втДанные.guid = гхб_ФизическиеЛицаБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ФизическиеЛицаБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКрайняя.Объект КАК Объект,
	|	втКрайняя.ТипСсылка КАК Тип,
	|	втКрайняя.ВидСсылка КАК Вид,
	|	втКрайняя.Представление КАК Представление
	|ИЗ
	|	втКрайняя КАК втКрайняя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.гхб_КонтактнаяИнформацияБазХолдинга КАК гхб_КонтактнаяИнформацияБазХолдинга
	|		ПО втКрайняя.ТипСсылка = гхб_КонтактнаяИнформацияБазХолдинга.Тип
	|			И втКрайняя.ВидСсылка = гхб_КонтактнаяИнформацияБазХолдинга.Вид
	|			И втКрайняя.Объект = гхб_КонтактнаяИнформацияБазХолдинга.Объект
	|			И (гхб_КонтактнаяИнформацияБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|			И ((ВЫРАЗИТЬ(гхб_КонтактнаяИнформацияБазХолдинга.Представление КАК СТРОКА(150))) <> втКрайняя.Представление)";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаНетДанныхГХБШтатноеРасписание()

&НаСервере
Функция ПолучитьТекстЗапросаНетДанныхГХБКИ()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Представление КАК Представление,
	|	таб.Тип КАК Тип,
	|	таб.Вид КАК Вид,
	|	таб.ТипСсылка КАК ТипСсылка,
	|	таб.ВидСсылка КАК ВидСсылка,
	|	таб.guid КАК guid,
	|	таб.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Представление КАК Представление,
	|	втДанные.Тип КАК Тип,
	|	втДанные.Вид КАК Вид,
	|	втДанные.guid КАК guid,
	|	втДанные.ФизЛицо КАК ФизЛицо,
	|	втДанные.ТипСсылка КАК ТипСсылка,
	|	втДанные.ВидСсылка КАК ВидСсылка,
	|	гхб_ФизическиеЛицаБазХолдинга.Ссылка КАК Объект
	|ПОМЕСТИТЬ втКрайняя
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	|		ПО втДанные.guid = гхб_ФизическиеЛицаБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ФизическиеЛицаБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКрайняя.Объект КАК Объект,
	|	втКрайняя.ТипСсылка КАК Тип,
	|	втКрайняя.ВидСсылка КАК Вид,
	|	""РИБ"" КАК ТипДанных,
	|	""ГХБ 2.0"" КАК ТипДанныхБХ,
	|	втКрайняя.Представление КАК Представление,
	|	гхб_КонтактнаяИнформацияБазХолдинга.Объект КАК ОбъектБХ,
	|	гхб_КонтактнаяИнформацияБазХолдинга.Тип КАК ТипБХ,
	|	гхб_КонтактнаяИнформацияБазХолдинга.Вид КАК ВидБХ,
	|	гхб_КонтактнаяИнформацияБазХолдинга.Представление КАК ПредставлениеБХ
	|ИЗ
	|	втКрайняя КАК втКрайняя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гхб_КонтактнаяИнформацияБазХолдинга КАК гхб_КонтактнаяИнформацияБазХолдинга
	|		ПО втКрайняя.ТипСсылка = гхб_КонтактнаяИнформацияБазХолдинга.Тип
	|			И втКрайняя.ВидСсылка = гхб_КонтактнаяИнформацияБазХолдинга.Вид
	|			И втКрайняя.Объект = гхб_КонтактнаяИнформацияБазХолдинга.Объект
	|			И (гхб_КонтактнаяИнформацияБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|ГДЕ
	|	гхб_КонтактнаяИнформацияБазХолдинга.Объект ЕСТЬ NULL";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаРазличиеДанныхШтатноеРасписание()

&НаСервере
Функция ПолучитьТекстЗапросаНетДанныхРИБКИ()

	Текст = 
	"ВЫБРАТЬ
	|	таб.Представление КАК Представление,
	|	таб.Тип КАК Тип,
	|	таб.Вид КАК Вид,
	|	таб.ТипСсылка КАК ТипСсылка,
	|	таб.ВидСсылка КАК ВидСсылка,
	|	таб.guid КАК guid,
	|	таб.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&таб КАК таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Представление КАК Представление,
	|	втДанные.Тип КАК Тип,
	|	втДанные.Вид КАК Вид,
	|	втДанные.guid КАК guid,
	|	втДанные.ФизЛицо КАК ФизЛицо,
	|	втДанные.ТипСсылка КАК ТипСсылка,
	|	втДанные.ВидСсылка КАК ВидСсылка,
	|	гхб_ФизическиеЛицаБазХолдинга.Ссылка КАК Объект
	|ПОМЕСТИТЬ втКрайняя
	|ИЗ
	|	втДанные КАК втДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
	|		ПО втДанные.guid = гхб_ФизическиеЛицаБазХолдинга.GUIDБазыХолдинга
	|			И (гхб_ФизическиеЛицаБазХолдинга.БазаХолдинга = &БазаХолдинга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ГХБ 2.0"" КАК ТипДанных,
	|	гхб_КонтактнаяИнформацияБазХолдинга.Объект КАК Объект,
	|	гхб_КонтактнаяИнформацияБазХолдинга.Тип КАК Тип,
	|	гхб_КонтактнаяИнформацияБазХолдинга.Вид КАК Вид,
	|	гхб_КонтактнаяИнформацияБазХолдинга.Представление КАК Представление
	|ИЗ
	|	втКрайняя КАК втКрайняя
	|		ПРАВОЕ СОЕДИНЕНИЕ РегистрСведений.гхб_КонтактнаяИнформацияБазХолдинга КАК гхб_КонтактнаяИнформацияБазХолдинга
	|		ПО втКрайняя.ТипСсылка = гхб_КонтактнаяИнформацияБазХолдинга.Тип
	|			И втКрайняя.ВидСсылка = гхб_КонтактнаяИнформацияБазХолдинга.Вид
	|			И втКрайняя.Объект = гхб_КонтактнаяИнформацияБазХолдинга.Объект
	|ГДЕ
	|	гхб_КонтактнаяИнформацияБазХолдинга.БазаХолдинга = &БазаХолдинга
	|	И втКрайняя.Объект ЕСТЬ NULL
	|	И (гхб_КонтактнаяИнформацияБазХолдинга.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|			ИЛИ гхб_КонтактнаяИнформацияБазХолдинга.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))";
	
	Возврат Текст;

КонецФункции // ПолучитьТекстЗапросаНетДанныхРИБШтатноеРасписание()

#КонецОбласти