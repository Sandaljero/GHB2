
&НаКлиенте
Процедура СтатусКонсервацииПриИзменении(Элемент)
	
	ЗаполнитьСписокПериодКонсервации();
	ЗаполнитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокПериодКонсервации()
	
	_Список = Элементы.ПериодКонсервации.СписокВыбора;
	_Список.Очистить();
	
	Если (Объект.СтатусКонсервации = ПредопределенноеЗначение("Перечисление.гхб_СтатусыКонсервацииПомещений.Yellow")) Тогда
		_Список.Добавить(14, НСтр("ru='2 недели';uk='2 тижні'"));
		_Список.Добавить(28, НСтр("ru='4 недели';uk='4 тижні'"));
		_Список.Добавить(42, НСтр("ru='6 недель';uk='6 тижнів'"));
		_Список.Добавить(56, НСтр("ru='8 недель';uk='8 тижнів'"));
	ИначеЕсли (Объект.СтатусКонсервации = ПредопределенноеЗначение("Перечисление.гхб_СтатусыКонсервацииПомещений.Red")) Тогда
		_Список.Добавить(28, НСтр("ru='4 недели';uk='4 тижні'"));
		_Список.Добавить(56, НСтр("ru='8 недель';uk='8 тижнів'"));
		_Список.Добавить(84, НСтр("ru='12 недель';uk='12 тижнів'"));
		_Список.Добавить(112, НСтр("ru='16 недель';uk='16 тижнів'"));
	КонецЕсли;
	
	Если НЕ (_Список.НайтиПоЗначению(Объект.ПериодКонсервации) = Неопределено) Тогда
		Объект.ПериодКонсервации = Объект.ПериодКонсервации;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВидимостьИДоступность()
	
	Элементы.ПериодКонсервации.Доступность = НЕ (Объект.СтатусКонсервации = ПредопределенноеЗначение("Перечисление.гхб_СтатусыКонсервацииПомещений.Green"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодКонсервацииПриИзменении(Элемент)
	
	Объект.ПериодКонсервацииСтрока = 
		?(ЗначениеЗаполнено(Объект.ПериодКонсервации), 
		Элементы.ПериодКонсервации.СписокВыбора.НайтиПоЗначению(Объект.ПериодКонсервации).Представление,
		"");
		
	УстановитьДатуОкончанияПоПериодуКонсервации();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДатуОкончанияПоПериодуКонсервации()
	
	Если ЗначениеЗаполнено(Объект.ПериодКонсервации) Тогда
		Объект.ДатаОкончания = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьДеньКДате(Объект.ДатаНачала, Объект.ПериодКонсервации - 1);
	Иначе
		Объект.ДатаОкончания = Дата(1, 1, 1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьСписокПериодКонсервации();
	ЗаполнитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Объект.ДатаНачала = НачалоНедели(Объект.ДатаНачала);
	
	// Сделать дату не менее чем через неделю в понедельник если не установлена галка снятия контроля периода
	Если ЗначениеЗаполнено(ДатаПредыдущегоОкончанияСостояния) И (Объект.ДатаНачала < ДатаПредыдущегоОкончанияСостояния) И (ДатаОграниченияНачала < ДатаПредыдущегоОкончанияСостояния) И НЕ Объект.СнятьПроверкуДатыНачала Тогда
		Сообщить(НСтр("ru='Дата окончания предыдущего состояния консервации """ + Формат(ДатаПредыдущегоОкончанияСостояния, "ДФ=dd.MM.yyyy") + """" + Символы.ПС + 
			"Выбрать меньшую дату можно только с установленным признаком ""Досрочная расконсервация""';uk='Дата закінчення попереднього стану консервації """ + 
			Формат(ДатаПредыдущегоОкончанияСостояния, "ДФ=dd.MM.yyyy") + """" + Символы.ПС + 
			"Вибрати меншу дату можна тільки з встановленим ознакою ""Дострокове розконсервування""'"));
			
		Объект.ДатаНачала = ДатаПредыдущегоОкончанияСостояния;
	ИначеЕсли (Объект.ДатаНачала < ДатаОграниченияНачала) Тогда
		Объект.ДатаНачала = ДатаОграниченияНачала;		
	КонецЕсли;
	
	УстановитьДатуОкончанияПоПериодуКонсервации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПомощьНеНужнаПриИзменении(Элемент)
	
	Если Объект.ПомощьНеНужна Тогда
		Объект.ПомощьIT = Ложь;
		Объект.ПомощьАХО = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомощьАХОПриИзменении(Элемент)
	
	Объект.ПомощьНеНужна = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомощьITПриИзменении(Элемент)
	
	Объект.ПомощьНеНужна = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	
	ДатаПредыдущегоОкончанияСостояния = ВернутьДатуПредыдущегоОкончанияСостояния(Объект.Дата, Объект.Ссылка, Объект.Помещение);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьДатуПредыдущегоОкончанияСостояния(_Дата, _Регистратор, _Помещение)
	
	_Рез = Дата(1,1,1);
	
	Если ЗначениеЗаполнено(_Помещение) Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	гхб_АктуальныеДокументыКонсервацииПомещений.Помещение КАК Помещение,
		               |	МАКСИМУМ(гхб_АктуальныеДокументыКонсервацииПомещений.Дата) КАК Дата
		               |ПОМЕСТИТЬ _Помещения
		               |ИЗ
		               |	РегистрСведений.гхб_АктуальныеДокументыКонсервацииПомещений КАК гхб_АктуальныеДокументыКонсервацииПомещений
		               |ГДЕ
		               |	гхб_АктуальныеДокументыКонсервацииПомещений.ДокументКонсервации <> &Регистратор
		               |	И гхб_АктуальныеДокументыКонсервацииПомещений.Помещение = &Помещение
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	гхб_АктуальныеДокументыКонсервацииПомещений.Помещение
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Помещение,
		               |	Дата
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	_Помещения.Помещение КАК Помещение,
					   |	гхб_АктуальныеДокументыКонсервацииПомещений.ДокументКонсервации.ДатаОкончания КАК ДатаОкончания
		               |ИЗ
		               |	РегистрСведений.гхб_АктуальныеДокументыКонсервацииПомещений КАК гхб_АктуальныеДокументыКонсервацииПомещений
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ _Помещения КАК _Помещения
		               |		ПО гхб_АктуальныеДокументыКонсервацииПомещений.Помещение = _Помещения.Помещение
		               |			И гхб_АктуальныеДокументыКонсервацииПомещений.Дата = _Помещения.Дата
		               |ГДЕ
		               |	гхб_АктуальныеДокументыКонсервацииПомещений.ДокументКонсервации.СтатусКонсервации <> ЗНАЧЕНИЕ(Перечисление.гхб_СтатусыКонсервацииПомещений.GREEN)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	_Помещения.Помещение,
					   |	гхб_АктуальныеДокументыКонсервацииПомещений.ДокументКонсервации.ДатаОкончания
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ _Помещения";
		
		//"ВЫБРАТЬ
		//               |	гхб_СтатусыКонсервацииПомещенийСрезПоследних.ДатаОкончания КАК ДатаОкончания
		//               |ИЗ
		//               |	РегистрСведений.гхб_СтатусыКонсервацииПомещений.СрезПоследних(
		//               |			&Период,
		//               |			Регистратор <> &Регистратор
		//               |				И Помещение = &Помещение) КАК гхб_СтатусыКонсервацииПомещенийСрезПоследних
		//               |ГДЕ
		//               |	гхб_СтатусыКонсервацииПомещенийСрезПоследних.СтатусКонсервации <> ЗНАЧЕНИЕ(Перечисление.гхб_СтатусыКонсервацииПомещений.Green)";
		
		//Запрос.УстановитьПараметр("Период", _Дата);
		Запрос.УстановитьПараметр("Регистратор", _Регистратор);
		Запрос.УстановитьПараметр("Помещение", _Помещение);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		_Рез = ?(Выборка.Следующий(), гхб_ОбщегоНазначенияКлиентСервер.ДобавитьДеньКДате(Выборка.ДатаОкончания), Дата(1, 1, 1));
		
	КонецЕсли;
	
	Возврат _Рез;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.ТолькоПросмотр = Объект.АвтоматическоеСозданиеДокумента 
		ИЛИ (ЗначениеЗаполнено(Объект.Ссылка) И Объект.Проведен И НачалоДня(Объект.Дата) < НачалоДня(ТекущаяДатаСеанса()));
		
	Элементы.ФормаОбщаяКомандагхб_ОткрытьСписокФайлов.Доступность = НЕ ЭтотОбъект.ТолькоПросмотр;
		
	_ДатаСеанса = НачалоДня(ТекущаяДатаСеанса());
	ДатаОграниченияНачала = гхб_ОбщегоНазначенияКлиентСервер.ДобавитьДеньКДате(_ДатаСеанса, 8 - ДеньНедели(_ДатаСеанса) + 7);
	
	ДатаПредыдущегоОкончанияСостояния = ВернутьДатуПредыдущегоОкончанияСостояния(Объект.Дата, Объект.Ссылка, Объект.Помещение);
	
	// В выбор помещений добавить только те, которые разрешены для ответственного
	ПараметрПомещения = Новый ПараметрВыбора("ФильтрПоПомещениям", РегистрыСведений.гхб_ОтветственныеЗаКонсервациюПомещений.ВернутьПомещенияДляОтбораПоКонсервацииТекущийПользователь());
	ПараметрКонсервация = Новый ПараметрВыбора("КонсервацияПомещений", Истина);
	
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(ПараметрПомещения);
	НовыйМассив.Добавить(ПараметрКонсервация);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	
	Элементы.Помещение.ПараметрыВыбора = НовыеПараметры;
	
	УстановитьТекстКомандыФайлы(Элементы.ФормаОбщаяКомандагхб_ОткрытьСписокФайлов.Заголовок, Объект.Ссылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьТекстКомандыФайлы(ЗаголовокКоманды, Ссылка)
	
	РегистрыСведений.гхб_СписокФайлов.УстановитьТекстПоКоличествуФайлов(ЗаголовокКоманды, Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если (Объект.СтатусКонсервации = ПредопределенноеЗначение("Перечисление.гхб_СтатусыКонсервацииПомещений.Red") 
	 ИЛИ Объект.СтатусКонсервации = ПредопределенноеЗначение("Перечисление.гхб_СтатусыКонсервацииПомещений.Yellow")) Тогда
			
	 	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
			Отказ = Истина;
			Сообщить(НСтр("ru='Дата окончания консервации должна быть заполнена';uk='Дата закінчення консервації повинна бути заповнена'"));
		ИначеЕсли (Объект.ДатаНачала = Объект.ДатаОкончания) Тогда
			Отказ = Истина;
			Сообщить(НСтр("ru='Дата начала консервации не должна совпадать с датой окончания';uk='Дата початку консервації не повинна збігатися з датою закінчення'"));
		КонецЕсли;	
	КонецЕсли;
	
	Если НЕ Объект.ПомощьАХО И НЕ Объект.ПомощьIT И НЕ Объект.ПомощьНеНужна Тогда
		Отказ = Истина;
		Сообщить(НСтр("ru='Для документа нужно установить один из признаков привлечения сервисных служб';uk='Для документа потрібно встановити одну з ознак залучення сервісних служб'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	УстановитьТекстКомандыФайлы(Элементы.ФормаОбщаяКомандагхб_ОткрытьСписокФайлов.Заголовок, Объект.Ссылка);
	
КонецПроцедуры
