
&НаКлиенте
Процедура ПомещенияПередУдалением(Элемент, Отказ)
	
	_ТекущиеДанные = Элементы.Помещения.ТекущиеДанные;
	
	Если НЕ (_ТекущиеДанные = Неопределено) И _ТекущиеДанные.СуществующийДоступ Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияЗакрытьПриИзменении(Элемент)
	
	_ТекущиеДанные = Элементы.Помещения.ТекущиеДанные;
	
	Если НЕ (_ТекущиеДанные = Неопределено) И _ТекущиеДанные.Закрыть И НЕ _ТекущиеДанные.СуществующийДоступ Тогда
		
		_ТекущиеДанные.Закрыть = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	ЭтотОбъект.ТолькоПросмотр = ДокументБылПроведен(Объект.Ссылка);
	Элементы.ФормаОбщаяКомандагхб_ОткрытьСписокФайлов.Доступность = НЕ (СписокЛокацийДляВыбора.Количество() = 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДокументБылПроведен(_Ссылка)
	
	Возврат РегистрыСведений.гхб_СобытияОбъектовБД.СобытиеПоОбъектуБыло(_Ссылка, Перечисления.гхб_ТипыСобытийОбъектовБД.ПервоеПроведениеДокумента);
	
КонецФункции

&НаКлиенте
Процедура ОтветственныйЗаПомещениеПриИзменении(Элемент)
	
	ЗаполнитьДанныеПоОтветственномуЗаПомещение();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеПоОтветственномуЗаПомещение()
	
	Если ЗначениеЗаполнено(Объект.ОтветственныйЗаПомещение) Тогда
		ЗаполнитьПомещенияПоФизЛицу(Объект.ОтветственныйЗаПомещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУказанномуОтветственному(Команда)
	
	_ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоУказанномуОтветственномуЗавершение", ЭтотОбъект);
	
	_Параметры = Новый Структура();
	_Параметры.Вставить("ЭтоГруппа", Ложь);
	_Параметры.Вставить("ПометкаУдаления", Ложь);
	_Параметры.Вставить("МножественныйВыбор", Ложь);
	_Параметры.Вставить("ЗакрыватьПриВыборе", Истина);
	
	ОткрытьФорму("Справочник.гхб_ФизическиеЛица.ФормаВыбора", _Параметры, ЭтотОбъект, , , , _ОписаниеОповещения, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУказанномуОтветственномуЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт 
	
	Если НЕ (ВыбранноеЗначение = Неопределено) Тогда 
		ЗаполнитьПомещенияПоФизЛицу(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПомещенияПоФизЛицу(_ФизЛицо)
	
	Если (Объект.Помещения.Количество() = 0) Тогда
		
		ЗагрузитьАктуальныеПомещения(_ФизЛицо);
		
	Иначе
		
		_ДополнительныеПараметры = Новый Структура();
		_ДополнительныеПараметры.Вставить("_ФизЛицо", _ФизЛицо);
		
		_ОписаниеОповещения = Новый ОписаниеОповещения("ВопросОчиститьПомещенияЗавершение", ЭтотОбъект, _ДополнительныеПараметры);
		
		_ТекстВопроса = НСтр("ru='Список помещений не пустой." + Символы.ПС + "Очистить помещения перед заполнением?';" + 
			"uk='Список приміщень заповнений." + Символы.ПС + "Видалити існуючі данні перед заповненням?'");
		
		_ТекстЗаголовок = НСтр("ru='Очистить помещения?';uk='Очистити приміщення?'");
		
		ПоказатьВопрос(_ОписаниеОповещения, _ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 60, КодВозвратаДиалога.Отмена, _ТекстЗаголовок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьПомещенияЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если (Ответ = КодВозвратаДиалога.Да) Тогда 
		Объект.Помещения.Очистить();
	ИначеЕсли (Ответ = КодВозвратаДиалога.Отмена) Тогда 
		Возврат;
	КонецЕсли;
	
	ЗагрузитьАктуальныеПомещения(ДополнительныеПараметры._ФизЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьАктуальныеПомещения(_ФизЛицо)
	
	Если (_ФизЛицо = Объект.ОтветственныйЗаПомещение) Тогда
		Для Каждого Стр Из Объект.Помещения Цикл
			Стр.СуществующийДоступ = Ложь;
		КонецЦикла;
	КонецЕсли;
	
	_МассивПомещений = ВернутьАктуальныеПомещенияДляОтветственного(_ФизЛицо, СписокЛокацийДляВыбора);
	
	_СтруктураПоиска = Новый Структура("Помещение", ПредопределенноеЗначение("Справочник.гхб_Помещения.ПустаяСсылка"));
	
	Для Каждого _Помещение Из _МассивПомещений Цикл
		
		_СтруктураПоиска.Помещение = _Помещение;
		_НайденныеСтроки = Объект.Помещения.НайтиСтроки(_СтруктураПоиска);
		
		Если _НайденныеСтроки.Количество() = 0 Тогда
			
			НС = Объект.Помещения.Добавить();
			НС.Помещение = _Помещение;
			НС.СуществующийДоступ = (_ФизЛицо = Объект.ОтветственныйЗаПомещение);
			
		Иначе
			
			_НайденныеСтроки.Получить(0).СуществующийДоступ = (_ФизЛицо = Объект.ОтветственныйЗаПомещение);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если (_ФизЛицо = Объект.ОтветственныйЗаПомещение) Тогда
		Объект.Помещения.Сортировать("СуществующийДоступ УБЫВ, Помещение ВОЗР");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьАктуальныеПомещенияДляОтветственного(_ФизЛицо, _СписокЛокаций)
	
	Возврат РегистрыСведений.гхб_ОтветственныеЗаПомещения.ВернутьАктуальныеПомещенияДляОтветственного(_ФизЛицо, _СписокЛокаций);
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		_Массив = Справочники.гхб_Помещения.ВернутьАктивныеПомещенияПоТипу(Справочники.гхб_ТипыПомещений.Локация);
	Иначе
		_ФЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСеанса.ТекущийПользователь, "ФизическоеЛицо");
		
		_Массив = РегистрыСведений.гхб_ОтветственныеЗаЛокации.ВернутьЛокацииПоОтветственному(_ФЛ);
		_МассивДополнительный = РегистрыСведений.гхб_ДополнительныеОтветственныеЗаЛокации.ВернутьЛокацииПоДополнительномуОтветственному(_ФЛ);
		
		Для Каждого _Локация Из _МассивДополнительный Цикл
			Если (_Массив.Найти(_Локация) = Неопределено) Тогда
				_Массив.Добавить(_Локация);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СписокЛокацийДляВыбора.ЗагрузитьЗначения(_Массив);
	
	НовыйПараметр = Новый ПараметрВыбора("ФильтрПоПомещениям", _Массив);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	
	Элементы.ПомещенияПомещение.ПараметрыВыбора = НовыеПараметры;
	УстановитьТекстКомандыФайлы(Элементы.ФормаОбщаяКомандагхб_ОткрытьСписокФайлов.Заголовок, Объект.Ссылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьТекстКомандыФайлы(ЗаголовокКоманды, Ссылка)
	
	РегистрыСведений.гхб_СписокФайлов.УстановитьТекстПоКоличествуФайлов(ЗаголовокКоманды, Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Помещения.ТекущиеДанные;
	
	Если НЕ (_ТекущиеДанные = Неопределено) Тогда
		Элементы.ПомещенияПомещение.ТолькоПросмотр = _ТекущиеДанные.СуществующийДоступ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	УстановитьТекстКомандыФайлы(Элементы.ФормаОбщаяКомандагхб_ОткрытьСписокФайлов.Заголовок, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
	
		ТД = Элементы.Помещения.ТекущиеДанные;
		ТД.СуществующийДоступ = Ложь;
		ТД.Закрыть = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры
