
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Параметры.Свойство("ТипПомещения") Тогда
			Если Параметры.ТипПомещения = Справочники.гхб_ТипыПомещений.Локация Тогда
				Объект.ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЛокации;
				
				НС = Объект.Локации.Добавить();
				НС.Локация = Параметры.Помещение;
				
			ИначеЕсли Параметры.ТипПомещения = Справочники.гхб_ТипыПомещений.Корпус Тогда
				Объект.ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеКорпуса;
				
				НС = Объект.Корпуса.Добавить();
				НС.Корпус = Параметры.Помещение;
				
			ИначеЕсли Параметры.ТипПомещения = Справочники.гхб_ТипыПомещений.ЭлементСтроения Тогда
				Объект.ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЭлементаСтроения;
				
				НС = Объект.ЭлементыСтроений.Добавить();
				НС.ЭлементСтроения = Параметры.Помещение;				
				
			Иначе
				Объект.ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеПомещения;
				
				НС = Объект.Помещения.Добавить();
				НС.Помещение = Параметры.Помещение;
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(НС, ВернутьДанныеПомещения(Параметры.Помещение));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДокументБылПроведен(_Ссылка)
	
	Возврат РегистрыСведений.гхб_СобытияОбъектовБД.СобытиеПоОбъектуБыло(_Ссылка, Перечисления.гхб_ТипыСобытийОбъектовБД.ПервоеПроведениеДокумента);
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	ЭтотОбъект.ТолькоПросмотр = ДокументБылПроведен(Объект.Ссылка);
	
	// Группа "Локации"
	Элементы.ГруппаЛокации.Видимость = 
		(Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.СозданиеЛокации")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЛокации"));
		
	_ВидимостьПолейРедактированияЛокации = 
		Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЛокации");
		
	Элементы.ЛокацииЛокация.Видимость = _ВидимостьПолейРедактированияЛокации;
	Элементы.ЛокацииНаименованиеНовое.Видимость = _ВидимостьПолейРедактированияЛокации;
	Элементы.ЛокацииРуководительНовый.Видимость = _ВидимостьПолейРедактированияЛокации;
	Элементы.ЛокацииИспользоватьДляЗакрепленияПарковочныхМестНовое.Видимость = _ВидимостьПолейРедактированияЛокации;
	Элементы.ЛокацииГруппаЗакрыть.Видимость = _ВидимостьПолейРедактированияЛокации;
	
	Элементы.ЛокацииНаименование.ТолькоПросмотр = _ВидимостьПолейРедактированияЛокации;
	Элементы.ЛокацииРуководитель.ТолькоПросмотр = _ВидимостьПолейРедактированияЛокации;
	Элементы.ЛокацииИспользоватьДляЗакрепленияПарковочныхМест.ТолькоПросмотр = _ВидимостьПолейРедактированияЛокации;
	Элементы.ЛокацииЗакрыть.ТолькоПросмотр = _ВидимостьПолейРедактированияЛокации;
	
	// Группа "Корпуса"
	Элементы.ГруппаКорпуса.Видимость = 
		(Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.СозданиеКорпуса")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.РедактированиеКорпуса"));
		
	_ВидимостьПолейРедактированияКорпуса = 
		Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.РедактированиеКорпуса");
		
	Элементы.КорпусаКорпус.Видимость = _ВидимостьПолейРедактированияКорпуса;
	Элементы.КорпусаЛокацияНовая.Видимость = _ВидимостьПолейРедактированияКорпуса;
	Элементы.КорпусаНаименованиеНовое.Видимость = _ВидимостьПолейРедактированияКорпуса;
	Элементы.КорпусаГруппаЗакрыть.Видимость = _ВидимостьПолейРедактированияКорпуса;
	
	Элементы.КорпусаЛокация.ТолькоПросмотр = _ВидимостьПолейРедактированияКорпуса;
	Элементы.КорпусаНаименование.ТолькоПросмотр = _ВидимостьПолейРедактированияКорпуса;
	Элементы.КорпусаЗакрыть.ТолькоПросмотр = _ВидимостьПолейРедактированияКорпуса;
	
	// Группа "Элементы строения"
	Элементы.ГруппаЭлементыСтроений.Видимость = 
		(Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.СозданиеЭлементаСтроения")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЭлементаСтроения"));
		
	_ВидимостьПолейРедактированияЭлементаСтроения = 
		Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЭлементаСтроения");
		
	Элементы.ЭлементыСтроенийЭлементСтроения.Видимость = _ВидимостьПолейРедактированияЭлементаСтроения;
	Элементы.ЭлементыСтроенийКорпусНовый.Видимость = _ВидимостьПолейРедактированияЭлементаСтроения;
	Элементы.ЭлементыСтроенийЛокацияНовая.Видимость = _ВидимостьПолейРедактированияЭлементаСтроения;
	Элементы.ЭлементыСтроенийНаименованиеНовое.Видимость = _ВидимостьПолейРедактированияЭлементаСтроения;
	Элементы.ЭлементыСтроенийГруппаЗакрыть.Видимость = _ВидимостьПолейРедактированияЭлементаСтроения;
	
	Элементы.ЭлементыСтроенийЛокация.ТолькоПросмотр = _ВидимостьПолейРедактированияЭлементаСтроения;
	Элементы.ЭлементыСтроенийКорпус.ТолькоПросмотр = _ВидимостьПолейРедактированияЭлементаСтроения;
	Элементы.ЭлементыСтроенийНаименование.ТолькоПросмотр = _ВидимостьПолейРедактированияЭлементаСтроения;
	Элементы.ЭлементыСтроенийЗакрыть.ТолькоПросмотр = _ВидимостьПолейРедактированияЭлементаСтроения;
	
	// Группа "Помещения"
	Элементы.ГруппаПомещения.Видимость = 
		(Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.СозданиеПомещения")
		ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.РедактированиеПомещения"));
		
	_ВидимостьПолейРедактированияПомещения = 
		Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.гхб_ВидыОперацийСвойстваПомещений.РедактированиеПомещения");
		
	Элементы.ПомещенияПомещение.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияЭлементСтроенияНовый.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияКорпусНовый.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияЛокацияНовая.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНаименованиеНовое.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНомерПомещенияНовый.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияДробнаяЧастьНовая.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияПлощадьНовая.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияТипПомещенияНовый.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияПлановоеКоличествоРабочихМестНовое.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНетРабочихМестНовое.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияУточняющаяИнформацияНовая.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНомерНаГенеральномПланеНовый.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияДоступВПомещениеПоКлючуНовый.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНаличиеОхраннойСигнализацииНовое.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияВнутреннийНомерКТНовый.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНаличиеКТНовое.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияСогласованиеДоступаСВысшимРуководителемНовое.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияОбщегоПользованияНовый.Видимость = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияГруппаЗакрыть.Видимость = _ВидимостьПолейРедактированияПомещения;
	
	Элементы.ПомещенияЛокация.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияКорпус.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияЭлементСтроения.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНомерПомещения.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияДробнаяЧасть.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияПлощадь.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияТипПомещения.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияПлановоеКоличествоРабочихМест.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНетРабочихМест.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияУточняющаяИнформация.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНомерНаГенеральномПлане.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияДоступВПомещениеПоКлючу.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНаличиеОхраннойСигнализации.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияВнутреннийНомерКТ.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНаличиеКТ.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияСогласованиеДоступаСВысшимРуководителем.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияОбщегоПользования.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияНаименование.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	Элементы.ПомещенияЗакрыть.ТолькоПросмотр = _ВидимостьПолейРедактированияПомещения;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛокацииЛокацияПриИзменении(Элемент)
	
	_ТД = Элементы.Локации.ТекущиеДанные;
	
	_ТД.Локация = ВернутьПомещениеУказанногоУровня(_ТД.Локация, ПредопределенноеЗначение("Справочник.гхб_ТипыПомещений.Локация"));
	ЗаполнитьЗначенияСвойств(_ТД, ВернутьДанныеПомещения(_ТД.Локация));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьПомещениеУказанногоУровня(Знач _Локация, _ТипПомещения)
	
	_Результат = Справочники.гхб_Помещения.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(_Локация) Тогда
		_СвойстваЛокации = Справочники.гхб_Помещения.ВернутьДанныеПомещения(_Локация, Ложь);
			
		Если (_ТипПомещения = Справочники.гхб_ТипыПомещений.Локация) Тогда
			_Результат = _СвойстваЛокации.Локация;
		ИначеЕсли (_ТипПомещения = Справочники.гхб_ТипыПомещений.Корпус) Тогда
			_Результат = _СвойстваЛокации.Корпус;
		ИначеЕсли (_ТипПомещения = Справочники.гхб_ТипыПомещений.ЭлементСтроения) Тогда
			_Результат = _СвойстваЛокации.ЭлементСтроения;
		КонецЕсли;
	КонецЕсли;
	
	Возврат _Результат;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьДанныеПомещения(_Помещение)
	
	Возврат Справочники.гхб_Помещения.ВернутьДанныеПомещения(_Помещение, Истина);
	
КонецФункции

&НаКлиенте
Процедура КорпусаКорпусПриИзменении(Элемент)
	
	_ТД = Элементы.Корпуса.ТекущиеДанные;
	
	_ТД.Корпус = ВернутьПомещениеУказанногоУровня(_ТД.Корпус, ПредопределенноеЗначение("Справочник.гхб_ТипыПомещений.Корпус"));
	ЗаполнитьЗначенияСвойств(_ТД, ВернутьДанныеПомещения(_ТД.Корпус));
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыСтроенийЭлементСтроенияПриИзменении(Элемент)
	
	_ТД = Элементы.ЭлементыСтроений.ТекущиеДанные;
	
	_ТД.ЭлементСтроения = ВернутьПомещениеУказанногоУровня(_ТД.ЭлементСтроения, ПредопределенноеЗначение("Справочник.гхб_ТипыПомещений.ЭлементСтроения"));
	ЗаполнитьЗначенияСвойств(_ТД, ВернутьДанныеПомещения(_ТД.ЭлементСтроения));
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияПомещениеПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	ЗаполнитьЗначенияСвойств(_ТД, ВернутьДанныеПомещения(_ТД.Помещение));
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияНетРабочихМестПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	Если _ТД.НетРабочихМест Тогда
		_ТД.ПлановоеКоличествоРабочихМест = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияПлановоеКоличествоРабочихМестПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(_ТД.ПлановоеКоличествоРабочихМест) Тогда
		_ТД.НетРабочихМест = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияПлановоеКоличествоРабочихМестНовоеПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(_ТД.ПлановоеКоличествоРабочихМестНовое) Тогда
		_ТД.НетРабочихМестНовое = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияНетРабочихМестНовоеПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	Если _ТД.НетРабочихМестНовое Тогда
		_ТД.ПлановоеКоличествоРабочихМестНовое = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыСтроенийЛокацияПриИзменении(Элемент)
	
	_ТД = Элементы.ЭлементыСтроений.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.Локация);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "Локация, Корпус");
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыСтроенийКорпусПриИзменении(Элемент)
	
	_ТД = Элементы.ЭлементыСтроений.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.Корпус);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "Локация, Корпус");
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыСтроенийЛокацияНоваяПриИзменении(Элемент)
	
	_ТД = Элементы.ЭлементыСтроений.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.ЛокацияНовая);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "ЛокацияНовая, КорпусНовый");
	УстановитьЗакрытьПоРодителюВИстина(_ТД, _ТД.КорпусНовый);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыСтроенийКорпусНовыйПриИзменении(Элемент)
	
	_ТД = Элементы.ЭлементыСтроений.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.КорпусНовый);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "ЛокацияНовая, КорпусНовый");
	УстановитьЗакрытьПоРодителюВИстина(_ТД, _ТД.КорпусНовый);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияЛокацияПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.Локация);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "Локация, Корпус, ЭлементСтроения");
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияКорпусПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.Корпус);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "Локация, Корпус, ЭлементСтроения");
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияЭлементСтроенияПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.ЭлементСтроения);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "Локация, Корпус, ЭлементСтроения");
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияЛокацияНоваяПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.ЛокацияНовая);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "ЛокацияНовая, КорпусНовый, ЭлементСтроенияНовый");
	УстановитьЗакрытьПоРодителюВИстина(_ТД, _ТД.ЭлементСтроенияНовый);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияКорпусНовыйПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.КорпусНовый);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "ЛокацияНовая, КорпусНовый, ЭлементСтроенияНовый");
	УстановитьЗакрытьПоРодителюВИстина(_ТД, _ТД.ЭлементСтроенияНовый);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияЭлементСтроенияНовыйПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	
	_СвойстваПомещения = ВернутьДанныеПомещения(_ТД.ЭлементСтроенияНовый);
	ЗаполнитьЗначенияСвойств(_ТД, _СвойстваПомещения, "ЛокацияНовая, КорпусНовый, ЭлементСтроенияНовый");
	УстановитьЗакрытьПоРодителюВИстина(_ТД, _ТД.ЭлементСтроенияНовый);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗакрытьПоРодителюВИстина(_ТекущиеДанные, _Родитель)
	
	Если НЕ (_ТекущиеДанные = Неопределено) Тогда
	
		Если НЕ (_ТекущиеДанные.Закрыть = _ТекущиеДанные.ЗакрытьНовое) И НЕ _ТекущиеДанные.ЗакрытьНовое И ЗначениеЗаполнено(_Родитель) Тогда
		
			_СвойстваПомещения = ВернутьДанныеПомещения(_Родитель);
			
			Если _СвойстваПомещения.Закрыть Тогда
				_ТекущиеДанные.ЗакрытьНовое = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КорпусаЗакрытьНовоеПриИзменении(Элемент)
	
	_ТД = Элементы.Корпуса.ТекущиеДанные;
	УстановитьЗакрытьПоРодителюВИстина(_ТД, _ТД.ЛокацияНовая);
		
КонецПроцедуры

&НаКлиенте
Процедура КорпусаЛокацияНоваяПриИзменении(Элемент)
	
	_ТД = Элементы.Корпуса.ТекущиеДанные;
	УстановитьЗакрытьПоРодителюВИстина(_ТД, _ТД.ЛокацияНовая);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыСтроенийЗакрытьНовоеПриИзменении(Элемент)
	
	_ТД = Элементы.ЭлементыСтроений.ТекущиеДанные;
	УстановитьЗакрытьПоРодителюВИстина(_ТД, _ТД.КорпусНовый);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияЗакрытьНовоеПриИзменении(Элемент)
	
	_ТД = Элементы.Помещения.ТекущиеДанные;
	УстановитьЗакрытьПоРодителюВИстина(_ТД, _ТД.ЭлементСтроенияНовый);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияВнутреннийНомерКТНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТД = Элементы.Помещения.ТекущиеДанные;
	
	Если НЕ (ТД = Неопределено) Тогда
		ВыборНомеровКТ(ТД.ВнутреннийНомерКТ, "ВнутреннийНомерКТ");
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВыборНомеровКТ(_Данные, _ИмяПоля)
	
	_Параметры = Новый Структура();
	_Параметры.Вставить("НомераКТ", _Данные); 
	
	_ДополнительныеПараметры = Новый Структура();
	_ДополнительныеПараметры.Вставить("ИмяПоля", _ИмяПоля);
	
	_ОписаниеОповещения = Новый ОписаниеОповещения("ВнутреннийНомерКТВыборЗавершение", ЭтотОбъект, _ДополнительныеПараметры);
	
	ОткрытьФорму("Документ.гхб_СвойстваПомещений.Форма.ФормаЗаполненияВнутреннихНомеровКТ", _Параметры, ЭтаФорма, , , , 
		_ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещенияВнутреннийНомерКТНовыйНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТД = Элементы.Помещения.ТекущиеДанные;
	
	Если НЕ (ТД = Неопределено) Тогда
		ВыборНомеровКТ(ТД.ВнутреннийНомерКТНовый, "ВнутреннийНомерКТНовый");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнутреннийНомерКТВыборЗавершение(_Значение, _ДополнительныеПараметры) Экспорт 
	
	Если НЕ (_Значение = Неопределено) Тогда
		ТД = Элементы.Помещения.ТекущиеДанные;
	
		Если НЕ (ТД = Неопределено) Тогда
			ТД[_ДополнительныеПараметры.ИмяПоля] = _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры