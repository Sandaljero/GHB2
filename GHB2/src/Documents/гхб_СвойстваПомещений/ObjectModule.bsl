
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ РегистрыСведений.гхб_СобытияОбъектовБД.СобытиеПоОбъектуБыло(Ссылка, Перечисления.гхб_ТипыСобытийОбъектовБД.ПервоеПроведениеДокумента) Тогда
		
		Если ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.СозданиеЛокации Тогда
			СозданиеЛокации();
		ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЛокации Тогда
			РедактированиеЛокации();
		ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.СозданиеКорпуса Тогда
			СозданиеКорпуса();
		ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеКорпуса Тогда
			РедактированиеКорпуса();
		ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.СозданиеЭлементаСтроения Тогда
			СозданиеЭлементаСтроения();
		ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЭлементаСтроения Тогда
			РедактированиеЭлементаСтроения();
		ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.СозданиеПомещения Тогда
			СозданиеПомещения();
		ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеПомещения Тогда
			РедактированиеПомещения();
		КонецЕсли;
		
		РегистрыСведений.гхб_СобытияОбъектовБД.ЗаписатьДанныеСобытияОбъекта(Ссылка, Перечисления.гхб_ТипыСобытийОбъектовБД.ПервоеПроведениеДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
         Возврат;
    КонецЕсли;
	
	Если (РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения) 
	   И РегистрыСведений.гхб_СобытияОбъектовБД.СобытиеПоОбъектуБыло(Ссылка, Перечисления.гхб_ТипыСобытийОбъектовБД.ПервоеПроведениеДокумента) Тогда
	   
	   	Отказ = Истина;
		
	Иначе
		
		Для Каждого Стр Из Локации Цикл
			Стр.Наименование = СокрЛП(Стр.Наименование);
			Стр.НаименованиеНовое = СокрЛП(Стр.НаименованиеНовое);
		КонецЦикла;
		
		Для Каждого Стр Из Корпуса Цикл
			Стр.Наименование = СокрЛП(Стр.Наименование);
			Стр.НаименованиеНовое = СокрЛП(Стр.НаименованиеНовое);
		КонецЦикла;
		
		Для Каждого Стр Из ЭлементыСтроений Цикл
			Стр.Наименование = СокрЛП(Стр.Наименование);
			Стр.НаименованиеНовое = СокрЛП(Стр.НаименованиеНовое);
		КонецЦикла;
		
		Для Каждого Стр Из Помещения Цикл
			Стр.Наименование = СокрЛП(Стр.Наименование);
			Стр.НаименованиеНовое = СокрЛП(Стр.НаименованиеНовое);
			Стр.УточняющаяИнформация = СокрЛП(Стр.УточняющаяИнформация);
			Стр.УточняющаяИнформацияНовая = СокрЛП(Стр.УточняющаяИнформацияНовая);
		КонецЦикла;
		
		_Результат = "";
		
		Если (ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЛокации) Тогда
			_Результат = ПроверитьДублированиеЗаписейРедактирования("Локации", "Локация");
		ИначеЕсли (ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеКорпуса) Тогда
			_Результат = ПроверитьДублированиеЗаписейРедактирования("Корпуса", "Корпус");
		ИначеЕсли (ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЭлементаСтроения) Тогда
			_Результат = ПроверитьДублированиеЗаписейРедактирования("ЭлементыСтроений", "ЭлементСтроения");
		ИначеЕсли (ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеПомещения) Тогда
			_Результат = ПроверитьДублированиеЗаписейРедактирования("Помещения", "Помещение");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(_Результат) Тогда
			Отказ = Истина;
			Сообщить(_Результат, СтатусСообщения.ОченьВажное);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.СозданиеЛокации Тогда
		ПроверяемыеРеквизиты.Добавить("Локации.Наименование");
		ПроверяемыеРеквизиты.Добавить("Локации.Руководитель");
	ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЛокации Тогда
		ПроверяемыеРеквизиты.Добавить("Локации.Локация");
		ПроверяемыеРеквизиты.Добавить("Локации.НаименованиеНовое");
		ПроверяемыеРеквизиты.Добавить("Локации.РуководительНовый");
	ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.СозданиеКорпуса Тогда
		ПроверяемыеРеквизиты.Добавить("Корпуса.Наименование");
		ПроверяемыеРеквизиты.Добавить("Корпуса.Локация");
	ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеКорпуса Тогда
		ПроверяемыеРеквизиты.Добавить("Корпуса.Корпус");
		ПроверяемыеРеквизиты.Добавить("Корпуса.ЛокацияНовая");
		ПроверяемыеРеквизиты.Добавить("Корпуса.НаименованиеНовое");
	ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.СозданиеЭлементаСтроения Тогда
		ПроверяемыеРеквизиты.Добавить("ЭлементыСтроений.Наименование");
		ПроверяемыеРеквизиты.Добавить("ЭлементыСтроений.Локация");
		ПроверяемыеРеквизиты.Добавить("ЭлементыСтроений.Корпус");
	ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеЭлементаСтроения Тогда
		ПроверяемыеРеквизиты.Добавить("ЭлементыСтроений.ЭлементСтроения");
		ПроверяемыеРеквизиты.Добавить("ЭлементыСтроений.ЛокацияНовая");
		ПроверяемыеРеквизиты.Добавить("ЭлементыСтроений.КорпусНовый");
		ПроверяемыеРеквизиты.Добавить("ЭлементыСтроений.НаименованиеНовое");
	ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.СозданиеПомещения Тогда
		//ПроверяемыеРеквизиты.Добавить("Помещения.Наименование");
		ПроверяемыеРеквизиты.Добавить("Помещения.Локация");
		ПроверяемыеРеквизиты.Добавить("Помещения.Корпус");
		ПроверяемыеРеквизиты.Добавить("Помещения.ЭлементСтроения");
		ПроверяемыеРеквизиты.Добавить("Помещения.Площадь");
		ПроверяемыеРеквизиты.Добавить("Помещения.ТипПомещения");
		//ПроверяемыеРеквизиты.Добавить("Помещения.ПлановоеКоличествоРабочихМест");
		ПроверяемыеРеквизиты.Добавить("Помещения.УточняющаяИнформация");
	ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийСвойстваПомещений.РедактированиеПомещения Тогда
		ПроверяемыеРеквизиты.Добавить("Помещения.Помещение");
		ПроверяемыеРеквизиты.Добавить("Помещения.ЛокацияНовая");
		ПроверяемыеРеквизиты.Добавить("Помещения.КорпусНовый");
		ПроверяемыеРеквизиты.Добавить("Помещения.ЭлементСтроенияНовый");
		//ПроверяемыеРеквизиты.Добавить("Помещения.НаименованиеНовое");
		ПроверяемыеРеквизиты.Добавить("Помещения.ПлощадьНовая");
		ПроверяемыеРеквизиты.Добавить("Помещения.ТипПомещенияНовый");
		//ПроверяемыеРеквизиты.Добавить("Помещения.ПлановоеКоличествоРабочихМестНовое");
		ПроверяемыеРеквизиты.Добавить("Помещения.УточняющаяИнформацияНовая");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(гхб_Ответственный) Тогда
		гхб_Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	гхб_Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СозданиеЛокации()
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого Стр Из Локации Цикл
			
			_Объект = Справочники.гхб_Помещения.СоздатьГруппу();
			_Объект.Наименование = Стр.Наименование;
			_Объект.УИДСинхронизации = Стр.УИДСинхронизации;
			_Объект.Записать();
			
			_СтрокаРуководители = Движения.гхб_РуководителиЛокаций.Добавить();
			_СтрокаРуководители.Регистратор = Ссылка;
			_СтрокаРуководители.Период = Дата;
			_СтрокаРуководители.Локация = _Объект.Ссылка;
			_СтрокаРуководители.Руководитель = Стр.Руководитель;
			
			_СтрокаИспользованиеПарковки = Движения.гхб_ИспользованиеЛокацийДляЗакрепленияПарковочныхМест.Добавить();
			_СтрокаИспользованиеПарковки.Регистратор = Ссылка;
			_СтрокаИспользованиеПарковки.Период = Дата;
			_СтрокаИспользованиеПарковки.Локация = _Объект.Ссылка;
			_СтрокаИспользованиеПарковки.ИспользоватьДляЗакрепленияПарковочныхМест = Стр.ИспользоватьДляЗакрепленияПарковочныхМест;
			
			_СтрокаСвойства = Движения.гхб_СвойстваПомещений.Добавить();
			_СтрокаСвойства.Регистратор = Ссылка;
			_СтрокаСвойства.Период = Дата;
			_СтрокаСвойства.Помещение = _Объект.Ссылка;
			_СтрокаСвойства.Локация = _Объект.Ссылка;
			_СтрокаСвойства.Наименование = Стр.Наименование;
			_СтрокаСвойства.НаименованиеПолное = Стр.Наименование;
			_СтрокаСвойства.ТипПомещения = Справочники.гхб_ТипыПомещений.Локация;
			
		КонецЦикла;
		
		Движения.гхб_РуководителиЛокаций.Записать();
		Движения.гхб_ИспользованиеЛокацийДляЗакрепленияПарковочныхМест.Записать();
		Движения.гхб_СвойстваПомещений.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

Процедура РедактированиеЛокации()
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого Стр Из Локации Цикл
			
			_НужноПереформироватьПолныеНаименованияДляВходящихЭлементов = Ложь;
			
			Если НЕ (Стр.Наименование = Стр.НаименованиеНовое) ИЛИ НЕ (Стр.Закрыть = Стр.ЗакрытьНовое) Тогда
				_Объект = Стр.Локация.ПолучитьОбъект();
				_Объект.Наименование = Стр.НаименованиеНовое;
				_Объект.Записать();
				
				_НужноПереформироватьПолныеНаименованияДляВходящихЭлементов = Истина;
			КонецЕсли;
			
			_СтрокаРуководители = Движения.гхб_РуководителиЛокаций.Добавить();
			_СтрокаРуководители.Регистратор = Ссылка;
			_СтрокаРуководители.Период = Дата;
			_СтрокаРуководители.Локация = Стр.Локация;
			_СтрокаРуководители.Руководитель = Стр.РуководительНовый;
			
			_СтрокаИспользованиеПарковки = Движения.гхб_ИспользованиеЛокацийДляЗакрепленияПарковочныхМест.Добавить();
			_СтрокаИспользованиеПарковки.Регистратор = Ссылка;
			_СтрокаИспользованиеПарковки.Период = Дата;
			_СтрокаИспользованиеПарковки.Локация = Стр.Локация;
			_СтрокаИспользованиеПарковки.ИспользоватьДляЗакрепленияПарковочныхМест = Стр.ИспользоватьДляЗакрепленияПарковочныхМестНовое;
			
			_СтрокаСвойства = Движения.гхб_СвойстваПомещений.Добавить();
			_СтрокаСвойства.Регистратор = Ссылка;
			_СтрокаСвойства.Период = Дата;
			_СтрокаСвойства.Помещение = Стр.Локация;
			_СтрокаСвойства.Локация = Стр.Локация;
			_СтрокаСвойства.Наименование = Стр.НаименованиеНовое;
			_СтрокаСвойства.НаименованиеПолное = Стр.НаименованиеНовое;
			_СтрокаСвойства.ТипПомещения = Справочники.гхб_ТипыПомещений.Локация;
			_СтрокаСвойства.Закрыть = Стр.ЗакрытьНовое;
			
			Если _НужноПереформироватьПолныеНаименованияДляВходящихЭлементов Тогда
				_Структура = Новый Структура();
				_Структура.Вставить("Закрыть", Стр.ЗакрытьНовое);
				
				ПереформироватьПолныеНаименованияДляВходящихЭлементов(Стр.Локация, "Локация", _Структура);
			КонецЕсли;
			
		КонецЦикла;
		
		Движения.гхб_РуководителиЛокаций.Записать();
		Движения.гхб_ИспользованиеЛокацийДляЗакрепленияПарковочныхМест.Записать();
		Движения.гхб_СвойстваПомещений.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

Процедура СозданиеКорпуса()
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого Стр Из Корпуса Цикл
			
			_Объект = Справочники.гхб_Помещения.СоздатьГруппу();
			_Объект.Родитель = Стр.Локация;
			_Объект.Наименование = Стр.Наименование;
			_Объект.УИДСинхронизации = Стр.УИДСинхронизации;
			_Объект.Записать();
			
			_СтрокаСвойства = Движения.гхб_СвойстваПомещений.Добавить();
			_СтрокаСвойства.Регистратор = Ссылка;
			_СтрокаСвойства.Период = Дата;
			_СтрокаСвойства.Помещение = _Объект.Ссылка;
			_СтрокаСвойства.Локация = Стр.Локация;
			_СтрокаСвойства.Корпус = _Объект.Ссылка;
			_СтрокаСвойства.Наименование = Стр.Наименование;
			_СтрокаСвойства.НаименованиеПолное = СформироватьПолноеНаименование(Стр.Локация, "Корпус: " + Стр.Наименование);
			_СтрокаСвойства.ТипПомещения = Справочники.гхб_ТипыПомещений.Корпус;
			
		КонецЦикла;
		
		Движения.гхб_СвойстваПомещений.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

Процедура РедактированиеКорпуса()
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого Стр Из Корпуса Цикл
			
			_НужноПереформироватьПолныеНаименованияДляВходящихЭлементов = Ложь;
			
			Если НЕ (Стр.Наименование = Стр.НаименованиеНовое) ИЛИ НЕ (Стр.Локация = Стр.ЛокацияНовая) Тогда
				_Объект = Стр.Корпус.ПолучитьОбъект();
				_Объект.Родитель = Стр.ЛокацияНовая;
				_Объект.Наименование = Стр.НаименованиеНовое;
				_Объект.Записать();
				
				_НужноПереформироватьПолныеНаименованияДляВходящихЭлементов = Истина;
			КонецЕсли;
			
			_СтрокаСвойства = Движения.гхб_СвойстваПомещений.Добавить();
			_СтрокаСвойства.Регистратор = Ссылка;
			_СтрокаСвойства.Период = Дата;
			_СтрокаСвойства.Помещение = Стр.Корпус;
			_СтрокаСвойства.Локация = Стр.ЛокацияНовая;
			_СтрокаСвойства.Корпус = Стр.Корпус;
			_СтрокаСвойства.Наименование = Стр.НаименованиеНовое;
			_СтрокаСвойства.НаименованиеПолное = СформироватьПолноеНаименование(Стр.ЛокацияНовая, "Корпус: " + Стр.НаименованиеНовое);
			_СтрокаСвойства.ТипПомещения = Справочники.гхб_ТипыПомещений.Корпус;
			_СтрокаСвойства.Закрыть = Стр.ЗакрытьНовое;
			
			Если _НужноПереформироватьПолныеНаименованияДляВходящихЭлементов Тогда
				_Структура = Новый Структура();
				_Структура.Вставить("Локация", Стр.ЛокацияНовая);
				_Структура.Вставить("Закрыть", Стр.ЗакрытьНовое);
				
				ПереформироватьПолныеНаименованияДляВходящихЭлементов(Стр.Корпус, "Корпус", _Структура);
			КонецЕсли;
			
		КонецЦикла;
		
		Движения.гхб_СвойстваПомещений.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

Процедура СозданиеЭлементаСтроения()
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого Стр Из ЭлементыСтроений Цикл
			
			_Объект = Справочники.гхб_Помещения.СоздатьГруппу();
			_Объект.Родитель = Стр.Корпус;
			_Объект.Наименование = Стр.Наименование;
			_Объект.УИДСинхронизации = Стр.УИДСинхронизации;
			_Объект.Записать();
			
			_СтрокаСвойства = Движения.гхб_СвойстваПомещений.Добавить();
			_СтрокаСвойства.Регистратор = Ссылка;
			_СтрокаСвойства.Период = Дата;
			_СтрокаСвойства.Помещение = _Объект.Ссылка;
			_СтрокаСвойства.Локация = Стр.Локация;
			_СтрокаСвойства.Корпус = Стр.Корпус;
			_СтрокаСвойства.ЭлементСтроения = _Объект.Ссылка;
			_СтрокаСвойства.Наименование = Стр.Наименование;
			_СтрокаСвойства.НаименованиеПолное = СформироватьПолноеНаименование(Стр.Корпус, Стр.Наименование);
			_СтрокаСвойства.ТипПомещения = Справочники.гхб_ТипыПомещений.ЭлементСтроения;
			
		КонецЦикла;
		
		Движения.гхб_СвойстваПомещений.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

Процедура РедактированиеЭлементаСтроения()
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого Стр Из ЭлементыСтроений Цикл
			
			_НужноПереформироватьПолныеНаименованияДляВходящихЭлементов = Ложь;
			
			Если НЕ (Стр.Наименование = Стр.НаименованиеНовое) ИЛИ НЕ (Стр.Корпус = Стр.КорпусНовый) Тогда
				_Объект = Стр.ЭлементСтроения.ПолучитьОбъект();
				_Объект.Родитель = Стр.КорпусНовый;
				_Объект.Наименование = Стр.НаименованиеНовое;
				_Объект.Записать();
				
				_НужноПереформироватьПолныеНаименованияДляВходящихЭлементов = Истина;
			КонецЕсли;
			
			_СтрокаСвойства = Движения.гхб_СвойстваПомещений.Добавить();
			_СтрокаСвойства.Регистратор = Ссылка;
			_СтрокаСвойства.Период = Дата;
			_СтрокаСвойства.Помещение = Стр.ЭлементСтроения;
			_СтрокаСвойства.Локация = Стр.ЛокацияНовая;
			_СтрокаСвойства.Корпус = Стр.КорпусНовый;
			_СтрокаСвойства.ЭлементСтроения = Стр.ЭлементСтроения;
			_СтрокаСвойства.Наименование = Стр.НаименованиеНовое;
			_СтрокаСвойства.НаименованиеПолное = СформироватьПолноеНаименование(Стр.КорпусНовый, Стр.НаименованиеНовое);
			_СтрокаСвойства.ТипПомещения = Справочники.гхб_ТипыПомещений.ЭлементСтроения;
			_СтрокаСвойства.Закрыть = Стр.ЗакрытьНовое;
			
			Если _НужноПереформироватьПолныеНаименованияДляВходящихЭлементов Тогда
				_Структура = Новый Структура();
				_Структура.Вставить("Локация", Стр.ЛокацияНовая);
				_Структура.Вставить("Корпус", Стр.КорпусНовый);
				_Структура.Вставить("Закрыть", Стр.ЗакрытьНовое);
				
				ПереформироватьПолныеНаименованияДляВходящихЭлементов(Стр.ЭлементСтроения, "ЭлементСтроения", _Структура);
			КонецЕсли;
			
		КонецЦикла;
		
		Движения.гхб_СвойстваПомещений.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

Процедура СозданиеПомещения()
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого Стр Из Помещения Цикл
			
			_НаименованиеСокращенное = ?(ЗначениеЗаполнено(Стр.ТипПомещения), СокрЛП(Стр.ТипПомещения), "") + 
				?(ЗначениеЗаполнено(Стр.НомерПомещения), ?(ЗначениеЗаполнено(Стр.ТипПомещения), ": ", "") + Формат(Стр.НомерПомещения, "ЧГ=0") + 
				?(ЗначениеЗаполнено(Стр.ДробнаяЧасть), "/" + Формат(Стр.ДробнаяЧасть, "ЧГ=0"), ""), "") + 
				?(ЗначениеЗаполнено(Стр.УточняющаяИнформация), " (" + СокрЛП(Стр.УточняющаяИнформация) + ")", "");
				
			_Наименование = СформироватьПолноеНаименование(Стр.ЭлементСтроения, _НаименованиеСокращенное);
			
			_Объект = Справочники.гхб_Помещения.СоздатьЭлемент();
			_Объект.Родитель = Стр.ЭлементСтроения;
			_Объект.Наименование = _Наименование;
			_Объект.УИДСинхронизации = Стр.УИДСинхронизации;
			_Объект.Записать();
			
			_СтрокаСвойства = Движения.гхб_СвойстваПомещений.Добавить();
			_СтрокаСвойства.Регистратор = Ссылка;
			_СтрокаСвойства.Период = Дата;
			_СтрокаСвойства.Помещение = _Объект.Ссылка;
			_СтрокаСвойства.Локация = Стр.Локация;
			_СтрокаСвойства.Корпус = Стр.Корпус;
			_СтрокаСвойства.ЭлементСтроения = Стр.ЭлементСтроения;
			_СтрокаСвойства.Наименование = _НаименованиеСокращенное;
			_СтрокаСвойства.НаименованиеПолное = _Наименование;
			_СтрокаСвойства.ТипПомещения = Стр.ТипПомещения;
			_СтрокаСвойства.НомерПомещения = Стр.НомерПомещения;
			_СтрокаСвойства.ДробнаяЧасть = Стр.ДробнаяЧасть;
			_СтрокаСвойства.Площадь = Стр.Площадь;
			_СтрокаСвойства.ПлановоеКоличествоРабочихМест = Стр.ПлановоеКоличествоРабочихМест;
			_СтрокаСвойства.НетРабочихМест = Стр.НетРабочихМест;
			_СтрокаСвойства.УточняющаяИнформация = Стр.УточняющаяИнформация;
			_СтрокаСвойства.НомерНаГенеральномПлане = Стр.НомерНаГенеральномПлане;
			_СтрокаСвойства.ДоступВПомещениеПоКлючу = Стр.ДоступВПомещениеПоКлючу;
			_СтрокаСвойства.НаличиеОхраннойСигнализации = Стр.НаличиеОхраннойСигнализации;
			_СтрокаСвойства.ВнутреннийНомерКТ = Стр.ВнутреннийНомерКТ;
			_СтрокаСвойства.НаличиеКТ = Стр.НаличиеКТ;
			_СтрокаСвойства.СогласованиеДоступаСВысшимРуководителем = Стр.СогласованиеДоступаСВысшимРуководителем;
			_СтрокаСвойства.ОбщегоПользования = Стр.ОбщегоПользования;
			
		КонецЦикла;
		
		Движения.гхб_СвойстваПомещений.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

Процедура РедактированиеПомещения()
	
	НачатьТранзакцию();
	
	Попытка
		
		Для Каждого Стр Из Помещения Цикл
			
			_НаименованиеСокращенное = ?(ЗначениеЗаполнено(Стр.ТипПомещенияНовый), СокрЛП(Стр.ТипПомещенияНовый), "") + 
				?(ЗначениеЗаполнено(Стр.НомерПомещенияНовый), ?(ЗначениеЗаполнено(Стр.ТипПомещенияНовый), ": ", "") + Формат(Стр.НомерПомещенияНовый, "ЧГ=0") + 
				?(ЗначениеЗаполнено(Стр.ДробнаяЧастьНовая), "/" + Формат(Стр.ДробнаяЧастьНовая, "ЧГ=0"), ""), "") +
				?(ЗначениеЗаполнено(Стр.УточняющаяИнформацияНовая), " (" + СокрЛП(Стр.УточняющаяИнформацияНовая) + ")", "");
				
			_Наименование = СформироватьПолноеНаименование(Стр.ЭлементСтроенияНовый, _НаименованиеСокращенное);
			
			Если НЕ (Стр.НомерПомещения = Стр.НомерПомещенияНовый) 
			 ИЛИ НЕ (Стр.ДробнаяЧасть = Стр.ДробнаяЧастьНовая)
			 ИЛИ НЕ (Стр.УточняющаяИнформация = Стр.УточняющаяИнформацияНовая)
			 ИЛИ НЕ (Стр.ЭлементСтроения = Стр.ЭлементСтроенияНовый) Тогда
			 
				_Объект = Стр.Помещение.ПолучитьОбъект();
				_Объект.Родитель = Стр.ЭлементСтроенияНовый;
				_Объект.Наименование = _Наименование;
				_Объект.Записать();
				
			КонецЕсли;
			
			_СтрокаСвойства = Движения.гхб_СвойстваПомещений.Добавить();
			_СтрокаСвойства.Регистратор = Ссылка;
			_СтрокаСвойства.Период = Дата;
			_СтрокаСвойства.Помещение = Стр.Помещение;
			_СтрокаСвойства.Локация = Стр.ЛокацияНовая;
			_СтрокаСвойства.Корпус = Стр.КорпусНовый;
			_СтрокаСвойства.ЭлементСтроения = Стр.ЭлементСтроенияНовый;
			_СтрокаСвойства.Наименование = _НаименованиеСокращенное;
			_СтрокаСвойства.НаименованиеПолное = _Наименование;
			_СтрокаСвойства.ТипПомещения = Стр.ТипПомещенияНовый;
			_СтрокаСвойства.НомерПомещения = Стр.НомерПомещенияНовый;
			_СтрокаСвойства.ДробнаяЧасть = Стр.ДробнаяЧастьНовая;
			_СтрокаСвойства.Площадь = Стр.ПлощадьНовая;
			_СтрокаСвойства.ПлановоеКоличествоРабочихМест = Стр.ПлановоеКоличествоРабочихМестНовое;
			_СтрокаСвойства.НетРабочихМест = Стр.НетРабочихМестНовое;
			_СтрокаСвойства.УточняющаяИнформация = Стр.УточняющаяИнформацияНовая;
			_СтрокаСвойства.НомерНаГенеральномПлане = Стр.НомерНаГенеральномПланеНовый;
			_СтрокаСвойства.ДоступВПомещениеПоКлючу = Стр.ДоступВПомещениеПоКлючуНовый;
			_СтрокаСвойства.НаличиеОхраннойСигнализации = Стр.НаличиеОхраннойСигнализацииНовое;
			_СтрокаСвойства.ВнутреннийНомерКТ = Стр.ВнутреннийНомерКТНовый;
			_СтрокаСвойства.НаличиеКТ = Стр.НаличиеКТНовое;
			_СтрокаСвойства.СогласованиеДоступаСВысшимРуководителем = Стр.СогласованиеДоступаСВысшимРуководителемНовое;
			_СтрокаСвойства.ОбщегоПользования = Стр.ОбщегоПользованияНовый;
			_СтрокаСвойства.Закрыть = Стр.ЗакрытьНовое;
			
		КонецЦикла;
		
		Движения.гхб_СвойстваПомещений.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
	КонецПопытки;
	
КонецПроцедуры

Функция СформироватьПолноеНаименование(_ПомещениеДляПервойЧасти, _ВтораяЧасть)
	
	Возврат Справочники.гхб_Помещения.ВернутьПолноеНаименование(_ПомещениеДляПервойЧасти) + "; " + _ВтораяЧасть;
	
КонецФункции

Функция СформироватьПолноеНаименованиеПоСоставляющим(_Локация, _Корпус, _ЭлементСтроения, _ТипПомещения, _Помещение);

	_Наименование = СокрЛП(_Локация);
	
	Если ЗначениеЗаполнено(_Корпус) Тогда
		_Наименование = _Наименование + "; Корпус: " + СокрЛП(_Корпус); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(_ЭлементСтроения) Тогда
		_Наименование = _Наименование + "; " + СокрЛП(_ЭлементСтроения); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(_ТипПомещения) Тогда
		_Наименование = _Наименование + "; " + СокрЛП(_ТипПомещения); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(_Помещение) Тогда
		_Наименование = _Наименование + ?(ЗначениеЗаполнено(_ТипПомещения), ": ", "") + СокрЛП(_Помещение); 
	КонецЕсли;
	
	Возврат _Наименование;
	
КонецФункции			

Процедура ПереформироватьПолныеНаименованияДляВходящихЭлементов(_РодительскоеПомещение, _ИмяКолонкиРодительскогоПомещения, _ПоляЗамены)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	гхб_СвойстваПомещенийСрезПоследних.Помещение КАК Помещение,
	               |	гхб_СвойстваПомещенийСрезПоследних.Наименование КАК Наименование,
	               |	гхб_СвойстваПомещенийСрезПоследних.НаименованиеПолное КАК НаименованиеПолное,
	               |	гхб_СвойстваПомещенийСрезПоследних.Локация КАК Локация,
	               |	гхб_СвойстваПомещенийСрезПоследних.Корпус КАК Корпус,
	               |	гхб_СвойстваПомещенийСрезПоследних.ЭлементСтроения КАК ЭлементСтроения,
	               |	гхб_СвойстваПомещенийСрезПоследних.НомерПомещения КАК НомерПомещения,
	               |	гхб_СвойстваПомещенийСрезПоследних.ДробнаяЧасть КАК ДробнаяЧасть,
	               |	гхб_СвойстваПомещенийСрезПоследних.Площадь КАК Площадь,
	               |	гхб_СвойстваПомещенийСрезПоследних.ТипПомещения КАК ТипПомещения,
	               |	гхб_СвойстваПомещенийСрезПоследних.ПлановоеКоличествоРабочихМест КАК ПлановоеКоличествоРабочихМест,
	               |	гхб_СвойстваПомещенийСрезПоследних.НетРабочихМест КАК НетРабочихМест,
	               |	гхб_СвойстваПомещенийСрезПоследних.УточняющаяИнформация КАК УточняющаяИнформация,
	               |	гхб_СвойстваПомещенийСрезПоследних.НомерНаГенеральномПлане КАК НомерНаГенеральномПлане,
	               |	гхб_СвойстваПомещенийСрезПоследних.Закрыть КАК Закрыть,
				   |	гхб_СвойстваПомещенийСрезПоследних.ТипПомещения.ЭтоПомещение КАК ЭтоПомещение
	               |ИЗ
	               |	РегистрСведений.гхб_СвойстваПомещений.СрезПоследних КАК гхб_СвойстваПомещенийСрезПоследних
	               |ГДЕ
	               |	гхб_СвойстваПомещенийСрезПоследних.Помещение <> &Помещение
	               |	И гхб_СвойстваПомещенийСрезПоследних." + _ИмяКолонкиРодительскогоПомещения + " = &Помещение";
	
	Запрос.УстановитьПараметр("Помещение", _РодительскоеПомещение);
	_СвойстваПомещений = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр Из _СвойстваПомещений Цикл
		
		_СтрокаСвойство = Движения.гхб_СвойстваПомещений.Добавить();
		
		ЗаполнитьЗначенияСвойств(_СтрокаСвойство, Стр);
		
		_СтрокаСвойство.Период = Дата;
		_СтрокаСвойство.Регистратор = Ссылка;
		_СтрокаСвойство.НаименованиеПолное = СформироватьПолноеНаименованиеПоСоставляющим(
			Стр.Локация, Стр.Корпус, Стр.ЭлементСтроения, Стр.ТипПомещения, ?(Стр.ЭтоПомещение, Стр.Наименование, ""));
			
		Для Каждого _СтрокаЗамены Из _ПоляЗамены Цикл
			_СтрокаСвойство[_СтрокаЗамены.Ключ] = _СтрокаЗамены.Значение;
		КонецЦикла;
			
	КонецЦикла;

КонецПроцедуры

Функция ПроверитьДублированиеЗаписейРедактирования(_ИмяТЧ, _ИмяКолонки)
	
	_КопияТЧ = ЭтотОбъект[_ИмяТЧ].Выгрузить(, _ИмяКолонки);
	_КопияТЧ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(1)));
	_КопияТЧ.ЗаполнитьЗначения(1, "Количество");
	_КопияТЧ.Свернуть(_ИмяКолонки, "Количество");
		
	_Результат = "";
	
	Для Каждого Стр Из _КопияТЧ Цикл
		Если Стр.Количество > 1 Тогда
			_Результат = _Результат + ?(ЗначениеЗаполнено(_Результат), "", "Дублирование значений редактируемых элементов:") + Символы.ПС +
				СокрЛП(Стр[_ИмяКолонки]);
		КонецЕсли;
	КонецЦикла;
	
	Возврат _Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
