
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	_ФЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСеанса.ТекущийПользователь, "ФизическоеЛицо");
	
	_Администратор = Документы.гхб_ЗакреплениеПомещенийЗаСотрудниками.ТекущийПользовательИмеетПолныеПраваДляЗакрепленияПомещенияЗаСотрудниками();
	_МассивЛокаций = Документы.гхб_ЗакреплениеПомещенийЗаСотрудниками.ВернутьСписокДоступныхЛокацийДляТекущегоПользователя();
	
	НовыйПараметр = Новый ПараметрВыбора("ФильтрПоПомещениям", _МассивЛокаций);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	
	Элементы.Помещение.ПараметрыВыбора = НовыеПараметры;
	Элементы.СотрудникиПомещение.ПараметрыВыбора = НовыеПараметры;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	ЭтотОбъект.ТолькоПросмотр = НЕ _Администратор ИЛИ ДокументБылПроведен(Объект.Ссылка);
	
	Элементы.Помещение.Видимость = (Объект.ТипЗакрепления = 0);
	Элементы.Сотрудник.Видимость = (Объект.ТипЗакрепления = 1);
	Элементы.СотрудникиПомещение.Видимость = (Объект.ТипЗакрепления = 1);
	Элементы.СотрудникиСотрудник.Видимость = (Объект.ТипЗакрепления = 0);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДокументБылПроведен(_Ссылка)
	
	Возврат РегистрыСведений.гхб_СобытияОбъектовБД.СобытиеПоОбъектуБыло(_Ссылка, Перечисления.гхб_ТипыСобытийОбъектовБД.ПервоеПроведениеДокумента);
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПередУдалением(Элемент, Отказ)
	
	_ТекущиеДанные = Элементы.Сотрудники.ТекущиеДанные;
	
	Если НЕ (_ТекущиеДанные = Неопределено) И _ТекущиеДанные.СуществующийДоступ Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиЗакрытьПриИзменении(Элемент)
	
	_ТекущиеДанные = Элементы.Сотрудники.ТекущиеДанные;
	
	Если НЕ (_ТекущиеДанные = Неопределено) И _ТекущиеДанные.Закрыть И НЕ _ТекущиеДанные.СуществующийДоступ Тогда
		
		_ТекущиеДанные.Закрыть = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	
	ЗагрузитьАктуальныхСотрудников(Объект.Помещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьАктуальныхСотрудников(_Помещение)
	
	Объект.Сотрудники.Очистить();
	
	_МассивСотрудников = ВернутьАктуальныхСотрудниковДляПомещения(_Помещение);
	
	Для Каждого _Структура Из _МассивСотрудников Цикл
		
		НС = Объект.Сотрудники.Добавить();
		НС.Помещение = _Помещение;
		НС.Сотрудник = _Структура.Сотрудник;
		НС.РежимРаботы = _Структура.РежимРаботы;
		НС.РежимРаботыСтарый = _Структура.РежимРаботы;
		НС.Плавающее = _Структура.Плавающее;
		НС.ПлавающееСтарое = _Структура.Плавающее;
		НС.СуществующийДоступ = Истина;
			
	КонецЦикла;
	
	Объект.Сотрудники.Сортировать("СуществующийДоступ УБЫВ, Сотрудник ВОЗР");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьАктуальныхСотрудниковДляПомещения(_Помещение)
	
	_Массив = Новый Массив();
	
	Если ТипЗнч(_Помещение) = Тип("СправочникСсылка.гхб_ГруппыПомещений") Тогда
		_Массив = РегистрыСведений.гхб_ЗакреплениеСотрудниковЗаГруппойПомещений.ВернутьАктуальныхСотрудниковДляГруппыПомещений(_Помещение);
	ИначеЕсли ТипЗнч(_Помещение) = Тип("СправочникСсылка.гхб_Помещения") Тогда
		_Массив = РегистрыСведений.гхб_ЗакреплениеСотрудниковЗаПомещениями.ВернутьАктуальныхСотрудниковДляПомещения(_Помещение);
	КонецЕсли;
	
	Возврат _Массив; 
	
КонецФункции

&НаКлиенте
Процедура СотрудникиПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Сотрудники.ТекущиеДанные;
	
	Если НЕ (_ТекущиеДанные = Неопределено) Тогда
		Элементы.СотрудникиСотрудник.ТолькоПросмотр = _ТекущиеДанные.СуществующийДоступ;
		Элементы.СотрудникиПомещение.ТолькоПросмотр = _ТекущиеДанные.СуществующийДоступ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗакрепленияПриИзменении(Элемент)
	
	Объект.Сотрудники.Очистить();
	
	Если (Объект.ТипЗакрепления = 0) Тогда
		Объект.Сотрудник = ПредопределенноеЗначение("Справочник.гхб_ФизическиеЛица.ПустаяСсылка");
	Иначе
		Объект.Помещение = Неопределено;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	ЗагрузитьАктуальныеПомещения(Объект.Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьАктуальныеПомещения(_Сотрудник)
	
	Объект.Сотрудники.Очистить();
	
	_МассивПомещения = ВернутьАктуальныеПомещенияДляСотрудника(_Сотрудник);
	
	Для Каждого _Структура Из _МассивПомещения Цикл
		
		НС = Объект.Сотрудники.Добавить();
		НС.Помещение = ?(_Структура.Свойство("Помещение"), _Структура.Помещение, _Структура.ГруппаПомещений);
		НС.Сотрудник = _Сотрудник;
		НС.РежимРаботы = _Структура.РежимРаботы;
		НС.РежимРаботыСтарый = _Структура.РежимРаботы;
		НС.Плавающее = _Структура.Плавающее;
		НС.ПлавающееСтарое = _Структура.Плавающее;
		НС.СуществующийДоступ = Истина;
			
	КонецЦикла;
	
	Объект.Сотрудники.Сортировать("СуществующийДоступ УБЫВ, Помещение ВОЗР");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьАктуальныеПомещенияДляСотрудника(_Сотрудник)
	
	_Массив = РегистрыСведений.гхб_ЗакреплениеСотрудниковЗаГруппойПомещений.ВернутьАктуальныеГруппыПомещенийДляСотрудника(_Сотрудник);
	_МассивПомещения = РегистрыСведений.гхб_ЗакреплениеСотрудниковЗаПомещениями.ВернутьАктуальныеПомещенияДляСотрудника(_Сотрудник);
	
	Для Каждого Стр Из _МассивПомещения Цикл
		_Массив.Добавить(Стр);
	КонецЦикла;
	
	Возврат _Массив; 
	
КонецФункции

&НаКлиенте
Процедура СотрудникиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
	
		ТД = Элементы.Сотрудники.ТекущиеДанные;
		ТД.СуществующийДоступ = Ложь;
		ТД.Закрыть = Ложь;
		
		Если НЕ ЗначениеЗаполнено(ТД.Сотрудник) Тогда
			ТД.Сотрудник = Объект.Сотрудник;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ТД.Помещение) Тогда
			ТД.Помещение = Объект.Помещение;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры
