
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	ИнициализироватьПараметрыИУстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("ЭтоМиграция") И ПараметрыЗаписи.ЭтоМиграция Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ЭтоМиграция", Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьТекстДляСтрокПоДопУслугам();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьТекстДляСтрокПоДопУслугам();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура БазаХолдингаПриИзменении(Элемент)

	Объект.Лимиты.Очистить();
	Объект.ДополнительныеУслуги.Очистить();
	
	ИнициализироватьПараметрыИУстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаДействияПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.Лимиты.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекущийНомерТелефона = ТекДанные.НомерТелефона;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыПередУдалением(Элемент, Отказ)
	
	МассивДанных = Элементы.Лимиты.ВыделенныеСтроки;
	Для каждого СтрУдаления Из МассивДанных Цикл
		
		ТекСтрокаУдаления = Объект.Лимиты.НайтиПоИдентификатору(СтрУдаления);
		УдалитьДопУслуги(ТекСтрокаУдаления.НомерТелефона);
	
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыНомерТелефонаПриИзменении(Элемент)
	
	ТекДанные = Элементы.Лимиты.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		
		ЗаполнитьДанныеПоНомеруТелефона(ТекДанные, ТекДанные.НомерТелефона);
		ТекущийНомерТелефона = ТекДанные.НомерТелефона;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыДопУслугиСтрокаОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекДанные = Элементы.Лимиты.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		
		СтандартнаяОбработка = Ложь;
		
		МассивДопУслуг = Новый Массив;
		
		ДопУслуги = Объект.ДополнительныеУслуги.НайтиСтроки(Новый Структура("НомерТелефона", ТекДанные.НомерТелефона));
		Для каждого Стр Из ДопУслуги Цикл
			
			СтруктураДопУслуга = Новый Структура;
			СтруктураДопУслуга.Вставить("НомерТелефона");
			СтруктураДопУслуга.Вставить("Услуга");
			СтруктураДопУслуга.Вставить("Сумма");
			
			ЗаполнитьЗначенияСвойств(СтруктураДопУслуга, Стр);
			
			МассивДопУслуг.Добавить(СтруктураДопУслуга);
		
		КонецЦикла; 
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("МассивДопУслуг", МассивДопУслуг);
		ПараметрыОткрытия.Вставить("НомерТелефона", ТекДанные.НомерТелефона);
		
		ОткрытьФорму("Документ.гхб_ЛимитНаМобильнуюСвязь.Форма.ФормаВыбораДопУслуг", ПараметрыОткрытия, ЭтотОбъект, , , , 
						Новый ОписаниеОповещения("ОбработкаЗакрытияФормыДопУслуг", ЭтотОбъект));
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыФизЛицоБазыХолдингаПриИзменении(Элемент)
	
	ТекДанные = Элементы.Лимиты.ТекущиеДанные;
	Если ТекДанные <> Неопределено 
			И ТипЗнч(ТекДанные.ФизЛицоБазыХолдинга) = Тип("СправочникСсылка.гхб_ФизическиеЛицаБазХолдинга") Тогда
		
		ТекДанные.ОтветственныйБазыХолдинга = ТекДанные.ФизЛицоБазыХолдинга;
		СтруктураЦФОДолжность = ВернутьЦФОДолжностьФизЛица(Объект.ДатаНачалаДействия, Объект.БазаХолдинга, 
															ТекДанные.ФизЛицоБазыХолдинга);
		ЗаполнитьЗначенияСвойств(ТекДанные, СтруктураЦФОДолжность); 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛимитыЦеновойПакетПриИзменении(Элемент)
	
	ТекДанные = Элементы.Лимиты.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекДанные.ЛимитВнутренний = ВернутьЗначениеЛимита(ТекДанные.ЦеновойПакет);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура МиграцияВБазуРИБ(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаКомандыМиграцияВБазуРИБ", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Вы действительно хотите отправить документ в базу РИБ? Документ будет сохранен и проведен!'; 
							|uk = 'Ви дійсно хочете відправити документ в базу РІБ? Документ буде збережено і проведено!'");
	ЗаголовокВопроса = НСтр("ru = 'Миграция документа в базу РИБ'; uk = 'Міграція документу в базу РІБ'");
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,  КодВозвратаДиалога.Да, ЗаголовокВопроса);				
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьПараметрыФормы()

	УчетПоЛицевымСчетам = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.БазаХолдинга, 
																	"УчетМобСвязиВРазрезеЛицевыхСчетов");

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыМиграцияВБазуРИБ(Результат, ДопПараметры) Экспорт
	
	// Перед записью документа устанавливается признак того, что миграции еще не было
	// Если обмен проходит удачно этот флаг снимается
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Объект.ИзмененНоНеМигрировал = Истина;
		
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		ПараметрыЗаписи.Вставить("ЭтоМиграция", Истина);
		
		Если Записать(ПараметрыЗаписи) И ОтправитьДокументВБазуРИБ(Объект.Ссылка) Тогда
			ЭтотОбъект.Прочитать();
			УстановитьВидимостьДоступность();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтправитьДокументВБазуРИБ(Ссылка)
	Возврат Документы.гхб_ЛимитНаМобильнуюСвязь.ОтправитьДокументВБазуРИБ(Ссылка);
КонецФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ЛимитыНомерЛицевогоСчета.Видимость = УчетПоЛицевымСчетам;
	Элементы.ФормаМиграцияВБазуРИБ.Видимость = НЕ Объект.ЗапрещеноИзменение;
	Элементы.БазаХолдинга.ТолькоПросмотр = ЗначениеЗаполнено(Объект.УИДИзБазыХолдинга);
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачалаДействия) ИЛИ НЕ ЗначениеЗаполнено(Объект.БазаХолдинга) Тогда
		Элементы.Лимиты.ТолькоПросмотр = Истина;
		Элементы.ДополнительныеУслуги.ТолькоПросмотр = Истина;
	Иначе	
	    Элементы.Лимиты.ТолькоПросмотр = Ложь;
		Элементы.ДополнительныеУслуги.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПараметрыИУстановитьВидимость()

	ИнициализироватьПараметрыФормы();
	УстановитьВидимостьДоступность();
	
	Если УчетПоЛицевымСчетам Тогда
		СформироватьСписокВыбораЛицевыхСчетов();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СформироватьСписокВыбораЛицевыхСчетов()

	Элементы.ЛимитыНомерЛицевогоСчета.СписокВыбора.Очистить();
	
	ТЗЛицевыхСчетов = ВернутьТЗЛицевыхСчетов();
	Для каждого СтрЛицевойСчет Из ТЗЛицевыхСчетов Цикл	
		 Элементы.ЛимитыНомерЛицевогоСчета.СписокВыбора.Добавить(СтрЛицевойСчет.НомерЛицевогоСчета);	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВернутьТЗЛицевыхСчетов()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("БазаХолдинга", Объект.БазаХолдинга);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	гхб_ЛицевыеСчетаМобильнойСвязи.НомерЛицевогоСчета КАК НомерЛицевогоСчета
		|ИЗ
		|	РегистрСведений.гхб_ЛицевыеСчетаМобильнойСвязи КАК гхб_ЛицевыеСчетаМобильнойСвязи
		|ГДЕ
		|	гхб_ЛицевыеСчетаМобильнойСвязи.БазаХолдинга = &БазаХолдинга";
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДанныеПоНомеруТелефона(ТекДанные, ВыбранныйНомер)
	
	УдалитьДопУслуги(ТекущийНомерТелефона);
	ЗаполнитьДанныеПоТелефону(ВыбранныйНомер);
	
	СруктураДанных = ВернутьТекстДляСтрокиПоДопУслугам(ВыбранныйНомер, Объект.ДополнительныеУслуги);
	ЗаполнитьЗначенияСвойств(ТекДанные, СруктураДанных);
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДопУслуги(ТекущийНомер)
	
	СтруктураПоиска = Новый Структура("НомерТелефона", ТекущийНомер);
	НайдСтрокиТекущийНомер = Объект.ДополнительныеУслуги.НайтиСтроки(СтруктураПоиска);
	
	Для каждого СтрУдаления Из НайдСтрокиТекущийНомер Цикл
		Объект.ДополнительныеУслуги.Удалить(СтрУдаления);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоТелефону(ВыбранныйНомер)
		
	Запрос = Новый Запрос;	
	Запрос.УстановитьПараметр("ДатаСреза", Объект.ДатаНачалаДействия);
	Запрос.УстановитьПараметр("БазаХолднига", Объект.БазаХолдинга);
	Запрос.УстановитьПараметр("НомерТелефона", ВыбранныйНомер);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.НомерТелефона КАК НомерТелефона,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.ФизЛицоБазыХолдинга КАК ФизЛицоБазыХолдинга,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.ЛимитВнутренний КАК ЛимитВнутренний,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.ЛимитМеждународнойСвязи КАК ЛимитМеждународнойСвязи,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.Использование КАК Использование,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.БезлимитныйВнутренний КАК БезлимитныйВнутренний,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.БезлимитнаяМеждународнаяСвязь КАК БезлимитнаяМеждународнаяСвязь,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.ЦеновойПакет КАК ЦеновойПакет,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.ОтветственныйБазыХолдинга КАК ОтветственныйБазыХолдинга,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.ТипУстройства КАК ТипУстройства,
	|	гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Должность КАК Должность,
	|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.ЦФО КАК ЦФО
	|ИЗ
	|	РегистрСведений.гхб_СоответствиеНомеровТелефоновФизЛицам.СрезПоследних(
	|			&ДатаСреза,
	|			БазаХолдинга = &БазаХолднига
	|				И НомерТелефона = &НомерТелефона) КАК гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гхб_РаботникиОрганизацийБазХолдинга.СрезПоследних(&ДатаСреза, БазаХолдинга = &БазаХолднига) КАК гхб_РаботникиОрганизацийБазХолдингаСрезПоследних
	|		ПО гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.БазаХолдинга = гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.БазаХолдинга
	|			И гхб_СоответствиеНомеровТелефоновФизЛицамСрезПоследних.ФизЛицоБазыХолдинга = гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Сотрудник.ФизЛицоБазыХолдинга
	|			И гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.гхб_ПричиныИзмененияСостояния.Увольнение)
	|			И гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.гхб_ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	гхб_СоответствиеНомеровТелефоновДопУслугамСрезПоследних.НомерТелефона КАК НомерТелефона,
	|	гхб_СоответствиеНомеровТелефоновДопУслугамСрезПоследних.Услуга КАК Услуга,
	|	гхб_СоответствиеНомеровТелефоновДопУслугамСрезПоследних.Сумма КАК Сумма
	|ИЗ
	|	РегистрСведений.гхб_СоответствиеНомеровТелефоновДопУслугам.СрезПоследних(
	|			&ДатаСреза,
	|			БазаХолдинга = &БазаХолднига
	|				И НомерТелефона = &НомерТелефона) КАК гхб_СоответствиеНомеровТелефоновДопУслугамСрезПоследних
	|ГДЕ
	|	гхб_СоответствиеНомеровТелефоновДопУслугамСрезПоследних.Сумма <> 0";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаТелефон = РезультатЗапроса[0].Выбрать();
	Пока ВыборкаТелефон.Следующий() Цикл
		
		НайдСтроки = Объект.Лимиты.НайтиСтроки(Новый Структура("НомерТелефона", ВыборкаТелефон.НомерТелефона));
		Для каждого СтрНайд Из НайдСтроки Цикл
			ЗаполнитьЗначенияСвойств(СтрНайд, ВыборкаТелефон);
		КонецЦикла;
	
	КонецЦикла;
	
	ВыборкаДопУслуги = РезультатЗапроса[1].Выбрать();
	Пока ВыборкаДопУслуги.Следующий() Цикл
	
		НовСтр = Объект.ДополнительныеУслуги.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, ВыборкаДопУслуги);
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗакрытияФормыДопУслуг(Результат, ДопПараметры) Экспорт

	Если Результат <> Неопределено Тогда
			
		УдалитьДопУслуги(Результат.НомерТелефона);
					
		Для каждого СтрДопУслуг Из Результат.ТаблицаДопУслуг Цикл
		
			НовСтр = Объект.ДополнительныеУслуги.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, СтрДопУслуг);
			НовСтр.НомерТелефона = Результат.НомерТелефона;
		
		КонецЦикла;
		
		ТекДанные = Элементы.Лимиты.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			
			СруктураДанных = ВернутьТекстДляСтрокиПоДопУслугам(ТекДанные.НомерТелефона, Объект.ДополнительныеУслуги);
			ЗаполнитьЗначенияСвойств(ТекДанные, СруктураДанных);
			
		КонецЕсли;
	
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстДляСтрокПоДопУслугам()

	Для каждого СтрЛимит Из Объект.Лимиты Цикл
		
		СруктураДанных = ВернутьТекстДляСтрокиПоДопУслугам(СтрЛимит.НомерТелефона, Объект.ДополнительныеУслуги);
		ЗаполнитьЗначенияСвойств(СтрЛимит, СруктураДанных);	
		
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВернутьТекстДляСтрокиПоДопУслугам(НомерТелефона, ДополнительныеУслуги)

	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ДопУслугиСтрока", "");
	СтруктураВозврата.Вставить("ДопУслугиСумма", 0);
	Разделитель = "";
	
	НайтиСтрокиДопУслуги = ДополнительныеУслуги.НайтиСтроки(Новый Структура("НомерТелефона", НомерТелефона));
	Для каждого СтрДопУслуги Из НайтиСтрокиДопУслуги Цикл
	
		СтруктураВозврата.ДопУслугиСтрока = СтруктураВозврата.ДопУслугиСтрока + Разделитель + СтрДопУслуги.Услуга + " - "
												+ СтрДопУслуги.Сумма + " грн";
		СтруктураВозврата.ДопУслугиСумма = СтруктураВозврата.ДопУслугиСумма + СтрДопУслуги.Сумма;
		Разделитель = ", ";
	
	КонецЦикла;
	
	Возврат СтруктураВозврата;

КонецФункции

&НаСервереБезКонтекста
Функция ВернутьЦФОДолжностьФизЛица(ДатаНачалаДействия, БазаХолдинга, ФизЛицо)
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Должность");
	СтруктураВозврата.Вставить("ЦФО");
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Должность КАК Должность,
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.ЦФО КАК ЦФО
		|ИЗ
		|	РегистрСведений.гхб_РаботникиОрганизацийБазХолдинга.СрезПоследних(
		|			&ДатаНачалаДействия,
		|			БазаХолдинга = &БазаХолдинга
		|				И Сотрудник.ФизЛицоБазыХолдинга = &ФизЛицо) КАК гхб_РаботникиОрганизацийБазХолдингаСрезПоследних
		|ГДЕ
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.гхб_ПричиныИзмененияСостояния.Увольнение)
		|	И гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.гхб_ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)";
	
	Запрос.УстановитьПараметр("ДатаНачалаДействия", ДатаНачалаДействия);
	Запрос.УстановитьПараметр("БазаХолдинга", БазаХолдинга);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьЗначениеЛимита(ЦеновойПакет)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЦеновойПакет, "ЕжемесячнаяСтоимость");
КонецФункции

#КонецОбласти