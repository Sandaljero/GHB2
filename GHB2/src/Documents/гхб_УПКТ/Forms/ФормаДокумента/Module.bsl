
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	УстановитьВидимостьДоступностьПолей();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	УстановитьВидимостьДоступностьПолей();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РазослатьПисьма(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.еМайлРуководителя) 
		Или Не ЗначениеЗаполнено(Объект.еМайлФинансиста) 
		Или Не ЗначениеЗаполнено(Объект.еМайлСотрудника) 
		Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнены все поля Email!");
		Возврат;
		
	КонецЕсли;
	
	РазослатьПисьмаНаСервере();
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФизЛицоПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.БазаХолдинга) И ЗначениеЗаполнено(Объект.ФизЛицо) Тогда
		
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораБазыХолдинга", ЭтотОбъект);
		ОткрытьФорму("Документ.гхб_УПКТ.Форма.ФормаВыбораБазыХолдинга", 
									Новый Структура("ФизЛицо", Объект.ФизЛицо), 
														ЭтаФорма,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		
		Если Не ЗаполнитьВозможныеПоля() Тогда
			
			Если ЗначениеЗаполнено(Объект.ФизЛицо) Тогда
				
				Режим = РежимДиалогаВопрос.ДаНет;
				Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОНенайденномСотруднике", ЭтотОбъект);
				ПоказатьВопрос(Оповещение, "В базе " + Объект.БазаХолдинга + " не найден работающий сотрудник, искать в других базах?", Режим, 0);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БазаХолдингаПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьПолей();
	ЗаполнитьОчиститьОрганизациюБазыХолдинга()
	
КонецПроцедуры

&НаКлиенте
Процедура РуководительПриИзменении(Элемент)
	
	стТелефон = гхб_ОбщегоНазначенияСервер.ПолучитьТелефонПоМестуРаботы(Объект.Руководитель);
	стЕмайл = гхб_ОбщегоНазначенияСервер.ПолучитьЭлектроннуюПочтуПоФизЛицуПоМестуРаботы(Объект.Руководитель);
	
	Если стТелефон.ЕстьДанные Тогда
		Объект.ТелефонРуководителя = стТелефон.Телефон;
	Иначе
		Объект.ТелефонРуководителя = "";
	КонецЕсли;
	
	Если стЕмайл.ЕстьДанные Тогда
		Объект.еМайлРуководителя = стЕмайл.Мыло;
	Иначе
		Объект.еМайлРуководителя = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФинансистПриИзменении(Элемент)
	
	стТелефон = гхб_ОбщегоНазначенияСервер.ПолучитьТелефонПоМестуРаботы(Объект.Финансист);
	стЕмайл = гхб_ОбщегоНазначенияСервер.ПолучитьЭлектроннуюПочтуПоФизЛицуПоМестуРаботы(Объект.Финансист);
	
	Если стТелефон.ЕстьДанные Тогда
		Объект.ТелефонФинансиста = стТелефон.Телефон;
	Иначе
		Объект.ТелефонФинансиста = "";
	КонецЕсли;
	
	Если стЕмайл.ЕстьДанные Тогда
		Объект.еМайлФинансиста = стЕмайл.Мыло;
	Иначе
		Объект.еМайлФинансиста = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦФОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("БазаХолдинга", ЗначениеРеквизитаОбъекта(Объект.Плательщик, "БазаХолдинга"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораЦФО", ЭтотОбъект);
	ОткрытьФорму("Справочник.гхб_ЦФО.Форма.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаСервере
Функция ЗначениеРеквизитаОбъекта(СсылкаДляПолученияРеквизита, ИмяРеквизита)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаДляПолученияРеквизита, ИмяРеквизита);
КонецФункции // ЗначениеРеквизитаОбъекта()

#КонецОбласти

#Область Прочее

&НаСервере
Функция ЗаполнитьВозможныеПоля()
	
	Если Не ЗначениеЗаполнено(Объект.ФизЛицо) Тогда
		
		Объект.Сотрудник = Неопределено;
		Объект.Дивизион = Неопределено;
		Объект.Должность = Неопределено;
		Объект.ТелефонСотрудника = Неопределено;
		Объект.еМайлСотрудника = Неопределено;
		Объект.ЦФО = Неопределено;
		Объект.Руководитель = Неопределено;
		Объект.Финансист = Неопределено;
		Объект.ТелефонРуководителя = Неопределено;
		Объект.ТелефонФинансиста = Неопределено;
		Объект.еМайлРуководителя = Неопределено;
		Объект.еМайлФинансиста = Неопределено;
		Возврат Ложь;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	гхб_СотрудникиБазХолдинга.Ссылка КАК Сотрудник,
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Дивизион КАК Дивизион,
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Должность КАК Должность,
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.ЦФО КАК ЦФО
		|ИЗ
		|	РегистрСведений.гхб_РаботникиОрганизацийБазХолдинга.СрезПоследних КАК гхб_РаботникиОрганизацийБазХолдингаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_СотрудникиБазХолдинга КАК гхб_СотрудникиБазХолдинга
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛица КАК гхб_ФизическиеЛица
		|				ПО гхб_ФизическиеЛицаБазХолдинга.ФизЛицоТекущейБазы = гхб_ФизическиеЛица.Ссылка
		|					И (гхб_ФизическиеЛица.Ссылка = &ФизЛицо)
		|			ПО гхб_СотрудникиБазХолдинга.ФизЛицоБазыХолдинга = гхб_ФизическиеЛицаБазХолдинга.Ссылка
		|				И (гхб_СотрудникиБазХолдинга.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.гхб_ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы))
		|				И (гхб_СотрудникиБазХолдинга.БазаХолдинга = &БазаХолдинга)
		|		ПО гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Сотрудник = гхб_СотрудникиБазХолдинга.Ссылка
		|ГДЕ
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.гхб_ПричиныИзмененияСостояния.Увольнение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	гхб_СотрудникиБазХолдинга.Ссылка КАК Сотрудник,
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Дивизион КАК Дивизион,
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Должность КАК Должность,
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.ЦФО КАК ЦФО
		|ИЗ
		|	РегистрСведений.гхб_РаботникиОрганизацийБазХолдинга.СрезПоследних КАК гхб_РаботникиОрганизацийБазХолдингаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_СотрудникиБазХолдинга КАК гхб_СотрудникиБазХолдинга
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛицаБазХолдинга КАК гхб_ФизическиеЛицаБазХолдинга
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гхб_ФизическиеЛица КАК гхб_ФизическиеЛица
		|				ПО гхб_ФизическиеЛицаБазХолдинга.ФизЛицоТекущейБазы = гхб_ФизическиеЛица.Ссылка
		|					И (гхб_ФизическиеЛица.Ссылка = &ФизЛицо)
		|			ПО гхб_СотрудникиБазХолдинга.ФизЛицоБазыХолдинга = гхб_ФизическиеЛицаБазХолдинга.Ссылка
		|				И (гхб_СотрудникиБазХолдинга.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.гхб_ВидыЗанятостиВОрганизации.Совместительство))
		|				И (гхб_СотрудникиБазХолдинга.БазаХолдинга = &БазаХолдинга)
		|		ПО гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.Сотрудник = гхб_СотрудникиБазХолдинга.Ссылка
		|ГДЕ
		|	гхб_РаботникиОрганизацийБазХолдингаСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.гхб_ПричиныИзмененияСостояния.Увольнение)";
		
		Запрос.УстановитьПараметр("ФизЛицо", Объект.ФизЛицо);
		Запрос.УстановитьПараметр("БазаХолдинга", Объект.БазаХолдинга);
		
		резПакет = Запрос.ВыполнитьПакет();
		
		Если Не резПакет[0].Пустой() Тогда
			
			Выборка = резПакет[0].Выбрать();
			Выборка.Следующий();
			Объект.Сотрудник = Выборка.Сотрудник;
			Объект.Дивизион = Выборка.Дивизион;
			Объект.Должность = Выборка.Должность;
			Объект.ЦФО = Выборка.ЦФО;
			стТелефонСотрудника = гхб_ОбщегоНазначенияСервер.ПолучитьДанныеДляСтрокаОтправкиСМС(Объект.ФизЛицо);
			стЕмайл = гхб_ОбщегоНазначенияСервер.ПолучитьЭлектроннуюПочтуПоФизЛицуПоМестуРаботы(Объект.ФизЛицо);
			
			Если стТелефонСотрудника.ЕстьДанные Тогда
				Объект.ТелефонСотрудника = стТелефонСотрудника.Телефон;
			Иначе
				Объект.ТелефонСотрудника = "";
			КонецЕсли;
			
			Если стЕмайл.ЕстьДанные Тогда
				Объект.еМайлСотрудника = стЕмайл.Мыло;
			Иначе
				Объект.еМайлСотрудника = "";
			КонецЕсли;
			
			Возврат Истина;
			
		КонецЕсли;
		
		Если Не резПакет[1].Пустой() Тогда
			
			Выборка = резПакет[1].Выбрать();
			Выборка.Следующий();
			Объект.Сотрудник = Выборка.Сотрудник;
			Объект.Дивизион = Выборка.Дивизион;
			Объект.Должность = Выборка.Должность;
			Объект.ЦФО = Выборка.ЦФО;
			стТелефонСотрудника = гхб_ОбщегоНазначенияСервер.ПолучитьДанныеДляСтрокаОтправкиСМС(Объект.ФизЛицо);
			стЕмайл = гхб_ОбщегоНазначенияСервер.ПолучитьЭлектроннуюПочтуПоФизЛицуПоМестуРаботы(Объект.ФизЛицо);
			
			Если стТелефонСотрудника.ЕстьДанные Тогда
				Объект.ТелефонСотрудника = стТелефонСотрудника.Телефон;
			Иначе
				Объект.ТелефонСотрудника = "";
			КонецЕсли;
			
			Если стЕмайл.ЕстьДанные Тогда
				Объект.еМайлСотрудника = стЕмайл.Мыло;
			Иначе
				Объект.еМайлСотрудника = "";
			КонецЕсли;
			
			Возврат Истина;
			
		КонецЕсли;
		
		Объект.Сотрудник = Неопределено;
		Объект.Дивизион = Неопределено;
		Объект.Должность = Неопределено;
		Объект.ТелефонСотрудника = "";
		Объект.еМайлСотрудника = Неопределено;
		Объект.ЦФО = Неопределено;
		Объект.Руководитель = Неопределено;
		Объект.Финансист = Неопределено;
		Объект.ТелефонРуководителя = Неопределено;
		Объект.ТелефонФинансиста = Неопределено;
		Объект.еМайлРуководителя = Неопределено;
		Объект.еМайлФинансиста = Неопределено;
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции // ЗаполнитьВозможныеПоля()

&НаСервере
Процедура УстановитьВидимостьДоступностьПолей()
	
	Элементы.ГруппаФизЛицо.Доступность = ЗначениеЗаполнено(Объект.БазаХолдинга);
	Элементы.ГруппаДанныеПоСотруднику.Доступность = ЗначениеЗаполнено(Объект.БазаХолдинга);
	
	Если Объект.ВидОперации = Перечисления.гхб_ВидыОперацийУПКТ.ОткрытиеКабинета 
		Или Объект.ВидОперации = Перечисления.гхб_ВидыОперацийУПКТ.БлокированиеКабинета Тогда
		Элементы.РазослатьПисьма.Видимость = Не Объект.ПисьмоОтправлено;
	Иначе
		Элементы.РазослатьПисьма.Видимость = Ложь;
	КонецЕсли;
	
	Если Не гхб_ОбщегоНазначенияСервер.ПроверитьНаРабочуюБазу() Тогда
		Элементы.РазослатьПисьма.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры // УстановитьДоступностьПолей()

&НаСервере
Процедура ЗаполнитьОчиститьОрганизациюБазыХолдинга()

	Если Не ЗначениеЗаполнено(Объект.БазаХолдинга) Тогда
		
		Объект.Организация = Неопределено;
		Объект.Руководитель = Неопределено;
		Объект.Финансист = Неопределено;
		Объект.ТелефонРуководителя = Неопределено;
		Объект.ТелефонФинансиста = Неопределено;
		Объект.еМайлРуководителя = Неопределено;
		Объект.еМайлФинансиста = Неопределено;
		Объект.ТелефонСотрудника = Неопределено;
		Объект.еМайлСотрудника = Неопределено;
		Объект.Сотрудник = Неопределено;
		Объект.Дивизион = Неопределено;
		Объект.ЦФО = Неопределено;
		Объект.Руководитель = Неопределено;
		Объект.Плательщик = Неопределено;
		Объект.Должность = Неопределено;
		Возврат;
	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	гхб_ОрганизацииБазХолдинга.Ссылка КАК Организация
	|ИЗ
	|	Справочник.гхб_ОрганизацииБазХолдинга КАК гхб_ОрганизацииБазХолдинга
	|ГДЕ
	|	гхб_ОрганизацииБазХолдинга.БазаХолдинга = &БазаХолдинга
	|	И НЕ гхб_ОрганизацииБазХолдинга.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("БазаХолдинга", Объект.БазаХолдинга);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Объект.Организация = Выборка.Организация;
		Объект.Плательщик = Выборка.Организация;
		
	Иначе
		
		Объект.Организация = Неопределено;
		Объект.Плательщик = Неопределено;
		
	КонецЕсли;
	
	Объект.ТелефонСотрудника = Неопределено;
	Объект.еМайлСотрудника = Неопределено;
	Объект.Сотрудник = Неопределено;
	Объект.Дивизион = Неопределено;
	Объект.ЦФО = Неопределено;
	Объект.Руководитель = Неопределено;
	Объект.Финансист = Неопределено;
	Объект.ТелефонРуководителя = Неопределено;
	Объект.ТелефонФинансиста = Неопределено;
	Объект.еМайлРуководителя = Неопределено;
	Объект.Должность = Неопределено;
	Объект.еМайлФинансиста = Неопределено;

КонецПроцедуры // ЗаполнитьОчиститьОрганизациюБазыХолдинга()

&НаКлиенте
Процедура ПослеЗакрытияФормыВыбораБазыХолдинга(Результат, ПараметрыОповещения) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.БазаХолдинга = Результат.БазаХолдинга;
	УстановитьВидимостьДоступностьПолей();
	ЗаполнитьОчиститьОрганизациюБазыХолдинга();
	ЗаполнитьВозможныеПоля();
	
КонецПроцедуры // ПослеЗакрытияФормыВыбораБазыХолдинга()

&НаКлиенте
Процедура ПослеЗакрытияВопросаОНенайденномСотруднике(Результат, ПараметрыОповещения) Экспорт

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораБазыХолдинга", ЭтотОбъект);
	ОткрытьФорму("Документ.гхб_УПКТ.Форма.ФормаВыбораБазыХолдинга", 
								Новый Структура("ФизЛицо", Объект.ФизЛицо), 
													ЭтаФорма,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры // ПослеЗакрытияВопросаОНенайденномСотруднике()

&НаКлиенте
Процедура ПослеЗакрытияФормыВыбораЦФО(Результат, ПараметрыОповещения) Экспорт 

	Если Результат <> Неопределено Тогда
		Объект.ЦФО = Результат;
	КонецЕсли;

КонецПроцедуры // ПослеЗакрытияФормыВыбораЦФО()

&НаСервере
Процедура РазослатьПисьмаНаСервере()
	
	ОтправитьПисьмоСотруднику();
	
	Если Объект.ВидОперации = Перечисления.гхб_ВидыОперацийУПКТ.ОткрытиеКабинета Тогда
		ОтправитьПисьмоРуководителям();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьПисьмоСотруднику()
	
	УстановитьПривилегированныйРежим(Истина);
	стСообщение = Новый Структура;
	Тема = ?(Объект.ВидОперации = Перечисления.гхб_ВидыОперацийУПКТ.ОткрытиеКабинета, "Открытие кабинета такси", "Блокирование кабинета такси");
	стСообщение.Вставить("Тема", гхб_ВзаимодействияСервер.СформироватьСтандартнуюТемуПисьма(Тема));
	
	Если Объект.ВидОперации = Перечисления.гхб_ВидыОперацийУПКТ.ОткрытиеКабинета Тогда
	
		Текст = "
		|<p>Добрый день, " + Строка(Объект.ФизЛицо) + "! </p>
		|<p>Уведомляем, что Вам был открыт персональный кабинет такси!</p>
		|<p>Логин : " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ПерсональныйКабинетТакси, "Логин") + " <b> пароль: паролем авторизации служат последние шесть цифр номера вашего мобильного телефона.</b></p>
		|<p><b>В целях безопасности, после первого входа в кабинет, обязательно поменяйте его на более надёжный!</b></p>
		|<p>Если у Вас возникнут сложности с активацией ПКТ напишите нам на эмейл: SLM Coordination <br /><a href=" + """" + "mailto:slm.coordination@slm.ua?subject=Проблема активации кабинета такси по сотруднику " + Строка(Объект.ФизЛицо) + """" + ">slm.coordination@slm.ua</a></p>
		|	<p>Или позвоните по телефону +38 067 690 77 57.</p>
		|	
		|	<p>Хорошего дня!</p>";
	
	Иначе
	
		Текст = "
		|<p>Добрый день, " + Строка(Объект.ФизЛицо) + "! </p>
		|<p>Уведомляем, что Ваш персональный кабинет такси заблокирован!</p>
		|<p>Если у Вас возникли вопросы по блокировке ПКТ напишите нам на эмейл: SLM Coordination <br /><a href=" + """" + "mailto:slm.coordination@slm.ua?subject=Вопрос по блокировке кабинета такси по сотруднику " + Строка(Объект.ФизЛицо) + """" + ">slm.coordination@slm.ua</a></p>
		|	<p>Или позвоните по телефону +38 067 690 77 57.</p>
		|	
		|	<p>Хорошего дня!</p>";
	
	КонецЕсли;
	
	стСообщение.Вставить("Текст", Текст);
	
	мВложения = Новый Массив;
	стСообщение.Вставить("Вложения", мВложения);
	
	сзПолучатели = Новый СписокЗначений;
	сзПолучатели.Добавить(Объект.еМайлСотрудника, Объект.еМайлСотрудника);
	стСообщение.Вставить("Получатель", сзПолучатели);
	
	стДополнительныеПараметры = Новый Структура;
	стДополнительныеПараметры.Вставить("ФорматПисьма", Перечисления.СпособыРедактированияЭлектронныхПисем.HTML);
	стДополнительныеПараметры.Вставить("Наименование");
	
	стСообщение.Вставить("ДополнительныеПараметры", стДополнительныеПараметры);
	
	стРезультатОтправки = Взаимодействия.СоздатьПисьмо(стСообщение, Справочники.гхб_СлужебныеЗначения.УчетнаяЗаписьdeveloper1c.Значение);
	
	Если стРезультатОтправки.Отправлено Тогда
	
		Объект.ПисьмоОтправлено = Истина;
		Записать();
		УстановитьВидимостьДоступностьПолей();
		ОбщегоНазначения.СообщитьПользователю("Письма отправлены.");
		
	Иначе
		ОбщегоНазначения.СообщитьПользователю(стРезультатОтправки.ОписаниеОшибки);
	КонецЕсли;

КонецПроцедуры // ОтправитьПисьмоСотруднику()

&НаСервере
Процедура ОтправитьПисьмоРуководителям()

	УстановитьПривилегированныйРежим(Истина);
	стСообщение = Новый Структура;
	Тема = ?(Объект.ВидОперации = Перечисления.гхб_ВидыОперацийУПКТ.ОткрытиеКабинета, "Открытие кабинета такси", "Блокирование кабинета такси");
	стСообщение.Вставить("Тема", гхб_ВзаимодействияСервер.СформироватьСтандартнуюТемуПисьма(Тема));
	
	Текст = "
	|<p>Добрый день! </p>
	|<p>Уведомляем, что сотруднику " + Строка(Объект.ФизЛицо) + " был открыт персональный кабинет такси!</p>
	|<p>Если Вы не согласовывали эту опцию для данного сотрудника напишите нам на эмейл: SLM Coordination <br /><a href=" + """" + "mailto:slm.coordination@slm.ua?subject=Уточнение согласования кабинета такси по сотруднику " + Строка(Объект.ФизЛицо) + """" + ">slm.coordination@slm.ua</a></p>
	|	
	|	<p>Спасибо, хорошего дня!</p>";
		
	стСообщение.Вставить("Текст", Текст);
	
	мВложения = Новый Массив;
	стСообщение.Вставить("Вложения", мВложения);
	
	сзПолучатели = Новый СписокЗначений;
	сзПолучатели.Добавить(Объект.еМайлРуководителя, Объект.еМайлРуководителя);
	сзПолучатели.Добавить(Объект.еМайлФинансиста, Объект.еМайлФинансиста);
	стСообщение.Вставить("Получатель", сзПолучатели);
	
	стДополнительныеПараметры = Новый Структура;
	стДополнительныеПараметры.Вставить("ФорматПисьма", Перечисления.СпособыРедактированияЭлектронныхПисем.HTML);
	стДополнительныеПараметры.Вставить("Наименование");
	
	стСообщение.Вставить("ДополнительныеПараметры", стДополнительныеПараметры);
	
	Взаимодействия.СоздатьПисьмо(стСообщение, Справочники.гхб_СлужебныеЗначения.УчетнаяЗаписьdeveloper1c.Значение);

КонецПроцедуры // ОтправитьПисьмоРуководителям()

#КонецОбласти