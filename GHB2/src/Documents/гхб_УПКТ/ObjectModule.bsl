
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ВидОперации = Перечисления.гхб_ВидыОперацийУПКТ.БлокированиеКабинета Тогда
		
		стВозврат = НайтиАктивнуюЗаписьПоКабинету();
		
		Если Не стВозврат.ЕстьАктивнаяЗапись Тогда
			ОбщегоНазначения.СообщитьПользователю("Нет записи по открытию кабинета!",,,, Отказ);
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.гхб_ВидыОперацийУПКТ.ОткрытиеКабинета Тогда
		
		стВозврат = НайтиАктивнуюЗаписьПоКабинету();
		
		Если стВозврат.ЕстьАктивнаяЗапись Тогда
			
			текстСообщения = "По кабинету " 
										+ ПерсональныйКабинетТакси 
										+ " есть активная запись документ " + стВозврат.Регистратор
										+ " Сотрудник " + стВозврат.Сотрудник
										+ " Организация " + стВозврат.Организация
										+ " БазаХолдинга " + стВозврат.БазаХолдинга + " !";
			ОбщегоНазначения.СообщитьПользователю(текстСообщения,,,, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	СоздатьЗаписатьДвиженияДанныхКабинетовТакси();
	
КонецПроцедуры

Процедура ПроверитьДокументыБудущихПериодов(Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	гхб_УПКТ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.гхб_УПКТ КАК гхб_УПКТ
	|ГДЕ
	|	гхб_УПКТ.Дата > &Дата
	|	И гхб_УПКТ.Ссылка <> &Ссылка
	|	И гхб_УПКТ.Проведен
	|	И гхб_УПКТ.ПерсональныйКабинетТакси = &ПерсональныйКабинетТакси";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПерсональныйКабинетТакси", ПерсональныйКабинетТакси);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбщегоНазначения.СообщитьПользователю("В базе существует проведенный документ датой старше даты документа " + Выборка.Ссылка + " редактирование документа запрещено!",,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЗаписатьДвиженияДанныхКабинетовТакси()

	Движения.гхб_ДанныеПерсональныхКабинетовТакси.Записывать = Истина;
	Движение = Движения.гхб_ДанныеПерсональныхКабинетовТакси.Добавить();
	Движение.Период = Дата;
	Движение.ПерсональныйКабинетТакси = ПерсональныйКабинетТакси;
	Движение.БазаХолдинга = БазаХолдинга;
	Движение.Организация = Организация;
	Движение.Сотрудник = Сотрудник;
	Движение.Блокирован = ВидОперации = Перечисления.гхб_ВидыОперацийУПКТ.БлокированиеКабинета;
	Движение.Дивизион = Дивизион;
	Движение.ЦФО = ЦФО;
	Движение.Плательщик = Плательщик;
	Движение.Должность = Должность;

КонецПроцедуры

Функция НайтиАктивнуюЗаписьПоКабинету()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	гхб_ДанныеПерсональныхКабинетовТаксиСрезПоследних.Регистратор КАК Регистратор,
	|	гхб_ДанныеПерсональныхКабинетовТаксиСрезПоследних.Сотрудник КАК Сотрудник,
	|	гхб_ДанныеПерсональныхКабинетовТаксиСрезПоследних.Организация КАК Организация,
	|	гхб_ДанныеПерсональныхКабинетовТаксиСрезПоследних.БазаХолдинга КАК БазаХолдинга
	|ИЗ
	|	РегистрСведений.гхб_ДанныеПерсональныхКабинетовТакси.СрезПоследних(
	|			&ДатаСреза,
	|			Регистратор <> &Ссылка
	|				И ПерсональныйКабинетТакси = &ПерсональныйКабинетТакси) КАК гхб_ДанныеПерсональныхКабинетовТаксиСрезПоследних
	|ГДЕ
	|	НЕ гхб_ДанныеПерсональныхКабинетовТаксиСрезПоследних.Блокирован";
	
	Запрос.УстановитьПараметр("ДатаСреза", НачалоДня(Дата) - 1);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПерсональныйКабинетТакси", ПерсональныйКабинетТакси);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Новый Структура("ЕстьАктивнаяЗапись,Регистратор,Сотрудник,Организация,БазаХолдинга", Истина,
																									Выборка.Регистратор,
																									Выборка.Сотрудник,
																									Выборка.Организация,
																									Выборка.БазаХолдинга);
	Иначе
		Возврат Новый Структура("ЕстьАктивнаяЗапись", Ложь);
	КонецЕсли;
	
КонецФункции // НайтиАктивнуюЗаписьПоКабинету()

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.гхб_УПКТ") Тогда
		
		БазаХолдинга = ДанныеЗаполнения.БазаХолдинга;
		Дивизион = ДанныеЗаполнения.Дивизион;
		Должность = ДанныеЗаполнения.Должность;
		еМайлРуководителя = ДанныеЗаполнения.еМайлРуководителя;
		еМайлСотрудника = ДанныеЗаполнения.еМайлСотрудника;
		еМайлФинансиста = ДанныеЗаполнения.еМайлФинансиста;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Организация = ДанныеЗаполнения.Организация;
		Ответственный = ДанныеЗаполнения.Ответственный;
		ПерсональныйКабинетТакси = ДанныеЗаполнения.ПерсональныйКабинетТакси;
		Плательщик = ДанныеЗаполнения.Плательщик;
		Руководитель = ДанныеЗаполнения.Руководитель;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Основание = ДанныеЗаполнения.Ссылка;
		ТелефонРуководителя = ДанныеЗаполнения.ТелефонРуководителя;
		ТелефонСотрудника = ДанныеЗаполнения.ТелефонСотрудника;
		ТелефонФинансиста = ДанныеЗаполнения.ТелефонФинансиста;
		ФизЛицо = ДанныеЗаполнения.ФизЛицо;
		Финансист = ДанныеЗаполнения.Финансист;
		ЦФО = ДанныеЗаполнения.ЦФО;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
         Возврат;
    КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение 
		Или РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения  Тогда
		ПроверитьДокументыБудущихПериодов(Отказ);
	КонецЕсли;
	
КонецПроцедуры


