
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(гхб_Ответственный) Тогда
		гхб_Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	гхб_Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
         Возврат;
    КонецЕсли;
	
	Если (РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения) 
	   И РегистрыСведений.гхб_СобытияОбъектовБД.СобытиеПоОбъектуБыло(Ссылка, Перечисления.гхб_ТипыСобытийОбъектовБД.ПервоеПроведениеДокумента) Тогда
	   
	   	Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ РегистрыСведений.гхб_СобытияОбъектовБД.СобытиеПоОбъектуБыло(Ссылка, Перечисления.гхб_ТипыСобытийОбъектовБД.ПервоеПроведениеДокумента) Тогда
		
		ДвиженияПоЗакреплениюОтветственныхЗаКонсервациюПомещений();
		
		РегистрыСведений.гхб_СобытияОбъектовБД.ЗаписатьДанныеСобытияОбъекта(Ссылка, Перечисления.гхб_ТипыСобытийОбъектовБД.ПервоеПроведениеДокумента);
		
		ЗаполнитьОтветственныхЗаКонсервациюПомещенийВДополнительно();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДвиженияПоЗакреплениюОтветственныхЗаКонсервациюПомещений()
	
	Для Каждого Стр Из Помещения Цикл
		
		Если (Стр.СуществующийДоступ И Стр.Закрыть) ИЛИ (НЕ Стр.СуществующийДоступ И НЕ Стр.Закрыть) Тогда
		
			_Строка = Движения.гхб_ОтветственныеЗаКонсервациюПомещений.Добавить();
			_Строка.Период = Дата;
			_Строка.Регистратор = Ссылка;
			_Строка.Помещение = Стр.Помещение;
			_Строка.ОтветственныйЗаКонсервациюПомещения = Стр.ОтветственныйЗаКонсервациюПомещения;
			_Строка.Закрыть = Стр.Закрыть;
		
		КонецЕсли;
		
	КонецЦикла;
		
	Движения.гхб_ОтветственныеЗаКонсервациюПомещений.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьОтветственныхЗаКонсервациюПомещенийВДополнительно()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	гхб_ОтветственныеЗаКонсервациюПомещенийСрезПоследних.Помещение КАК Помещение
	               |ПОМЕСТИТЬ _Помещения
	               |ИЗ
	               |	РегистрСведений.гхб_ОтветственныеЗаКонсервациюПомещений.СрезПоследних КАК гхб_ОтветственныеЗаКонсервациюПомещенийСрезПоследних
	               |ГДЕ
	               |	гхб_ОтветственныеЗаКонсервациюПомещенийСрезПоследних.Регистратор = &Регистратор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	гхб_ОтветственныеЗаКонсервациюПомещенийСрезПоследних.Помещение
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Помещение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	гхб_ОтветственныеЗаКонсервациюПомещенийСрезПоследних.Помещение КАК Помещение,
	               |	гхб_ОтветственныеЗаКонсервациюПомещенийСрезПоследних.ОтветственныйЗаКонсервациюПомещения КАК ОтветственныйЗаКонсервациюПомещения,
	               |	гхб_ОтветственныеЗаКонсервациюПомещенийСрезПоследних.Закрыть КАК Закрыть
	               |ИЗ
	               |	РегистрСведений.гхб_ОтветственныеЗаКонсервациюПомещений.СрезПоследних КАК гхб_ОтветственныеЗаКонсервациюПомещенийСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ _Помещения КАК _Помещения
	               |		ПО гхб_ОтветственныеЗаКонсервациюПомещенийСрезПоследних.Помещение = _Помещения.Помещение
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Помещение,
	               |	ОтветственныйЗаКонсервациюПомещения
	               |ИТОГИ ПО
	               |	Помещение
	               |АВТОУПОРЯДОЧИВАНИЕ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ _Помещения";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	ВыборкаПомещения = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПомещения.Следующий() Цикл
		
		_Стр = "";
		
		ВыборкаОтветственные = ВыборкаПомещения.Выбрать();
		
		Пока ВыборкаОтветственные.Следующий() Цикл
			Если НЕ ВыборкаОтветственные.Закрыть Тогда
				_Стр = _Стр + ?(ЗначениеЗаполнено(_Стр), "; ", "") + СокрЛП(ВыборкаОтветственные.ОтветственныйЗаКонсервациюПомещения);
			КонецЕсли;
		КонецЦикла;
		
		МЗ = РегистрыСведений.гхб_ДополнительныеСвойстваПомещений.СоздатьМенеджерЗаписи();
		МЗ.Помещение = ВыборкаПомещения.Помещение;
		МЗ.Прочитать();
		
		МЗ.Помещение = ВыборкаПомещения.Помещение;
		МЗ.ОтветственныеЗаКонсервациюПомещения = _Стр;
		МЗ.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли